

================================================================
== Vitis HLS Report for 'prepare_input_buf_func_2_Pipeline_VITIS_LOOP_51_2_VITIS_LOOP_52_3'
================================================================
* Date:           Fri Jul 18 13:03:36 2025

* Version:        2025.1 (Build 6135595 on May 21 2025)
* Project:        hls_component
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.239 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  |                    Pipeline                    |
    |   min   |   max   |    min    |    max    |  min |  max |                      Type                      |
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+
    |     1303|     1303|  13.030 us|  13.030 us|  1300|  1300|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_51_2_VITIS_LOOP_52_3  |     1301|     1301|        10|          4|          4|   324|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 4, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.90>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [cnn_layer.cpp:52]   --->   Operation 13 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [cnn_layer.cpp:51]   --->   Operation 14 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 15 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.29ns)   --->   "%store_ln0 = store i9 0, i9 %indvar_flatten"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 17 [1/1] (1.29ns)   --->   "%store_ln51 = store i5 0, i5 %i" [cnn_layer.cpp:51]   --->   Operation 17 'store' 'store_ln51' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 18 [1/1] (1.29ns)   --->   "%store_ln52 = store i5 0, i5 %j" [cnn_layer.cpp:52]   --->   Operation 18 'store' 'store_ln52' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 19 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i9 %indvar_flatten" [cnn_layer.cpp:51]   --->   Operation 20 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.36ns)   --->   "%icmp_ln51 = icmp_eq  i9 %indvar_flatten_load, i9 324" [cnn_layer.cpp:51]   --->   Operation 21 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (1.36ns)   --->   "%add_ln51_1 = add i9 %indvar_flatten_load, i9 1" [cnn_layer.cpp:51]   --->   Operation 22 'add' 'add_ln51_1' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln51 = br i1 %icmp_ln51, void %for.inc14, void %VITIS_LOOP_62_6.preheader.exitStub" [cnn_layer.cpp:51]   --->   Operation 23 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%j_load = load i5 %j" [cnn_layer.cpp:52]   --->   Operation 24 'load' 'j_load' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%i_load = load i5 %i" [cnn_layer.cpp:51]   --->   Operation 25 'load' 'i_load' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.02ns)   --->   "%add_ln51 = add i5 %i_load, i5 1" [cnn_layer.cpp:51]   --->   Operation 26 'add' 'add_ln51' <Predicate = (!icmp_ln51)> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (1.02ns)   --->   "%icmp_ln52 = icmp_eq  i5 %j_load, i5 18" [cnn_layer.cpp:52]   --->   Operation 27 'icmp' 'icmp_ln52' <Predicate = (!icmp_ln51)> <Delay = 1.02> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.97ns)   --->   "%select_ln51 = select i1 %icmp_ln52, i5 0, i5 %j_load" [cnn_layer.cpp:51]   --->   Operation 28 'select' 'select_ln51' <Predicate = (!icmp_ln51)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.97ns)   --->   "%select_ln51_1 = select i1 %icmp_ln52, i5 %add_ln51, i5 %i_load" [cnn_layer.cpp:51]   --->   Operation 29 'select' 'select_ln51_1' <Predicate = (!icmp_ln51)> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 30 [9/9] (2.60ns)   --->   "%urem_ln51 = urem i5 %select_ln51_1, i5 3" [cnn_layer.cpp:51]   --->   Operation 30 'urem' 'urem_ln51' <Predicate = (!icmp_ln51)> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.02ns)   --->   "%add_ln52 = add i5 %select_ln51, i5 1" [cnn_layer.cpp:52]   --->   Operation 31 'add' 'add_ln52' <Predicate = (!icmp_ln51)> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.29ns)   --->   "%store_ln51 = store i9 %add_ln51_1, i9 %indvar_flatten" [cnn_layer.cpp:51]   --->   Operation 32 'store' 'store_ln51' <Predicate = (!icmp_ln51)> <Delay = 1.29>
ST_1 : Operation 33 [1/1] (1.29ns)   --->   "%store_ln51 = store i5 %select_ln51_1, i5 %i" [cnn_layer.cpp:51]   --->   Operation 33 'store' 'store_ln51' <Predicate = (!icmp_ln51)> <Delay = 1.29>
ST_1 : Operation 34 [1/1] (1.29ns)   --->   "%store_ln52 = store i5 %add_ln52, i5 %j" [cnn_layer.cpp:52]   --->   Operation 34 'store' 'store_ln52' <Predicate = (!icmp_ln51)> <Delay = 1.29>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln52 = br void %for.inc" [cnn_layer.cpp:52]   --->   Operation 35 'br' 'br_ln52' <Predicate = (!icmp_ln51)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.60>
ST_2 : Operation 36 [8/9] (2.60ns)   --->   "%urem_ln51 = urem i5 %select_ln51_1, i5 3" [cnn_layer.cpp:51]   --->   Operation 36 'urem' 'urem_ln51' <Predicate = (!icmp_ln51)> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [9/9] (2.60ns)   --->   "%urem_ln52 = urem i5 %select_ln51, i5 3" [cnn_layer.cpp:52]   --->   Operation 37 'urem' 'urem_ln52' <Predicate = (!icmp_ln51)> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.60>
ST_3 : Operation 38 [7/9] (2.60ns)   --->   "%urem_ln51 = urem i5 %select_ln51_1, i5 3" [cnn_layer.cpp:51]   --->   Operation 38 'urem' 'urem_ln51' <Predicate = (!icmp_ln51)> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [8/9] (2.60ns)   --->   "%urem_ln52 = urem i5 %select_ln51, i5 3" [cnn_layer.cpp:52]   --->   Operation 39 'urem' 'urem_ln52' <Predicate = (!icmp_ln51)> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 2.60>
ST_4 : Operation 40 [6/9] (2.60ns)   --->   "%urem_ln51 = urem i5 %select_ln51_1, i5 3" [cnn_layer.cpp:51]   --->   Operation 40 'urem' 'urem_ln51' <Predicate = (!icmp_ln51)> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [7/9] (2.60ns)   --->   "%urem_ln52 = urem i5 %select_ln51, i5 3" [cnn_layer.cpp:52]   --->   Operation 41 'urem' 'urem_ln52' <Predicate = (!icmp_ln51)> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 2.60>
ST_5 : Operation 42 [5/9] (2.60ns)   --->   "%urem_ln51 = urem i5 %select_ln51_1, i5 3" [cnn_layer.cpp:51]   --->   Operation 42 'urem' 'urem_ln51' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 43 [6/9] (2.60ns)   --->   "%urem_ln52 = urem i5 %select_ln51, i5 3" [cnn_layer.cpp:52]   --->   Operation 43 'urem' 'urem_ln52' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 3.39>
ST_6 : Operation 44 [4/9] (2.60ns)   --->   "%urem_ln51 = urem i5 %select_ln51_1, i5 3" [cnn_layer.cpp:51]   --->   Operation 44 'urem' 'urem_ln51' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i5 %select_ln51" [cnn_layer.cpp:52]   --->   Operation 45 'zext' 'zext_ln52' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 46 [1/1] (3.39ns)   --->   "%mul_ln52 = mul i11 %zext_ln52, i11 43" [cnn_layer.cpp:52]   --->   Operation 46 'mul' 'mul_ln52' <Predicate = true> <Delay = 3.39> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.39> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_12 = partselect i4 @_ssdm_op_PartSelect.i4.i11.i32.i32, i11 %mul_ln52, i32 7, i32 10" [cnn_layer.cpp:52]   --->   Operation 47 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 48 [5/9] (2.60ns)   --->   "%urem_ln52 = urem i5 %select_ln51, i5 3" [cnn_layer.cpp:52]   --->   Operation 48 'urem' 'urem_ln52' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 106 [1/1] (1.29ns)   --->   "%ret_ln0 = ret"   --->   Operation 106 'ret' 'ret_ln0' <Predicate = (icmp_ln51)> <Delay = 1.29>

State 7 <SV = 6> <Delay = 2.60>
ST_7 : Operation 49 [3/9] (2.60ns)   --->   "%urem_ln51 = urem i5 %select_ln51_1, i5 3" [cnn_layer.cpp:51]   --->   Operation 49 'urem' 'urem_ln51' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 50 [4/9] (2.60ns)   --->   "%urem_ln52 = urem i5 %select_ln51, i5 3" [cnn_layer.cpp:52]   --->   Operation 50 'urem' 'urem_ln52' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 2.60>
ST_8 : Operation 51 [2/9] (2.60ns)   --->   "%urem_ln51 = urem i5 %select_ln51_1, i5 3" [cnn_layer.cpp:51]   --->   Operation 51 'urem' 'urem_ln51' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 52 [3/9] (2.60ns)   --->   "%urem_ln52 = urem i5 %select_ln51, i5 3" [cnn_layer.cpp:52]   --->   Operation 52 'urem' 'urem_ln52' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.23>
ST_9 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i5 %select_ln51_1" [cnn_layer.cpp:51]   --->   Operation 53 'zext' 'zext_ln51' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 54 [1/1] (3.39ns)   --->   "%mul_ln51 = mul i11 %zext_ln51, i11 43" [cnn_layer.cpp:51]   --->   Operation 54 'mul' 'mul_ln51' <Predicate = true> <Delay = 3.39> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.39> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 55 [1/1] (0.00ns)   --->   "%tmp = partselect i4 @_ssdm_op_PartSelect.i4.i11.i32.i32, i11 %mul_ln51, i32 7, i32 10" [cnn_layer.cpp:51]   --->   Operation 55 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 56 [1/9] (2.60ns)   --->   "%urem_ln51 = urem i5 %select_ln51_1, i5 3" [cnn_layer.cpp:51]   --->   Operation 56 'urem' 'urem_ln51' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln51 = trunc i2 %urem_ln51" [cnn_layer.cpp:51]   --->   Operation 57 'trunc' 'trunc_ln51' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i3 @_ssdm_op_PartSelect.i3.i11.i32.i32, i11 %mul_ln51, i32 7, i32 9" [cnn_layer.cpp:54]   --->   Operation 58 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_10 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i4.i1, i4 %tmp, i1 0" [cnn_layer.cpp:54]   --->   Operation 59 'bitconcatenate' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_11 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i3.i3, i3 %tmp_9, i3 0" [cnn_layer.cpp:54]   --->   Operation 60 'bitconcatenate' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i5 %tmp_10" [cnn_layer.cpp:54]   --->   Operation 61 'zext' 'zext_ln54' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 62 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln53 = sub i6 %tmp_11, i6 %zext_ln54" [cnn_layer.cpp:53]   --->   Operation 62 'sub' 'sub_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.42> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 63 [2/9] (2.60ns)   --->   "%urem_ln52 = urem i5 %select_ln51, i5 3" [cnn_layer.cpp:52]   --->   Operation 63 'urem' 'urem_ln52' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln54_5 = zext i4 %tmp_12" [cnn_layer.cpp:54]   --->   Operation 64 'zext' 'zext_ln54_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 65 [1/1] (2.84ns) (root node of TernaryAdder)   --->   "%add_ln54 = add i6 %sub_ln53, i6 %zext_ln54_5" [cnn_layer.cpp:54]   --->   Operation 65 'add' 'add_ln54' <Predicate = true> <Delay = 2.84> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.42> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 66 [1/1] (0.63ns)   --->   "%switch_ln54 = switch i2 %trunc_ln51, void %arrayidx1342.case.2, i2 0, void %arrayidx1342.case.0, i2 1, void %arrayidx1342.case.1" [cnn_layer.cpp:54]   --->   Operation 66 'switch' 'switch_ln54' <Predicate = true> <Delay = 0.63>
ST_9 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit" [cnn_layer.cpp:54]   --->   Operation 67 'br' 'br_ln54' <Predicate = (trunc_ln51 == 1)> <Delay = 0.00>
ST_9 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit" [cnn_layer.cpp:54]   --->   Operation 68 'br' 'br_ln54' <Predicate = (trunc_ln51 == 0)> <Delay = 0.00>
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit" [cnn_layer.cpp:54]   --->   Operation 69 'br' 'br_ln54' <Predicate = (trunc_ln51 != 0 & trunc_ln51 != 1)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 4.99>
ST_10 : Operation 70 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_51_2_VITIS_LOOP_52_3_str"   --->   Operation 70 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 71 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 324, i64 324, i64 324"   --->   Operation 71 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 72 [1/1] (0.00ns)   --->   "%specpipeline_ln53 = specpipeline void @_ssdm_op_SpecPipeline, i32 4, i32 0, i32 0, i32 0, void @empty_13" [cnn_layer.cpp:53]   --->   Operation 72 'specpipeline' 'specpipeline_ln53' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 73 [1/9] (2.60ns)   --->   "%urem_ln52 = urem i5 %select_ln51, i5 3" [cnn_layer.cpp:52]   --->   Operation 73 'urem' 'urem_ln52' <Predicate = true> <Delay = 2.60> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 2.60> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 74 [1/1] (0.00ns)   --->   "%trunc_ln52 = trunc i2 %urem_ln52" [cnn_layer.cpp:52]   --->   Operation 74 'trunc' 'trunc_ln52' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln54_6 = zext i6 %add_ln54" [cnn_layer.cpp:54]   --->   Operation 75 'zext' 'zext_ln54_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%input_buf_0_0_addr = getelementptr i16 %input_buf_0_0, i32 0, i32 %zext_ln54_6" [cnn_layer.cpp:54]   --->   Operation 76 'getelementptr' 'input_buf_0_0_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (0.00ns)   --->   "%input_buf_0_1_addr = getelementptr i16 %input_buf_0_1, i32 0, i32 %zext_ln54_6" [cnn_layer.cpp:54]   --->   Operation 77 'getelementptr' 'input_buf_0_1_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 78 [1/1] (0.00ns)   --->   "%input_buf_0_2_addr = getelementptr i16 %input_buf_0_2, i32 0, i32 %zext_ln54_6" [cnn_layer.cpp:54]   --->   Operation 78 'getelementptr' 'input_buf_0_2_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 79 [1/1] (0.00ns)   --->   "%input_buf_1_0_addr = getelementptr i16 %input_buf_1_0, i32 0, i32 %zext_ln54_6" [cnn_layer.cpp:54]   --->   Operation 79 'getelementptr' 'input_buf_1_0_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 80 [1/1] (0.00ns)   --->   "%input_buf_1_1_addr = getelementptr i16 %input_buf_1_1, i32 0, i32 %zext_ln54_6" [cnn_layer.cpp:54]   --->   Operation 80 'getelementptr' 'input_buf_1_1_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 81 [1/1] (0.00ns)   --->   "%input_buf_1_2_addr = getelementptr i16 %input_buf_1_2, i32 0, i32 %zext_ln54_6" [cnn_layer.cpp:54]   --->   Operation 81 'getelementptr' 'input_buf_1_2_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 82 [1/1] (0.00ns)   --->   "%input_buf_2_0_addr = getelementptr i16 %input_buf_2_0, i32 0, i32 %zext_ln54_6" [cnn_layer.cpp:54]   --->   Operation 82 'getelementptr' 'input_buf_2_0_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 83 [1/1] (0.00ns)   --->   "%input_buf_2_1_addr = getelementptr i16 %input_buf_2_1, i32 0, i32 %zext_ln54_6" [cnn_layer.cpp:54]   --->   Operation 83 'getelementptr' 'input_buf_2_1_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 84 [1/1] (0.00ns)   --->   "%input_buf_2_2_addr = getelementptr i16 %input_buf_2_2, i32 0, i32 %zext_ln54_6" [cnn_layer.cpp:54]   --->   Operation 84 'getelementptr' 'input_buf_2_2_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 85 [1/1] (0.63ns)   --->   "%switch_ln54 = switch i2 %trunc_ln52, void %arrayidx1342.case.210, i2 0, void %arrayidx1342.case.08, i2 1, void %arrayidx1342.case.19" [cnn_layer.cpp:54]   --->   Operation 85 'switch' 'switch_ln54' <Predicate = (trunc_ln51 == 1)> <Delay = 0.63>
ST_10 : Operation 86 [1/1] ( I:1.75ns O:1.75ns )   --->   "%store_ln54 = store i16 0, i6 %input_buf_1_1_addr" [cnn_layer.cpp:54]   --->   Operation 86 'store' 'store_ln54' <Predicate = (trunc_ln51 == 1 & trunc_ln52 == 1)> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 36> <RAM>
ST_10 : Operation 87 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit7" [cnn_layer.cpp:54]   --->   Operation 87 'br' 'br_ln54' <Predicate = (trunc_ln51 == 1 & trunc_ln52 == 1)> <Delay = 0.00>
ST_10 : Operation 88 [1/1] ( I:1.75ns O:1.75ns )   --->   "%store_ln54 = store i16 0, i6 %input_buf_1_0_addr" [cnn_layer.cpp:54]   --->   Operation 88 'store' 'store_ln54' <Predicate = (trunc_ln51 == 1 & trunc_ln52 == 0)> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 36> <RAM>
ST_10 : Operation 89 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit7" [cnn_layer.cpp:54]   --->   Operation 89 'br' 'br_ln54' <Predicate = (trunc_ln51 == 1 & trunc_ln52 == 0)> <Delay = 0.00>
ST_10 : Operation 90 [1/1] ( I:1.75ns O:1.75ns )   --->   "%store_ln54 = store i16 0, i6 %input_buf_1_2_addr" [cnn_layer.cpp:54]   --->   Operation 90 'store' 'store_ln54' <Predicate = (trunc_ln51 == 1 & trunc_ln52 != 0 & trunc_ln52 != 1)> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 36> <RAM>
ST_10 : Operation 91 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit7" [cnn_layer.cpp:54]   --->   Operation 91 'br' 'br_ln54' <Predicate = (trunc_ln51 == 1 & trunc_ln52 != 0 & trunc_ln52 != 1)> <Delay = 0.00>
ST_10 : Operation 92 [1/1] (0.63ns)   --->   "%switch_ln54 = switch i2 %trunc_ln52, void %arrayidx1342.case.25, i2 0, void %arrayidx1342.case.03, i2 1, void %arrayidx1342.case.14" [cnn_layer.cpp:54]   --->   Operation 92 'switch' 'switch_ln54' <Predicate = (trunc_ln51 == 0)> <Delay = 0.63>
ST_10 : Operation 93 [1/1] ( I:1.75ns O:1.75ns )   --->   "%store_ln54 = store i16 0, i6 %input_buf_0_1_addr" [cnn_layer.cpp:54]   --->   Operation 93 'store' 'store_ln54' <Predicate = (trunc_ln51 == 0 & trunc_ln52 == 1)> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 36> <RAM>
ST_10 : Operation 94 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit2" [cnn_layer.cpp:54]   --->   Operation 94 'br' 'br_ln54' <Predicate = (trunc_ln51 == 0 & trunc_ln52 == 1)> <Delay = 0.00>
ST_10 : Operation 95 [1/1] ( I:1.75ns O:1.75ns )   --->   "%store_ln54 = store i16 0, i6 %input_buf_0_0_addr" [cnn_layer.cpp:54]   --->   Operation 95 'store' 'store_ln54' <Predicate = (trunc_ln51 == 0 & trunc_ln52 == 0)> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 36> <RAM>
ST_10 : Operation 96 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit2" [cnn_layer.cpp:54]   --->   Operation 96 'br' 'br_ln54' <Predicate = (trunc_ln51 == 0 & trunc_ln52 == 0)> <Delay = 0.00>
ST_10 : Operation 97 [1/1] ( I:1.75ns O:1.75ns )   --->   "%store_ln54 = store i16 0, i6 %input_buf_0_2_addr" [cnn_layer.cpp:54]   --->   Operation 97 'store' 'store_ln54' <Predicate = (trunc_ln51 == 0 & trunc_ln52 != 0 & trunc_ln52 != 1)> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 36> <RAM>
ST_10 : Operation 98 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit2" [cnn_layer.cpp:54]   --->   Operation 98 'br' 'br_ln54' <Predicate = (trunc_ln51 == 0 & trunc_ln52 != 0 & trunc_ln52 != 1)> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.63ns)   --->   "%switch_ln54 = switch i2 %trunc_ln52, void %arrayidx1342.case.215, i2 0, void %arrayidx1342.case.013, i2 1, void %arrayidx1342.case.114" [cnn_layer.cpp:54]   --->   Operation 99 'switch' 'switch_ln54' <Predicate = (trunc_ln51 != 0 & trunc_ln51 != 1)> <Delay = 0.63>
ST_10 : Operation 100 [1/1] ( I:1.75ns O:1.75ns )   --->   "%store_ln54 = store i16 0, i6 %input_buf_2_1_addr" [cnn_layer.cpp:54]   --->   Operation 100 'store' 'store_ln54' <Predicate = (trunc_ln51 != 0 & trunc_ln51 != 1 & trunc_ln52 == 1)> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 36> <RAM>
ST_10 : Operation 101 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit12" [cnn_layer.cpp:54]   --->   Operation 101 'br' 'br_ln54' <Predicate = (trunc_ln51 != 0 & trunc_ln51 != 1 & trunc_ln52 == 1)> <Delay = 0.00>
ST_10 : Operation 102 [1/1] ( I:1.75ns O:1.75ns )   --->   "%store_ln54 = store i16 0, i6 %input_buf_2_0_addr" [cnn_layer.cpp:54]   --->   Operation 102 'store' 'store_ln54' <Predicate = (trunc_ln51 != 0 & trunc_ln51 != 1 & trunc_ln52 == 0)> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 36> <RAM>
ST_10 : Operation 103 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit12" [cnn_layer.cpp:54]   --->   Operation 103 'br' 'br_ln54' <Predicate = (trunc_ln51 != 0 & trunc_ln51 != 1 & trunc_ln52 == 0)> <Delay = 0.00>
ST_10 : Operation 104 [1/1] ( I:1.75ns O:1.75ns )   --->   "%store_ln54 = store i16 0, i6 %input_buf_2_2_addr" [cnn_layer.cpp:54]   --->   Operation 104 'store' 'store_ln54' <Predicate = (trunc_ln51 != 0 & trunc_ln51 != 1 & trunc_ln52 != 0 & trunc_ln52 != 1)> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 36> <RAM>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%br_ln54 = br void %arrayidx1342.exit12" [cnn_layer.cpp:54]   --->   Operation 105 'br' 'br_ln54' <Predicate = (trunc_ln51 != 0 & trunc_ln51 != 1 & trunc_ln52 != 0 & trunc_ln52 != 1)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.901ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln51', cnn_layer.cpp:51) of constant 0 on local variable 'i', cnn_layer.cpp:51 [14]  (1.298 ns)
	'load' operation 5 bit ('i_load', cnn_layer.cpp:51) on local variable 'i', cnn_layer.cpp:51 [24]  (0.000 ns)
	'add' operation 5 bit ('add_ln51', cnn_layer.cpp:51) [25]  (1.022 ns)
	'select' operation 5 bit ('select_ln51_1', cnn_layer.cpp:51) [30]  (0.976 ns)
	'urem' operation 2 bit ('urem_ln51', cnn_layer.cpp:51) [34]  (2.604 ns)

 <State 2>: 2.604ns
The critical path consists of the following:
	'urem' operation 2 bit ('urem_ln51', cnn_layer.cpp:51) [34]  (2.604 ns)

 <State 3>: 2.604ns
The critical path consists of the following:
	'urem' operation 2 bit ('urem_ln51', cnn_layer.cpp:51) [34]  (2.604 ns)

 <State 4>: 2.604ns
The critical path consists of the following:
	'urem' operation 2 bit ('urem_ln51', cnn_layer.cpp:51) [34]  (2.604 ns)

 <State 5>: 2.604ns
The critical path consists of the following:
	'urem' operation 2 bit ('urem_ln51', cnn_layer.cpp:51) [34]  (2.604 ns)

 <State 6>: 3.390ns
The critical path consists of the following:
	'mul' operation 11 bit ('mul_ln52', cnn_layer.cpp:52) [43]  (3.390 ns)

 <State 7>: 2.604ns
The critical path consists of the following:
	'urem' operation 2 bit ('urem_ln51', cnn_layer.cpp:51) [34]  (2.604 ns)

 <State 8>: 2.604ns
The critical path consists of the following:
	'urem' operation 2 bit ('urem_ln51', cnn_layer.cpp:51) [34]  (2.604 ns)

 <State 9>: 6.239ns
The critical path consists of the following:
	'mul' operation 11 bit ('mul_ln51', cnn_layer.cpp:51) [32]  (3.390 ns)
	'sub' operation 6 bit ('sub_ln53', cnn_layer.cpp:53) [40]  (0.000 ns)
	'add' operation 6 bit ('add_ln54', cnn_layer.cpp:54) [48]  (2.849 ns)

 <State 10>: 4.992ns
The critical path consists of the following:
	'urem' operation 2 bit ('urem_ln52', cnn_layer.cpp:52) [45]  (2.604 ns)
	'store' operation 0 bit ('store_ln54', cnn_layer.cpp:54) of constant 0 on array 'input_buf_1_1' [63]  (1.755 ns)
	blocking operation 0.632 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
