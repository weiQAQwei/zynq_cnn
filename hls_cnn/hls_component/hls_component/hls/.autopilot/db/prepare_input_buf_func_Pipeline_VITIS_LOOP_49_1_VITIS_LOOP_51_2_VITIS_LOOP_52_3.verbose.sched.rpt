

================================================================
== Vitis HLS Report for 'prepare_input_buf_func_Pipeline_VITIS_LOOP_49_1_VITIS_LOOP_51_2_VITIS_LOOP_52_3'
================================================================
* Date:           Fri Jul 18 13:03:48 2025

* Version:        2025.1 (Build 6135595 on May 21 2025)
* Project:        hls_component
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.968 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  |                    Pipeline                    |
    |   min   |   max   |    min    |    max    |  min |  max |                      Type                      |
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+
    |     9602|     9602|  96.020 us|  96.020 us|  9601|  9601|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_49_1_VITIS_LOOP_51_2_VITIS_LOOP_52_3  |     9600|     9600|         3|          3|          4|  3200|       yes|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 3, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.14>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [cnn_layer.cpp:52]   --->   Operation 6 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i_1 = alloca i32 1" [cnn_layer.cpp:51]   --->   Operation 7 'alloca' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%ic = alloca i32 1" [cnn_layer.cpp:49]   --->   Operation 9 'alloca' 'ic' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten12 = alloca i32 1"   --->   Operation 10 'alloca' 'indvar_flatten12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.29ns)   --->   "%store_ln0 = store i12 0, i12 %indvar_flatten12"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 12 [1/1] (1.29ns)   --->   "%store_ln49 = store i6 0, i6 %ic" [cnn_layer.cpp:49]   --->   Operation 12 'store' 'store_ln49' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 13 [1/1] (1.29ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 14 [1/1] (1.29ns)   --->   "%store_ln51 = store i4 0, i4 %i_1" [cnn_layer.cpp:51]   --->   Operation 14 'store' 'store_ln51' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 15 [1/1] (1.29ns)   --->   "%store_ln52 = store i4 0, i4 %j" [cnn_layer.cpp:52]   --->   Operation 15 'store' 'store_ln52' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 16 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten12_load = load i12 %indvar_flatten12" [cnn_layer.cpp:49]   --->   Operation 17 'load' 'indvar_flatten12_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.54ns)   --->   "%icmp_ln49 = icmp_eq  i12 %indvar_flatten12_load, i12 3200" [cnn_layer.cpp:49]   --->   Operation 18 'icmp' 'icmp_ln49' <Predicate = true> <Delay = 1.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (1.54ns)   --->   "%add_ln49_1 = add i12 %indvar_flatten12_load, i12 1" [cnn_layer.cpp:49]   --->   Operation 19 'add' 'add_ln49_1' <Predicate = true> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln49 = br i1 %icmp_ln49, void %for.inc17, void %for.inc44.preheader.exitStub" [cnn_layer.cpp:49]   --->   Operation 20 'br' 'br_ln49' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.29ns)   --->   "%store_ln49 = store i12 %add_ln49_1, i12 %indvar_flatten12" [cnn_layer.cpp:49]   --->   Operation 21 'store' 'store_ln49' <Predicate = (!icmp_ln49)> <Delay = 1.29>
ST_1 : Operation 65 [1/1] (1.29ns)   --->   "%ret_ln0 = ret"   --->   Operation 65 'ret' 'ret_ln0' <Predicate = (icmp_ln49)> <Delay = 1.29>

State 2 <SV = 1> <Delay = 6.96>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%j_load = load i4 %j" [cnn_layer.cpp:52]   --->   Operation 22 'load' 'j_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%i_1_load = load i4 %i_1" [cnn_layer.cpp:49]   --->   Operation 23 'load' 'i_1_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i8 %indvar_flatten" [cnn_layer.cpp:51]   --->   Operation 24 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%ic_load = load i6 %ic" [cnn_layer.cpp:49]   --->   Operation 25 'load' 'ic_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.28ns)   --->   "%add_ln49 = add i6 %ic_load, i6 1" [cnn_layer.cpp:49]   --->   Operation 26 'add' 'add_ln49' <Predicate = true> <Delay = 1.28> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (1.30ns)   --->   "%icmp_ln51 = icmp_eq  i8 %indvar_flatten_load, i8 100" [cnn_layer.cpp:51]   --->   Operation 27 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.83ns)   --->   "%select_ln49 = select i1 %icmp_ln51, i4 0, i4 %i_1_load" [cnn_layer.cpp:49]   --->   Operation 28 'select' 'select_ln49' <Predicate = true> <Delay = 0.83> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node and_ln49)   --->   "%xor_ln49 = xor i1 %icmp_ln51, i1 1" [cnn_layer.cpp:49]   --->   Operation 29 'xor' 'xor_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.99ns)   --->   "%icmp_ln52 = icmp_eq  i4 %j_load, i4 10" [cnn_layer.cpp:52]   --->   Operation 30 'icmp' 'icmp_ln52' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln49 = and i1 %icmp_ln52, i1 %xor_ln49" [cnn_layer.cpp:49]   --->   Operation 31 'and' 'and_ln49' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.97ns)   --->   "%select_ln49_1 = select i1 %icmp_ln51, i6 %add_ln49, i6 %ic_load" [cnn_layer.cpp:49]   --->   Operation 32 'select' 'select_ln49_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.99ns)   --->   "%add_ln51 = add i4 %select_ln49, i4 1" [cnn_layer.cpp:51]   --->   Operation 33 'add' 'add_ln51' <Predicate = true> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node j_1_mid2)   --->   "%empty = or i1 %and_ln49, i1 %icmp_ln51" [cnn_layer.cpp:49]   --->   Operation 34 'or' 'empty' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.83ns) (out node of the LUT)   --->   "%j_1_mid2 = select i1 %empty, i4 0, i4 %j_load" [cnn_layer.cpp:49]   --->   Operation 35 'select' 'j_1_mid2' <Predicate = true> <Delay = 0.83> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.83ns)   --->   "%select_ln51 = select i1 %and_ln49, i4 %add_ln51, i4 %select_ln49" [cnn_layer.cpp:51]   --->   Operation 36 'select' 'select_ln51' <Predicate = true> <Delay = 0.83> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i6 %select_ln49_1" [cnn_layer.cpp:54]   --->   Operation 37 'trunc' 'trunc_ln54' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %trunc_ln54, i3 0" [cnn_layer.cpp:54]   --->   Operation 38 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i8 %tmp" [cnn_layer.cpp:54]   --->   Operation 39 'zext' 'zext_ln54' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%shl_ln54 = shl i6 %select_ln49_1, i6 1" [cnn_layer.cpp:54]   --->   Operation 40 'shl' 'shl_ln54' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln54_1 = zext i6 %shl_ln54" [cnn_layer.cpp:54]   --->   Operation 41 'zext' 'zext_ln54_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_1 = add i9 %zext_ln54, i9 %zext_ln54_1" [cnn_layer.cpp:54]   --->   Operation 42 'add' 'add_ln54_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln54_2 = zext i4 %select_ln51" [cnn_layer.cpp:54]   --->   Operation 43 'zext' 'zext_ln54_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (2.99ns) (root node of TernaryAdder)   --->   "%add_ln54 = add i9 %add_ln54_1, i9 %zext_ln54_2" [cnn_layer.cpp:54]   --->   Operation 44 'add' 'add_ln54' <Predicate = true> <Delay = 2.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 45 [1/1] (0.99ns)   --->   "%add_ln52 = add i4 %j_1_mid2, i4 1" [cnn_layer.cpp:52]   --->   Operation 45 'add' 'add_ln52' <Predicate = true> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.30ns)   --->   "%add_ln51_1 = add i8 %indvar_flatten_load, i8 1" [cnn_layer.cpp:51]   --->   Operation 46 'add' 'add_ln51_1' <Predicate = true> <Delay = 1.30> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.44ns)   --->   "%select_ln51_1 = select i1 %icmp_ln51, i8 1, i8 %add_ln51_1" [cnn_layer.cpp:51]   --->   Operation 47 'select' 'select_ln51_1' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (1.29ns)   --->   "%store_ln49 = store i6 %select_ln49_1, i6 %ic" [cnn_layer.cpp:49]   --->   Operation 48 'store' 'store_ln49' <Predicate = true> <Delay = 1.29>
ST_2 : Operation 49 [1/1] (1.29ns)   --->   "%store_ln51 = store i8 %select_ln51_1, i8 %indvar_flatten" [cnn_layer.cpp:51]   --->   Operation 49 'store' 'store_ln51' <Predicate = true> <Delay = 1.29>
ST_2 : Operation 50 [1/1] (1.29ns)   --->   "%store_ln51 = store i4 %select_ln51, i4 %i_1" [cnn_layer.cpp:51]   --->   Operation 50 'store' 'store_ln51' <Predicate = true> <Delay = 1.29>
ST_2 : Operation 51 [1/1] (1.29ns)   --->   "%store_ln52 = store i4 %add_ln52, i4 %j" [cnn_layer.cpp:52]   --->   Operation 51 'store' 'store_ln52' <Predicate = true> <Delay = 1.29>

State 3 <SV = 2> <Delay = 5.84>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_49_1_VITIS_LOOP_51_2_VITIS_LOOP_52_3_str"   --->   Operation 52 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3200, i64 3200, i64 3200"   --->   Operation 53 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_3 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i9.i3, i9 %add_ln54, i3 0" [cnn_layer.cpp:54]   --->   Operation 54 'bitconcatenate' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_4 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i9.i1, i9 %add_ln54, i1 0" [cnn_layer.cpp:54]   --->   Operation 55 'bitconcatenate' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i10 %tmp_4" [cnn_layer.cpp:53]   --->   Operation 56 'zext' 'zext_ln53' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln53 = add i12 %tmp_3, i12 %zext_ln53" [cnn_layer.cpp:53]   --->   Operation 57 'add' 'add_ln53' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%specpipeline_ln53 = specpipeline void @_ssdm_op_SpecPipeline, i32 4, i32 0, i32 0, i32 0, void @empty_13" [cnn_layer.cpp:53]   --->   Operation 58 'specpipeline' 'specpipeline_ln53' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln54_3 = zext i4 %j_1_mid2" [cnn_layer.cpp:54]   --->   Operation 59 'zext' 'zext_ln54_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (3.07ns) (root node of TernaryAdder)   --->   "%add_ln54_2 = add i12 %add_ln53, i12 %zext_ln54_3" [cnn_layer.cpp:54]   --->   Operation 60 'add' 'add_ln54_2' <Predicate = true> <Delay = 3.07> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln54_4 = zext i12 %add_ln54_2" [cnn_layer.cpp:54]   --->   Operation 61 'zext' 'zext_ln54_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%input_buf_addr = getelementptr i16 %input_buf, i32 0, i32 %zext_ln54_4" [cnn_layer.cpp:54]   --->   Operation 62 'getelementptr' 'input_buf_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] ( I:2.77ns O:2.77ns )   --->   "%store_ln54 = store i16 0, i12 %input_buf_addr" [cnn_layer.cpp:54]   --->   Operation 63 'store' 'store_ln54' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 3200> <RAM>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln52 = br void %for.inc" [cnn_layer.cpp:52]   --->   Operation 64 'br' 'br_ln52' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.142ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten12' [7]  (1.298 ns)
	'load' operation 12 bit ('indvar_flatten12_load', cnn_layer.cpp:49) on local variable 'indvar_flatten12' [14]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln49', cnn_layer.cpp:49) [15]  (1.546 ns)
	'store' operation 0 bit ('store_ln49', cnn_layer.cpp:49) of variable 'add_ln49_1', cnn_layer.cpp:49 on local variable 'indvar_flatten12' [57]  (1.298 ns)

 <State 2>: 6.968ns
The critical path consists of the following:
	'load' operation 8 bit ('indvar_flatten_load', cnn_layer.cpp:51) on local variable 'indvar_flatten' [21]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln51', cnn_layer.cpp:51) [26]  (1.306 ns)
	'select' operation 4 bit ('select_ln49', cnn_layer.cpp:49) [27]  (0.836 ns)
	'add' operation 4 bit ('add_ln51', cnn_layer.cpp:51) [32]  (0.997 ns)
	'select' operation 4 bit ('select_ln51', cnn_layer.cpp:51) [35]  (0.836 ns)
	'add' operation 9 bit ('add_ln54', cnn_layer.cpp:54) [43]  (2.994 ns)

 <State 3>: 5.847ns
The critical path consists of the following:
	'add' operation 12 bit ('add_ln53', cnn_layer.cpp:53) [47]  (0.000 ns)
	'add' operation 12 bit ('add_ln54_2', cnn_layer.cpp:54) [50]  (3.076 ns)
	'getelementptr' operation 12 bit ('input_buf_addr', cnn_layer.cpp:54) [52]  (0.000 ns)
	'store' operation 0 bit ('store_ln54', cnn_layer.cpp:54) of constant 0 on array 'input_buf' [53]  (2.771 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
