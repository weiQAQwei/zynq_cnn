

================================================================
== Vitis HLS Report for 'convolution_func'
================================================================
* Date:           Fri Jul 18 13:03:48 2025

* Version:        2025.1 (Build 6135595 on May 21 2025)
* Project:        hls_component
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.806 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    |                    Pipeline                    |
    |   min   |   max   |    min   |    max   |   min  |   max  |                      Type                      |
    +---------+---------+----------+----------+--------+--------+------------------------------------------------+
    |   589832|   589832|  5.898 ms|  5.898 ms|  589825|  589825|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+--------+--------+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------------------------------------------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                                                                                                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |                                             Loop Name                                             |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +---------------------------------------------------------------------------------------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_77_1_VITIS_LOOP_79_2_VITIS_LOOP_81_3_VITIS_LOOP_84_4_VITIS_LOOP_86_5_VITIS_LOOP_87_6  |   589830|   589830|         8|          1|          1|  589824|       yes|
        +---------------------------------------------------------------------------------------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 9, States = { 1 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.29>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%sum_4 = alloca i32 1" [cnn_layer.cpp:83]   --->   Operation 11 'alloca' 'sum_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%n = alloca i32 1" [cnn_layer.cpp:87]   --->   Operation 12 'alloca' 'n' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%m = alloca i32 1" [cnn_layer.cpp:86]   --->   Operation 13 'alloca' 'm' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 14 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%ic = alloca i32 1" [cnn_layer.cpp:84]   --->   Operation 15 'alloca' 'ic' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten31 = alloca i32 1"   --->   Operation 16 'alloca' 'indvar_flatten31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [cnn_layer.cpp:81]   --->   Operation 17 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%indvar_flatten60 = alloca i32 1"   --->   Operation 18 'alloca' 'indvar_flatten60' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [cnn_layer.cpp:79]   --->   Operation 19 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%indvar_flatten100 = alloca i32 1"   --->   Operation 20 'alloca' 'indvar_flatten100' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%oc = alloca i32 1" [cnn_layer.cpp:77]   --->   Operation 21 'alloca' 'oc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%indvar_flatten151 = alloca i32 1"   --->   Operation 22 'alloca' 'indvar_flatten151' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%sext_ln7910 = alloca i32 1"   --->   Operation 23 'alloca' 'sext_ln7910' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.29ns)   --->   "%store_ln0 = store i20 0, i20 %indvar_flatten151"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 25 [1/1] (1.29ns)   --->   "%store_ln77 = store i6 0, i6 %oc" [cnn_layer.cpp:77]   --->   Operation 25 'store' 'store_ln77' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 26 [1/1] (1.29ns)   --->   "%store_ln0 = store i16 0, i16 %indvar_flatten100"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 27 [1/1] (1.29ns)   --->   "%store_ln79 = store i4 0, i4 %i" [cnn_layer.cpp:79]   --->   Operation 27 'store' 'store_ln79' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 28 [1/1] (1.29ns)   --->   "%store_ln0 = store i13 0, i13 %indvar_flatten60"   --->   Operation 28 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 29 [1/1] (1.29ns)   --->   "%store_ln81 = store i4 0, i4 %j" [cnn_layer.cpp:81]   --->   Operation 29 'store' 'store_ln81' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 30 [1/1] (1.29ns)   --->   "%store_ln0 = store i10 0, i10 %indvar_flatten31"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 31 [1/1] (1.29ns)   --->   "%store_ln84 = store i6 0, i6 %ic" [cnn_layer.cpp:84]   --->   Operation 31 'store' 'store_ln84' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 32 [1/1] (1.29ns)   --->   "%store_ln0 = store i4 0, i4 %indvar_flatten"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 33 [1/1] (1.29ns)   --->   "%store_ln86 = store i2 0, i2 %m" [cnn_layer.cpp:86]   --->   Operation 33 'store' 'store_ln86' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 34 [1/1] (1.29ns)   --->   "%store_ln87 = store i2 0, i2 %n" [cnn_layer.cpp:87]   --->   Operation 34 'store' 'store_ln87' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln77 = br void %for.inc" [cnn_layer.cpp:77]   --->   Operation 35 'br' 'br_ln77' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.83>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%indvar_flatten60_load = load i13 %indvar_flatten60" [cnn_layer.cpp:81]   --->   Operation 36 'load' 'indvar_flatten60_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%indvar_flatten100_load = load i16 %indvar_flatten100" [cnn_layer.cpp:79]   --->   Operation 37 'load' 'indvar_flatten100_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%indvar_flatten151_load = load i20 %indvar_flatten151" [cnn_layer.cpp:77]   --->   Operation 38 'load' 'indvar_flatten151_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.58ns)   --->   "%icmp_ln77 = icmp_eq  i20 %indvar_flatten151_load, i20 589824" [cnn_layer.cpp:77]   --->   Operation 39 'icmp' 'icmp_ln77' <Predicate = true> <Delay = 1.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.58ns)   --->   "%add_ln77_2 = add i20 %indvar_flatten151_load, i20 1" [cnn_layer.cpp:77]   --->   Operation 40 'add' 'add_ln77_2' <Predicate = true> <Delay = 1.58> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln77 = br i1 %icmp_ln77, void %for.inc66, void %for.end68" [cnn_layer.cpp:77]   --->   Operation 41 'br' 'br_ln77' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.54ns)   --->   "%icmp_ln79 = icmp_eq  i16 %indvar_flatten100_load, i16 18432" [cnn_layer.cpp:79]   --->   Operation 42 'icmp' 'icmp_ln79' <Predicate = (!icmp_ln77)> <Delay = 1.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.80ns)   --->   "%xor_ln77 = xor i1 %icmp_ln79, i1 1" [cnn_layer.cpp:77]   --->   Operation 43 'xor' 'xor_ln77' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (1.53ns)   --->   "%icmp_ln81 = icmp_eq  i13 %indvar_flatten60_load, i13 2304" [cnn_layer.cpp:81]   --->   Operation 44 'icmp' 'icmp_ln81' <Predicate = (!icmp_ln77)> <Delay = 1.53> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.80ns)   --->   "%and_ln77_6 = and i1 %icmp_ln81, i1 %xor_ln77" [cnn_layer.cpp:77]   --->   Operation 45 'and' 'and_ln77_6' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.80ns)   --->   "%empty = or i1 %and_ln77_6, i1 %icmp_ln79" [cnn_layer.cpp:77]   --->   Operation 46 'or' 'empty' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (1.53ns)   --->   "%add_ln81_2 = add i13 %indvar_flatten60_load, i13 1" [cnn_layer.cpp:81]   --->   Operation 47 'add' 'add_ln81_2' <Predicate = (!icmp_ln77)> <Delay = 1.53> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.58ns)   --->   "%select_ln81_2 = select i1 %empty, i13 1, i13 %add_ln81_2" [cnn_layer.cpp:81]   --->   Operation 48 'select' 'select_ln81_2' <Predicate = (!icmp_ln77)> <Delay = 0.58> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (1.54ns)   --->   "%add_ln79_2 = add i16 %indvar_flatten100_load, i16 1" [cnn_layer.cpp:79]   --->   Operation 49 'add' 'add_ln79_2' <Predicate = (!icmp_ln77)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.62ns)   --->   "%select_ln79_6 = select i1 %icmp_ln79, i16 1, i16 %add_ln79_2" [cnn_layer.cpp:79]   --->   Operation 50 'select' 'select_ln79_6' <Predicate = (!icmp_ln77)> <Delay = 0.62> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.29ns)   --->   "%store_ln77 = store i20 %add_ln77_2, i20 %indvar_flatten151" [cnn_layer.cpp:77]   --->   Operation 51 'store' 'store_ln77' <Predicate = (!icmp_ln77)> <Delay = 1.29>
ST_2 : Operation 52 [1/1] (1.29ns)   --->   "%store_ln79 = store i16 %select_ln79_6, i16 %indvar_flatten100" [cnn_layer.cpp:79]   --->   Operation 52 'store' 'store_ln79' <Predicate = (!icmp_ln77)> <Delay = 1.29>
ST_2 : Operation 53 [1/1] (1.29ns)   --->   "%store_ln81 = store i13 %select_ln81_2, i13 %indvar_flatten60" [cnn_layer.cpp:81]   --->   Operation 53 'store' 'store_ln81' <Predicate = (!icmp_ln77)> <Delay = 1.29>

State 3 <SV = 2> <Delay = 6.75>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i4 %indvar_flatten" [cnn_layer.cpp:86]   --->   Operation 54 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%indvar_flatten31_load = load i10 %indvar_flatten31" [cnn_layer.cpp:84]   --->   Operation 55 'load' 'indvar_flatten31_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.99ns)   --->   "%icmp_ln86 = icmp_eq  i4 %indvar_flatten_load, i4 9" [cnn_layer.cpp:86]   --->   Operation 56 'icmp' 'icmp_ln86' <Predicate = (!icmp_ln77)> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node exitcond_flatten_mid295)   --->   "%and_ln77_4 = and i1 %icmp_ln86, i1 %xor_ln77" [cnn_layer.cpp:77]   --->   Operation 57 'and' 'and_ln77_4' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (1.41ns)   --->   "%icmp_ln84 = icmp_eq  i10 %indvar_flatten31_load, i10 288" [cnn_layer.cpp:84]   --->   Operation 58 'icmp' 'icmp_ln84' <Predicate = (!icmp_ln77)> <Delay = 1.41> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node not_exitcond_flatten62_mid21508)   --->   "%exitcond_flatten62_not9 = xor i1 %icmp_ln81, i1 1" [cnn_layer.cpp:81]   --->   Operation 59 'xor' 'exitcond_flatten62_not9' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.80ns) (out node of the LUT)   --->   "%not_exitcond_flatten62_mid21508 = or i1 %icmp_ln79, i1 %exitcond_flatten62_not9" [cnn_layer.cpp:79]   --->   Operation 60 'or' 'not_exitcond_flatten62_mid21508' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.80ns) (out node of the LUT)   --->   "%exitcond_flatten_mid295 = and i1 %and_ln77_4, i1 %not_exitcond_flatten62_mid21508" [cnn_layer.cpp:77]   --->   Operation 61 'and' 'exitcond_flatten_mid295' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node exitcond_flatten33_mid299)   --->   "%and_ln77_5 = and i1 %xor_ln77, i1 %icmp_ln84" [cnn_layer.cpp:77]   --->   Operation 62 'and' 'and_ln77_5' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.80ns) (out node of the LUT)   --->   "%exitcond_flatten33_mid299 = and i1 %and_ln77_5, i1 %not_exitcond_flatten62_mid21508" [cnn_layer.cpp:77]   --->   Operation 63 'and' 'exitcond_flatten33_mid299' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.80ns)   --->   "%empty_71 = or i1 %exitcond_flatten33_mid299, i1 %and_ln77_6" [cnn_layer.cpp:77]   --->   Operation 64 'or' 'empty_71' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (0.80ns)   --->   "%empty_72 = or i1 %empty_71, i1 %icmp_ln79" [cnn_layer.cpp:77]   --->   Operation 65 'or' 'empty_72' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (0.80ns)   --->   "%not_exitcond_flatten33_mid299 = xor i1 %exitcond_flatten33_mid299, i1 1" [cnn_layer.cpp:77]   --->   Operation 66 'xor' 'not_exitcond_flatten33_mid299' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.80ns)   --->   "%exitcond_flatten_mid259 = and i1 %exitcond_flatten_mid295, i1 %not_exitcond_flatten33_mid299" [cnn_layer.cpp:77]   --->   Operation 67 'and' 'exitcond_flatten_mid259' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node empty_74)   --->   "%empty_73 = or i1 %exitcond_flatten_mid259, i1 %exitcond_flatten33_mid299" [cnn_layer.cpp:77]   --->   Operation 68 'or' 'empty_73' <Predicate = (!icmp_ln77)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (0.80ns) (out node of the LUT)   --->   "%empty_74 = or i1 %empty_73, i1 %empty" [cnn_layer.cpp:77]   --->   Operation 69 'or' 'empty_74' <Predicate = (!icmp_ln77)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.99ns)   --->   "%add_ln86_2 = add i4 %indvar_flatten_load, i4 1" [cnn_layer.cpp:86]   --->   Operation 70 'add' 'add_ln86_2' <Predicate = (!icmp_ln77)> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.83ns)   --->   "%select_ln86_2 = select i1 %empty_74, i4 1, i4 %add_ln86_2" [cnn_layer.cpp:86]   --->   Operation 71 'select' 'select_ln86_2' <Predicate = (!icmp_ln77)> <Delay = 0.83> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (1.41ns)   --->   "%add_ln84_2 = add i10 %indvar_flatten31_load, i10 1" [cnn_layer.cpp:84]   --->   Operation 72 'add' 'add_ln84_2' <Predicate = (!icmp_ln77)> <Delay = 1.41> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (0.99ns)   --->   "%select_ln84_2 = select i1 %empty_72, i10 1, i10 %add_ln84_2" [cnn_layer.cpp:84]   --->   Operation 73 'select' 'select_ln84_2' <Predicate = (!icmp_ln77)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (1.29ns)   --->   "%store_ln84 = store i10 %select_ln84_2, i10 %indvar_flatten31" [cnn_layer.cpp:84]   --->   Operation 74 'store' 'store_ln84' <Predicate = (!icmp_ln77)> <Delay = 1.29>
ST_3 : Operation 75 [1/1] (1.29ns)   --->   "%store_ln86 = store i4 %select_ln86_2, i4 %indvar_flatten" [cnn_layer.cpp:86]   --->   Operation 75 'store' 'store_ln86' <Predicate = (!icmp_ln77)> <Delay = 1.29>

State 4 <SV = 3> <Delay = 6.43>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%n_load = load i2 %n"   --->   Operation 76 'load' 'n_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%m_load = load i2 %m"   --->   Operation 77 'load' 'm_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%ic_load = load i6 %ic"   --->   Operation 78 'load' 'ic_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%j_load = load i4 %j"   --->   Operation 79 'load' 'j_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%i_load = load i4 %i"   --->   Operation 80 'load' 'i_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%oc_load = load i6 %oc" [cnn_layer.cpp:77]   --->   Operation 81 'load' 'oc_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (1.28ns)   --->   "%add_ln77 = add i6 %oc_load, i6 1" [cnn_layer.cpp:77]   --->   Operation 82 'add' 'add_ln77' <Predicate = (icmp_ln79)> <Delay = 1.28> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 83 [1/1] (0.83ns)   --->   "%select_ln77 = select i1 %icmp_ln79, i4 0, i4 %i_load" [cnn_layer.cpp:77]   --->   Operation 83 'select' 'select_ln77' <Predicate = true> <Delay = 0.83> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 84 [1/1] (0.99ns)   --->   "%first_iter_451 = icmp_eq  i4 %i_load, i4 0"   --->   Operation 84 'icmp' 'first_iter_451' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 85 [1/1] (0.99ns)   --->   "%first_iter_354 = icmp_eq  i4 %j_load, i4 0"   --->   Operation 85 'icmp' 'first_iter_354' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 86 [1/1] (1.28ns)   --->   "%first_iter_256 = icmp_eq  i6 %ic_load, i6 0"   --->   Operation 86 'icmp' 'first_iter_256' <Predicate = true> <Delay = 1.28> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 87 [1/1] (0.63ns)   --->   "%first_iter_158 = icmp_eq  i2 %m_load, i2 0"   --->   Operation 87 'icmp' 'first_iter_158' <Predicate = true> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 88 [1/1] (0.63ns)   --->   "%icmp_ln87 = icmp_eq  i2 %n_load, i2 3" [cnn_layer.cpp:87]   --->   Operation 88 'icmp' 'icmp_ln87' <Predicate = true> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln87_mid230)   --->   "%and_ln77 = and i1 %icmp_ln87, i1 %xor_ln77" [cnn_layer.cpp:77]   --->   Operation 89 'and' 'and_ln77' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 90 [1/1] (0.97ns)   --->   "%select_ln77_2 = select i1 %icmp_ln79, i6 %add_ln77, i6 %oc_load" [cnn_layer.cpp:77]   --->   Operation 90 'select' 'select_ln77_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 91 [1/1] (0.99ns)   --->   "%add_ln79 = add i4 %select_ln77, i4 1" [cnn_layer.cpp:79]   --->   Operation 91 'add' 'add_ln79' <Predicate = true> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 92 [1/1] (0.83ns)   --->   "%j_mid268 = select i1 %empty, i4 0, i4 %j_load" [cnn_layer.cpp:77]   --->   Operation 92 'select' 'j_mid268' <Predicate = true> <Delay = 0.83> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln87_mid230)   --->   "%icmp_ln87_mid291 = and i1 %and_ln77, i1 %not_exitcond_flatten62_mid21508" [cnn_layer.cpp:77]   --->   Operation 93 'and' 'icmp_ln87_mid291' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 94 [1/1] (0.83ns)   --->   "%select_ln79 = select i1 %and_ln77_6, i4 %add_ln79, i4 %select_ln77" [cnn_layer.cpp:79]   --->   Operation 94 'select' 'select_ln79' <Predicate = true> <Delay = 0.83> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 95 [1/1] (0.99ns)   --->   "%add_ln81 = add i4 %j_mid268, i4 1" [cnn_layer.cpp:81]   --->   Operation 95 'add' 'add_ln81' <Predicate = true> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 96 [1/1] (0.97ns)   --->   "%ic_mid239 = select i1 %empty_72, i6 0, i6 %ic_load" [cnn_layer.cpp:77]   --->   Operation 96 'select' 'ic_mid239' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 97 [1/1] (0.83ns)   --->   "%select_ln81 = select i1 %exitcond_flatten33_mid299, i4 %add_ln81, i4 %j_mid268" [cnn_layer.cpp:81]   --->   Operation 97 'select' 'select_ln81' <Predicate = true> <Delay = 0.83> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.83> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 98 [1/1] (1.28ns)   --->   "%add_ln84 = add i6 %ic_mid239, i6 1" [cnn_layer.cpp:84]   --->   Operation 98 'add' 'add_ln84' <Predicate = true> <Delay = 1.28> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 99 [1/1] (0.81ns)   --->   "%m_mid222 = select i1 %empty_74, i2 0, i2 %m_load" [cnn_layer.cpp:77]   --->   Operation 99 'select' 'm_mid222' <Predicate = true> <Delay = 0.81> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln87_mid230)   --->   "%exitcond_flatten_mid295_not = xor i1 %exitcond_flatten_mid295, i1 1" [cnn_layer.cpp:77]   --->   Operation 100 'xor' 'exitcond_flatten_mid295_not' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln87_mid230)   --->   "%not_exitcond_flatten_mid259 = or i1 %exitcond_flatten33_mid299, i1 %exitcond_flatten_mid295_not" [cnn_layer.cpp:77]   --->   Operation 101 'or' 'not_exitcond_flatten_mid259' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln87_mid230)   --->   "%icmp_ln87_mid255 = and i1 %not_exitcond_flatten33_mid299, i1 %icmp_ln87_mid291" [cnn_layer.cpp:77]   --->   Operation 102 'and' 'icmp_ln87_mid255' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 103 [1/1] (0.80ns) (out node of the LUT)   --->   "%icmp_ln87_mid230 = and i1 %icmp_ln87_mid255, i1 %not_exitcond_flatten_mid259" [cnn_layer.cpp:77]   --->   Operation 103 'and' 'icmp_ln87_mid230' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 104 [1/1] (0.97ns)   --->   "%select_ln84 = select i1 %exitcond_flatten_mid259, i6 %add_ln84, i6 %ic_mid239" [cnn_layer.cpp:84]   --->   Operation 104 'select' 'select_ln84' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 105 [1/1] (0.63ns)   --->   "%add_ln86 = add i2 %m_mid222, i2 1" [cnn_layer.cpp:86]   --->   Operation 105 'add' 'add_ln86' <Predicate = true> <Delay = 0.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node n_mid2)   --->   "%empty_75 = or i1 %empty_71, i1 %exitcond_flatten_mid259" [cnn_layer.cpp:77]   --->   Operation 106 'or' 'empty_75' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node n_mid2)   --->   "%empty_76 = or i1 %icmp_ln87_mid230, i1 %empty_75" [cnn_layer.cpp:77]   --->   Operation 107 'or' 'empty_76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node n_mid2)   --->   "%empty_77 = or i1 %empty_76, i1 %icmp_ln79" [cnn_layer.cpp:77]   --->   Operation 108 'or' 'empty_77' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 109 [1/1] (0.81ns) (out node of the LUT)   --->   "%n_mid2 = select i1 %empty_77, i2 0, i2 %n_load" [cnn_layer.cpp:77]   --->   Operation 109 'select' 'n_mid2' <Predicate = true> <Delay = 0.81> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 110 [1/1] (0.81ns)   --->   "%select_ln86 = select i1 %icmp_ln87_mid230, i2 %add_ln86, i2 %m_mid222" [cnn_layer.cpp:86]   --->   Operation 110 'select' 'select_ln86' <Predicate = true> <Delay = 0.81> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%empty_78 = trunc i6 %select_ln77_2" [cnn_layer.cpp:77]   --->   Operation 111 'trunc' 'empty_78' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%trunc_ln95 = trunc i4 %select_ln79" [cnn_layer.cpp:95]   --->   Operation 112 'trunc' 'trunc_ln95' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i3 %trunc_ln95" [cnn_layer.cpp:81]   --->   Operation 113 'zext' 'zext_ln81' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%trunc_ln89 = trunc i4 %select_ln81" [cnn_layer.cpp:89]   --->   Operation 114 'trunc' 'trunc_ln89' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%trunc_ln90 = trunc i6 %select_ln84" [cnn_layer.cpp:90]   --->   Operation 115 'trunc' 'trunc_ln90' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %trunc_ln90, i3 0" [cnn_layer.cpp:90]   --->   Operation 116 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln90 = zext i8 %tmp" [cnn_layer.cpp:90]   --->   Operation 117 'zext' 'zext_ln90' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "%shl_ln90 = shl i6 %select_ln84, i6 1" [cnn_layer.cpp:90]   --->   Operation 118 'shl' 'shl_ln90' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln90_23 = zext i6 %shl_ln90" [cnn_layer.cpp:90]   --->   Operation 119 'zext' 'zext_ln90_23' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln90_27 = add i9 %zext_ln90, i9 %zext_ln90_23" [cnn_layer.cpp:90]   --->   Operation 120 'add' 'add_ln90_27' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %empty_78, i5 %trunc_ln90" [cnn_layer.cpp:90]   --->   Operation 121 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln90_24 = zext i10 %tmp_s" [cnn_layer.cpp:90]   --->   Operation 122 'zext' 'zext_ln90_24' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i5.i5.i2, i5 %empty_78, i5 %trunc_ln90, i2 0" [cnn_layer.cpp:90]   --->   Operation 123 'bitconcatenate' 'p_shl' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln90 = sub i12 %p_shl, i12 %zext_ln90_24" [cnn_layer.cpp:90]   --->   Operation 124 'sub' 'sub_ln90' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln90_25 = zext i2 %select_ln86" [cnn_layer.cpp:90]   --->   Operation 125 'zext' 'zext_ln90_25' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 126 [1/1] (3.07ns) (root node of TernaryAdder)   --->   "%add_ln90_23 = add i12 %sub_ln90, i12 %zext_ln90_25" [cnn_layer.cpp:90]   --->   Operation 126 'add' 'add_ln90_23' <Predicate = true> <Delay = 3.07> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln90_1 = zext i2 %select_ln86" [cnn_layer.cpp:90]   --->   Operation 127 'zext' 'zext_ln90_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 128 [1/1] (0.76ns)   --->   "%add_ln90 = add i4 %zext_ln81, i4 %zext_ln90_1" [cnn_layer.cpp:90]   --->   Operation 128 'add' 'add_ln90' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln90_27 = zext i4 %add_ln90" [cnn_layer.cpp:90]   --->   Operation 129 'zext' 'zext_ln90_27' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 130 [1/1] (2.99ns) (root node of TernaryAdder)   --->   "%add_ln90_24 = add i9 %add_ln90_27, i9 %zext_ln90_27" [cnn_layer.cpp:90]   --->   Operation 130 'add' 'add_ln90_24' <Predicate = true> <Delay = 2.99> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 131 [1/1] (0.63ns)   --->   "%add_ln87 = add i2 %n_mid2, i2 1" [cnn_layer.cpp:87]   --->   Operation 131 'add' 'add_ln87' <Predicate = true> <Delay = 0.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 132 [1/1] (0.63ns)   --->   "%icmp_ln87_4 = icmp_eq  i2 %add_ln87, i2 3" [cnn_layer.cpp:87]   --->   Operation 132 'icmp' 'icmp_ln87_4' <Predicate = true> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 133 [1/1] (0.63ns)   --->   "%icmp_ln86_2 = icmp_eq  i2 %select_ln86, i2 2" [cnn_layer.cpp:86]   --->   Operation 133 'icmp' 'icmp_ln86_2' <Predicate = true> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 134 [1/1] (1.28ns)   --->   "%icmp_ln84_2 = icmp_eq  i6 %select_ln84, i6 31" [cnn_layer.cpp:84]   --->   Operation 134 'icmp' 'icmp_ln84_2' <Predicate = true> <Delay = 1.28> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 135 [1/1] (0.00ns)   --->   "%br_ln87 = br i1 %icmp_ln87_4, void %new.latch.for.inc.split, void %last.iter.for.inc.split" [cnn_layer.cpp:87]   --->   Operation 135 'br' 'br_ln87' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 136 [1/1] (0.00ns)   --->   "%br_ln87 = br i1 %icmp_ln86_2, void %new.latch.for.inc43, void %last.iter.for.inc43" [cnn_layer.cpp:87]   --->   Operation 136 'br' 'br_ln87' <Predicate = (icmp_ln87_4)> <Delay = 0.00>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%br_ln87 = br i1 %icmp_ln84_2, void %new.latch.for.inc46, void %last.iter.for.inc46" [cnn_layer.cpp:87]   --->   Operation 137 'br' 'br_ln87' <Predicate = (icmp_ln87_4 & icmp_ln86_2)> <Delay = 0.00>
ST_4 : Operation 138 [1/1] (0.00ns)   --->   "%br_ln87 = br void %new.latch.for.inc43" [cnn_layer.cpp:87]   --->   Operation 138 'br' 'br_ln87' <Predicate = (icmp_ln87_4 & icmp_ln86_2)> <Delay = 0.00>
ST_4 : Operation 139 [1/1] (0.00ns)   --->   "%br_ln87 = br void %new.latch.for.inc.split" [cnn_layer.cpp:87]   --->   Operation 139 'br' 'br_ln87' <Predicate = (icmp_ln87_4)> <Delay = 0.00>
ST_4 : Operation 140 [1/1] (1.29ns)   --->   "%store_ln77 = store i6 %select_ln77_2, i6 %oc" [cnn_layer.cpp:77]   --->   Operation 140 'store' 'store_ln77' <Predicate = true> <Delay = 1.29>
ST_4 : Operation 141 [1/1] (1.29ns)   --->   "%store_ln79 = store i4 %select_ln79, i4 %i" [cnn_layer.cpp:79]   --->   Operation 141 'store' 'store_ln79' <Predicate = true> <Delay = 1.29>
ST_4 : Operation 142 [1/1] (1.29ns)   --->   "%store_ln81 = store i4 %select_ln81, i4 %j" [cnn_layer.cpp:81]   --->   Operation 142 'store' 'store_ln81' <Predicate = true> <Delay = 1.29>
ST_4 : Operation 143 [1/1] (1.29ns)   --->   "%store_ln84 = store i6 %select_ln84, i6 %ic" [cnn_layer.cpp:84]   --->   Operation 143 'store' 'store_ln84' <Predicate = true> <Delay = 1.29>
ST_4 : Operation 144 [1/1] (1.29ns)   --->   "%store_ln86 = store i2 %select_ln86, i2 %m" [cnn_layer.cpp:86]   --->   Operation 144 'store' 'store_ln86' <Predicate = true> <Delay = 1.29>
ST_4 : Operation 145 [1/1] (1.29ns)   --->   "%store_ln87 = store i2 %add_ln87, i2 %n" [cnn_layer.cpp:87]   --->   Operation 145 'store' 'store_ln87' <Predicate = true> <Delay = 1.29>

State 5 <SV = 4> <Delay = 6.61>
ST_5 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i3 %trunc_ln89" [cnn_layer.cpp:89]   --->   Operation 146 'zext' 'zext_ln89' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln90_26 = zext i12 %add_ln90_23" [cnn_layer.cpp:90]   --->   Operation 147 'zext' 'zext_ln90_26' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 148 [1/1] (0.00ns)   --->   "%p_shl4 = bitconcatenate i14 @_ssdm_op_BitConcatenate.i14.i12.i2, i12 %add_ln90_23, i2 0" [cnn_layer.cpp:90]   --->   Operation 148 'bitconcatenate' 'p_shl4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 149 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln90_4 = sub i14 %p_shl4, i14 %zext_ln90_26" [cnn_layer.cpp:90]   --->   Operation 149 'sub' 'sub_ln90_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_54 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i9.i3, i9 %add_ln90_24, i3 0" [cnn_layer.cpp:90]   --->   Operation 150 'bitconcatenate' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 151 [1/1] (0.00ns)   --->   "%tmp_55 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i9.i1, i9 %add_ln90_24, i1 0" [cnn_layer.cpp:90]   --->   Operation 151 'bitconcatenate' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln83 = zext i10 %tmp_55" [cnn_layer.cpp:83]   --->   Operation 152 'zext' 'zext_ln83' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 153 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83 = add i12 %tmp_54, i12 %zext_ln83" [cnn_layer.cpp:83]   --->   Operation 153 'add' 'add_ln83' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln90_28 = zext i2 %n_mid2" [cnn_layer.cpp:90]   --->   Operation 154 'zext' 'zext_ln90_28' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 155 [1/1] (3.13ns) (root node of TernaryAdder)   --->   "%add_ln90_25 = add i14 %sub_ln90_4, i14 %zext_ln90_28" [cnn_layer.cpp:90]   --->   Operation 155 'add' 'add_ln90_25' <Predicate = true> <Delay = 3.13> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln90_29 = zext i14 %add_ln90_25" [cnn_layer.cpp:90]   --->   Operation 156 'zext' 'zext_ln90_29' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 157 [1/1] (0.00ns)   --->   "%local_weights_addr = getelementptr i16 %local_weights, i32 0, i32 %zext_ln90_29" [cnn_layer.cpp:90]   --->   Operation 157 'getelementptr' 'local_weights_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 158 [1/1] (0.00ns)   --->   "%zext_ln90_2 = zext i2 %n_mid2" [cnn_layer.cpp:90]   --->   Operation 158 'zext' 'zext_ln90_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 159 [1/1] (0.76ns)   --->   "%add_ln90_1 = add i4 %zext_ln89, i4 %zext_ln90_2" [cnn_layer.cpp:90]   --->   Operation 159 'add' 'add_ln90_1' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln90_30 = zext i4 %add_ln90_1" [cnn_layer.cpp:90]   --->   Operation 160 'zext' 'zext_ln90_30' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 161 [1/1] (3.07ns) (root node of TernaryAdder)   --->   "%add_ln90_26 = add i12 %add_ln83, i12 %zext_ln90_30" [cnn_layer.cpp:90]   --->   Operation 161 'add' 'add_ln90_26' <Predicate = true> <Delay = 3.07> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln90_31 = zext i12 %add_ln90_26" [cnn_layer.cpp:90]   --->   Operation 162 'zext' 'zext_ln90_31' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 163 [1/1] (0.00ns)   --->   "%input_buf_addr = getelementptr i16 %input_buf, i32 0, i32 %zext_ln90_31" [cnn_layer.cpp:90]   --->   Operation 163 'getelementptr' 'input_buf_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 164 [2/2] (2.77ns)   --->   "%input_buf_load = load i12 %input_buf_addr" [cnn_layer.cpp:90]   --->   Operation 164 'load' 'input_buf_load' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 3200> <RAM>
ST_5 : Operation 165 [2/2] (2.77ns)   --->   "%local_weights_load = load i14 %local_weights_addr" [cnn_layer.cpp:90]   --->   Operation 165 'load' 'local_weights_load' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9216> <RAM>

State 6 <SV = 5> <Delay = 3.75>
ST_6 : Operation 166 [1/2] ( I:2.77ns O:2.77ns )   --->   "%input_buf_load = load i12 %input_buf_addr" [cnn_layer.cpp:90]   --->   Operation 166 'load' 'input_buf_load' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 3200> <RAM>
ST_6 : Operation 167 [1/1] (0.00ns)   --->   "%sext_ln90 = sext i16 %input_buf_load" [cnn_layer.cpp:90]   --->   Operation 167 'sext' 'sext_ln90' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 168 [1/2] ( I:2.77ns O:2.77ns )   --->   "%local_weights_load = load i14 %local_weights_addr" [cnn_layer.cpp:90]   --->   Operation 168 'load' 'local_weights_load' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9216> <RAM>
ST_6 : Operation 169 [1/1] (0.00ns)   --->   "%sext_ln90_1 = sext i16 %local_weights_load" [cnn_layer.cpp:90]   --->   Operation 169 'sext' 'sext_ln90_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 170 [3/3] (0.98ns) (grouped into DSP with root node sum_6)   --->   "%mul_ln90 = mul i32 %sext_ln90_1, i32 %sext_ln90" [cnn_layer.cpp:90]   --->   Operation 170 'mul' 'mul_ln90' <Predicate = true> <Delay = 0.98> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.82> <IPBlock> <Opcode : 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 1.75>
ST_7 : Operation 171 [1/1] (0.00ns)   --->   "%oc_cast_cast = zext i5 %empty_78" [cnn_layer.cpp:77]   --->   Operation 171 'zext' 'oc_cast_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 172 [1/1] (0.00ns)   --->   "%local_bias_addr = getelementptr i16 %local_bias, i32 0, i32 %oc_cast_cast" [cnn_layer.cpp:77]   --->   Operation 172 'getelementptr' 'local_bias_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 173 [2/2] (1.75ns)   --->   "%local_bias_load = load i5 %local_bias_addr" [cnn_layer.cpp:77]   --->   Operation 173 'load' 'local_bias_load' <Predicate = true> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 32> <RAM>
ST_7 : Operation 174 [2/3] (0.98ns) (grouped into DSP with root node sum_6)   --->   "%mul_ln90 = mul i32 %sext_ln90_1, i32 %sext_ln90" [cnn_layer.cpp:90]   --->   Operation 174 'mul' 'mul_ln90' <Predicate = true> <Delay = 0.98> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.82> <IPBlock> <Opcode : 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 6.80>
ST_8 : Operation 175 [1/1] (0.00ns)   --->   "%sum_4_load = load i32 %sum_4"   --->   Operation 175 'load' 'sum_4_load' <Predicate = (!and_ln77_6 & !exitcond_flatten33_mid299)> <Delay = 0.00>
ST_8 : Operation 176 [1/1] (0.00ns)   --->   "%sext_ln7910_load = load i32 %sext_ln7910"   --->   Operation 176 'load' 'sext_ln7910_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 177 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_77_1_VITIS_LOOP_79_2_VITIS_LOOP_81_3_VITIS_LOOP_84_4_VITIS_LOOP_86_5_s"   --->   Operation 177 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 178 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 589824, i64 589824, i64 589824"   --->   Operation 178 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node first_iter_4_mid2)   --->   "%or_ln77 = or i1 %icmp_ln79, i1 %first_iter_451" [cnn_layer.cpp:77]   --->   Operation 179 'or' 'or_ln77' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node or_ln87_4)   --->   "%or_ln77_4 = or i1 %icmp_ln79, i1 %first_iter_354" [cnn_layer.cpp:77]   --->   Operation 180 'or' 'or_ln77_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node xor_ln87_3)   --->   "%or_ln77_5 = or i1 %icmp_ln79, i1 %first_iter_256" [cnn_layer.cpp:77]   --->   Operation 181 'or' 'or_ln77_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node first_iter_1_mid228)   --->   "%or_ln77_6 = or i1 %icmp_ln79, i1 %first_iter_158" [cnn_layer.cpp:77]   --->   Operation 182 'or' 'or_ln77_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node sum_4_mid247)   --->   "%sum_4_mid279 = select i1 %and_ln77_6, i32 %sext_ln7910_load, i32 %sum_4_load" [cnn_layer.cpp:77]   --->   Operation 183 'select' 'sum_4_mid279' <Predicate = (!exitcond_flatten33_mid299)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 184 [1/1] (0.99ns)   --->   "%first_iter_4_mid1 = icmp_eq  i4 %add_ln79, i4 0" [cnn_layer.cpp:79]   --->   Operation 184 'icmp' 'first_iter_4_mid1' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 185 [1/1] (0.81ns) (out node of the LUT)   --->   "%first_iter_4_mid2 = select i1 %and_ln77_6, i1 %first_iter_4_mid1, i1 %or_ln77" [cnn_layer.cpp:77]   --->   Operation 185 'select' 'first_iter_4_mid2' <Predicate = true> <Delay = 0.81> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node or_ln87_4)   --->   "%first_iter_3_mid281 = or i1 %and_ln77_6, i1 %or_ln77_4" [cnn_layer.cpp:77]   --->   Operation 186 'or' 'first_iter_3_mid281' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node xor_ln87_3)   --->   "%first_iter_2_mid285 = or i1 %and_ln77_6, i1 %or_ln77_5" [cnn_layer.cpp:77]   --->   Operation 187 'or' 'first_iter_2_mid285' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node first_iter_1_mid228)   --->   "%first_iter_1_mid289 = or i1 %and_ln77_6, i1 %or_ln77_6" [cnn_layer.cpp:77]   --->   Operation 188 'or' 'first_iter_1_mid289' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 189 [1/1] (0.70ns) (out node of the LUT)   --->   "%sum_4_mid247 = select i1 %exitcond_flatten33_mid299, i32 %sext_ln7910_load, i32 %sum_4_mid279" [cnn_layer.cpp:77]   --->   Operation 189 'select' 'sum_4_mid247' <Predicate = true> <Delay = 0.70> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 190 [1/1] (0.99ns)   --->   "%first_iter_3_mid1 = icmp_eq  i4 %add_ln81, i4 0" [cnn_layer.cpp:81]   --->   Operation 190 'icmp' 'first_iter_3_mid1' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node or_ln87_4)   --->   "%first_iter_3_mid2 = select i1 %exitcond_flatten33_mid299, i1 %first_iter_3_mid1, i1 %first_iter_3_mid281" [cnn_layer.cpp:77]   --->   Operation 191 'select' 'first_iter_3_mid2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node xor_ln87_3)   --->   "%first_iter_2_mid249 = or i1 %exitcond_flatten33_mid299, i1 %first_iter_2_mid285" [cnn_layer.cpp:77]   --->   Operation 192 'or' 'first_iter_2_mid249' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node first_iter_1_mid228)   --->   "%first_iter_1_mid253 = or i1 %exitcond_flatten33_mid299, i1 %first_iter_1_mid289" [cnn_layer.cpp:77]   --->   Operation 193 'or' 'first_iter_1_mid253' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 194 [1/1] (1.28ns)   --->   "%first_iter_2_mid1 = icmp_eq  i6 %add_ln84, i6 0" [cnn_layer.cpp:84]   --->   Operation 194 'icmp' 'first_iter_2_mid1' <Predicate = true> <Delay = 1.28> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node xor_ln87_3)   --->   "%first_iter_2_mid2 = select i1 %exitcond_flatten_mid259, i1 %first_iter_2_mid1, i1 %first_iter_2_mid249" [cnn_layer.cpp:77]   --->   Operation 195 'select' 'first_iter_2_mid2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 196 [1/1] (0.80ns) (out node of the LUT)   --->   "%first_iter_1_mid228 = or i1 %exitcond_flatten_mid259, i1 %first_iter_1_mid253" [cnn_layer.cpp:77]   --->   Operation 196 'or' 'first_iter_1_mid228' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 197 [1/1] (0.63ns)   --->   "%first_iter_1_mid1 = icmp_eq  i2 %add_ln86, i2 0" [cnn_layer.cpp:86]   --->   Operation 197 'icmp' 'first_iter_1_mid1' <Predicate = true> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node or_ln87_3)   --->   "%first_iter_1_mid2 = select i1 %icmp_ln87_mid230, i1 %first_iter_1_mid1, i1 %first_iter_1_mid228" [cnn_layer.cpp:77]   --->   Operation 198 'select' 'first_iter_1_mid2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 199 [1/2] ( I:1.75ns O:1.75ns )   --->   "%local_bias_load = load i5 %local_bias_addr" [cnn_layer.cpp:77]   --->   Operation 199 'load' 'local_bias_load' <Predicate = true> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 32> <RAM>
ST_8 : Operation 200 [1/1] (0.00ns)   --->   "%sum = bitconcatenate i28 @_ssdm_op_BitConcatenate.i28.i16.i12, i16 %local_bias_load, i12 0" [cnn_layer.cpp:77]   --->   Operation 200 'bitconcatenate' 'sum' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 201 [1/1] (0.63ns)   --->   "%icmp_ln87_3 = icmp_ne  i2 %n_mid2, i2 0" [cnn_layer.cpp:87]   --->   Operation 201 'icmp' 'icmp_ln87_3' <Predicate = true> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node or_ln87_3)   --->   "%xor_ln87 = xor i1 %first_iter_1_mid2, i1 1" [cnn_layer.cpp:87]   --->   Operation 202 'xor' 'xor_ln87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node or_ln87_3)   --->   "%or_ln87 = or i1 %icmp_ln87_3, i1 %xor_ln87" [cnn_layer.cpp:87]   --->   Operation 203 'or' 'or_ln87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 204 [1/1] (0.81ns) (out node of the LUT)   --->   "%xor_ln87_3 = xor i1 %first_iter_2_mid2, i1 1" [cnn_layer.cpp:87]   --->   Operation 204 'xor' 'xor_ln87_3' <Predicate = true> <Delay = 0.81> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 205 [1/1] (0.81ns) (out node of the LUT)   --->   "%or_ln87_3 = or i1 %or_ln87, i1 %xor_ln87_3" [cnn_layer.cpp:87]   --->   Operation 205 'or' 'or_ln87_3' <Predicate = true> <Delay = 0.81> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node or_ln87_4)   --->   "%xor_ln87_4 = xor i1 %first_iter_3_mid2, i1 1" [cnn_layer.cpp:87]   --->   Operation 206 'xor' 'xor_ln87_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 207 [1/1] (0.81ns) (out node of the LUT)   --->   "%or_ln87_4 = or i1 %or_ln87_3, i1 %xor_ln87_4" [cnn_layer.cpp:87]   --->   Operation 207 'or' 'or_ln87_4' <Predicate = true> <Delay = 0.81> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 208 [1/1] (0.00ns)   --->   "%br_ln87 = br i1 %or_ln87_4, void %new.body.VITIS_LOOP_81_3, void %for.inc66.for.inc.split_crit_edge" [cnn_layer.cpp:87]   --->   Operation 208 'br' 'br_ln87' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 209 [1/1] (0.00ns)   --->   "%sext_ln79 = sext i28 %sum" [cnn_layer.cpp:79]   --->   Operation 209 'sext' 'sext_ln79' <Predicate = (!or_ln87_4)> <Delay = 0.00>
ST_8 : Operation 210 [1/1] (0.70ns)   --->   "%select_ln79_4 = select i1 %first_iter_4_mid2, i32 %sext_ln79, i32 %sext_ln7910_load" [cnn_layer.cpp:79]   --->   Operation 210 'select' 'select_ln79_4' <Predicate = (!or_ln87_4)> <Delay = 0.70> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 211 [1/1] (0.70ns)   --->   "%select_ln79_5 = select i1 %first_iter_4_mid2, i32 %sext_ln79, i32 %sum_4_mid247" [cnn_layer.cpp:79]   --->   Operation 211 'select' 'select_ln79_5' <Predicate = (!or_ln87_4)> <Delay = 0.70> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 212 [1/1] (0.00ns)   --->   "%store_ln79 = store i32 %select_ln79_4, i32 %sext_ln7910" [cnn_layer.cpp:79]   --->   Operation 212 'store' 'store_ln79' <Predicate = (!or_ln87_4)> <Delay = 0.00>
ST_8 : Operation 213 [1/1] (1.32ns)   --->   "%store_ln83 = store i32 %select_ln79_5, i32 %sum_4" [cnn_layer.cpp:83]   --->   Operation 213 'store' 'store_ln83' <Predicate = (!or_ln87_4)> <Delay = 1.32>
ST_8 : Operation 214 [1/1] (0.00ns)   --->   "%br_ln81 = br void %for.inc.split" [cnn_layer.cpp:81]   --->   Operation 214 'br' 'br_ln81' <Predicate = (!or_ln87_4)> <Delay = 0.00>
ST_8 : Operation 215 [1/1] (1.32ns)   --->   "%store_ln83 = store i32 %sum_4_mid247, i32 %sum_4" [cnn_layer.cpp:83]   --->   Operation 215 'store' 'store_ln83' <Predicate = (or_ln87_4)> <Delay = 1.32>
ST_8 : Operation 216 [1/1] (0.00ns)   --->   "%br_ln87 = br void %for.inc.split" [cnn_layer.cpp:87]   --->   Operation 216 'br' 'br_ln87' <Predicate = (or_ln87_4)> <Delay = 0.00>
ST_8 : Operation 217 [1/1] (0.00ns)   --->   "%sum_4_load_1 = load i32 %sum_4" [cnn_layer.cpp:90]   --->   Operation 217 'load' 'sum_4_load_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 218 [1/3] (0.00ns) (grouped into DSP with root node sum_6)   --->   "%mul_ln90 = mul i32 %sext_ln90_1, i32 %sext_ln90" [cnn_layer.cpp:90]   --->   Operation 218 'mul' 'mul_ln90' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.82> <IPBlock> <Opcode : 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 219 [2/2] (1.76ns) (root node of the DSP)   --->   "%sum_6 = add i32 %mul_ln90, i32 %sum_4_load_1" [cnn_layer.cpp:90]   --->   Operation 219 'add' 'sum_6' <Predicate = true> <Delay = 1.76> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.82> <IPBlock> <Opcode : 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 233 [1/1] (1.29ns)   --->   "%ret_ln99 = ret" [cnn_layer.cpp:99]   --->   Operation 233 'ret' 'ret_ln99' <Predicate = (icmp_ln77)> <Delay = 1.29>

State 9 <SV = 8> <Delay = 6.68>
ST_9 : Operation 220 [1/1] (0.00ns)   --->   "%specpipeline_ln83 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_13" [cnn_layer.cpp:83]   --->   Operation 220 'specpipeline' 'specpipeline_ln83' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 221 [1/2] (1.76ns) (root node of the DSP)   --->   "%sum_6 = add i32 %mul_ln90, i32 %sum_4_load_1" [cnn_layer.cpp:90]   --->   Operation 221 'add' 'sum_6' <Predicate = true> <Delay = 1.76> <CoreInst = "DSP48">   --->   Core 116 'DSP48' <Latency = 3> <II = 1> <Delay = 1.82> <IPBlock> <Opcode : 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 222 [1/1] (0.00ns)   --->   "%result = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %sum_6, i32 12, i32 27" [cnn_layer.cpp:94]   --->   Operation 222 'partselect' 'result' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 223 [1/1] (0.00ns)   --->   "%trunc_ln94_1 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %sum_6, i32 12, i32 26" [cnn_layer.cpp:94]   --->   Operation 223 'partselect' 'trunc_ln94_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 224 [1/1] (1.54ns)   --->   "%icmp_ln95 = icmp_sgt  i16 %result, i16 0" [cnn_layer.cpp:95]   --->   Operation 224 'icmp' 'icmp_ln95' <Predicate = true> <Delay = 1.54> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 225 [1/1] (0.60ns)   --->   "%select_ln95 = select i1 %icmp_ln95, i15 %trunc_ln94_1, i15 0" [cnn_layer.cpp:95]   --->   Operation 225 'select' 'select_ln95' <Predicate = true> <Delay = 0.60> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 226 [1/1] (0.00ns)   --->   "%tmp_40 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i5.i3.i3, i5 %empty_78, i3 %trunc_ln95, i3 %trunc_ln89" [cnn_layer.cpp:95]   --->   Operation 226 'bitconcatenate' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 227 [1/1] (0.00ns)   --->   "%zext_ln95 = zext i11 %tmp_40" [cnn_layer.cpp:95]   --->   Operation 227 'zext' 'zext_ln95' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 228 [1/1] (0.00ns)   --->   "%output_buf_addr = getelementptr i15 %output_buf, i32 0, i32 %zext_ln95" [cnn_layer.cpp:95]   --->   Operation 228 'getelementptr' 'output_buf_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 229 [1/1] ( I:2.77ns O:2.77ns )   --->   "%store_ln95 = store i15 %select_ln95, i11 %output_buf_addr" [cnn_layer.cpp:95]   --->   Operation 229 'store' 'store_ln95' <Predicate = (icmp_ln87_4 & icmp_ln86_2 & icmp_ln84_2)> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 15> <Depth = 2048> <RAM>
ST_9 : Operation 230 [1/1] (0.00ns)   --->   "%br_ln87 = br void %new.latch.for.inc46" [cnn_layer.cpp:87]   --->   Operation 230 'br' 'br_ln87' <Predicate = (icmp_ln87_4 & icmp_ln86_2 & icmp_ln84_2)> <Delay = 0.00>
ST_9 : Operation 231 [1/1] (1.32ns)   --->   "%store_ln83 = store i32 %sum_6, i32 %sum_4" [cnn_layer.cpp:83]   --->   Operation 231 'store' 'store_ln83' <Predicate = true> <Delay = 1.32>
ST_9 : Operation 232 [1/1] (0.00ns)   --->   "%br_ln87 = br void %for.inc" [cnn_layer.cpp:87]   --->   Operation 232 'br' 'br_ln87' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.298ns
The critical path consists of the following:
	'alloca' operation 20 bit ('indvar_flatten151') [16]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten151' [18]  (1.298 ns)

 <State 2>: 5.831ns
The critical path consists of the following:
	'load' operation 16 bit ('indvar_flatten100_load', cnn_layer.cpp:79) on local variable 'indvar_flatten100' [34]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln79', cnn_layer.cpp:79) [51]  (1.545 ns)
	'xor' operation 1 bit ('xor_ln77', cnn_layer.cpp:77) [61]  (0.800 ns)
	'and' operation 1 bit ('and_ln77_6', cnn_layer.cpp:77) [68]  (0.800 ns)
	'or' operation 1 bit ('empty', cnn_layer.cpp:77) [71]  (0.800 ns)
	'select' operation 13 bit ('select_ln81_2', cnn_layer.cpp:81) [216]  (0.589 ns)
	'store' operation 0 bit ('store_ln81', cnn_layer.cpp:81) of variable 'select_ln81_2', cnn_layer.cpp:81 on local variable 'indvar_flatten60' [223]  (1.298 ns)

 <State 3>: 6.751ns
The critical path consists of the following:
	'load' operation 10 bit ('indvar_flatten31_load', cnn_layer.cpp:84) on local variable 'indvar_flatten31' [32]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln84', cnn_layer.cpp:84) [66]  (1.417 ns)
	'and' operation 1 bit ('and_ln77_5', cnn_layer.cpp:77) [83]  (0.000 ns)
	'and' operation 1 bit ('exitcond_flatten33_mid299', cnn_layer.cpp:77) [84]  (0.800 ns)
	'xor' operation 1 bit ('not_exitcond_flatten33_mid299', cnn_layer.cpp:77) [95]  (0.800 ns)
	'and' operation 1 bit ('exitcond_flatten_mid259', cnn_layer.cpp:77) [96]  (0.800 ns)
	'or' operation 1 bit ('empty_73', cnn_layer.cpp:77) [99]  (0.000 ns)
	'or' operation 1 bit ('empty_74', cnn_layer.cpp:77) [100]  (0.800 ns)
	'select' operation 4 bit ('select_ln86_2', cnn_layer.cpp:86) [212]  (0.836 ns)
	'store' operation 0 bit ('store_ln86', cnn_layer.cpp:86) of variable 'select_ln86_2', cnn_layer.cpp:86 on local variable 'indvar_flatten' [227]  (1.298 ns)

 <State 4>: 6.431ns
The critical path consists of the following:
	'load' operation 4 bit ('i_load') on local variable 'i', cnn_layer.cpp:79 [45]  (0.000 ns)
	'select' operation 4 bit ('select_ln77', cnn_layer.cpp:77) [52]  (0.836 ns)
	'add' operation 4 bit ('add_ln79', cnn_layer.cpp:79) [70]  (0.997 ns)
	'select' operation 4 bit ('select_ln79', cnn_layer.cpp:79) [85]  (0.836 ns)
	'add' operation 4 bit ('add_ln90', cnn_layer.cpp:90) [163]  (0.768 ns)
	'add' operation 9 bit ('add_ln90_24', cnn_layer.cpp:90) [165]  (2.994 ns)

 <State 5>: 6.615ns
The critical path consists of the following:
	'add' operation 4 bit ('add_ln90_1', cnn_layer.cpp:90) [176]  (0.768 ns)
	'add' operation 12 bit ('add_ln90_26', cnn_layer.cpp:90) [178]  (3.076 ns)
	'getelementptr' operation 12 bit ('input_buf_addr', cnn_layer.cpp:90) [180]  (0.000 ns)
	'load' operation 16 bit ('input_buf_load', cnn_layer.cpp:90) on array 'input_buf' [181]  (2.771 ns)

 <State 6>: 3.751ns
The critical path consists of the following:
	'load' operation 16 bit ('input_buf_load', cnn_layer.cpp:90) on array 'input_buf' [181]  (2.771 ns)
	'mul' operation 32 bit of DSP[186] ('mul_ln90', cnn_layer.cpp:90) [185]  (0.980 ns)

 <State 7>: 1.755ns
The critical path consists of the following:
	'getelementptr' operation 5 bit ('local_bias_addr', cnn_layer.cpp:77) [120]  (0.000 ns)
	'load' operation 16 bit ('local_bias_load', cnn_layer.cpp:77) on array 'local_bias' [121]  (1.755 ns)

 <State 8>: 6.806ns
The critical path consists of the following:
	'icmp' operation 1 bit ('first_iter_2_mid1', cnn_layer.cpp:84) [102]  (1.282 ns)
	'select' operation 1 bit ('first_iter_2_mid2', cnn_layer.cpp:77) [103]  (0.000 ns)
	'xor' operation 1 bit ('xor_ln87_3', cnn_layer.cpp:87) [126]  (0.813 ns)
	'or' operation 1 bit ('or_ln87_3', cnn_layer.cpp:87) [127]  (0.813 ns)
	'or' operation 1 bit ('or_ln87_4', cnn_layer.cpp:87) [129]  (0.813 ns)
	'store' operation 0 bit ('store_ln83', cnn_layer.cpp:83) of variable 'select_ln79_5', cnn_layer.cpp:79 on local variable 'sum', cnn_layer.cpp:83 [136]  (1.325 ns)
	'load' operation 32 bit ('sum_4_load_1', cnn_layer.cpp:90) on local variable 'sum', cnn_layer.cpp:83 [142]  (0.000 ns)
	'add' operation 32 bit of DSP[186] ('sum', cnn_layer.cpp:90) [186]  (1.760 ns)

 <State 9>: 6.683ns
The critical path consists of the following:
	'add' operation 32 bit of DSP[186] ('sum', cnn_layer.cpp:90) [186]  (1.760 ns)
	'icmp' operation 1 bit ('icmp_ln95', cnn_layer.cpp:95) [193]  (1.545 ns)
	'select' operation 15 bit ('select_ln95', cnn_layer.cpp:95) [194]  (0.607 ns)
	'store' operation 0 bit ('store_ln95', cnn_layer.cpp:95) of variable 'select_ln95', cnn_layer.cpp:95 on array 'output_buf' [204]  (2.771 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
