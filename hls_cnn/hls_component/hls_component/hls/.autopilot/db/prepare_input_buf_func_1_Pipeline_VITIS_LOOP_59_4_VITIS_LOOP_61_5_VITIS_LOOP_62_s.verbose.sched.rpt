

================================================================
== Vitis HLS Report for 'prepare_input_buf_func_1_Pipeline_VITIS_LOOP_59_4_VITIS_LOOP_61_5_VITIS_LOOP_62_s'
================================================================
* Date:           Fri Jul 18 13:03:42 2025

* Version:        2025.1 (Build 6135595 on May 21 2025)
* Project:        hls_component
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.274 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   |                    Pipeline                    |
    |   min   |   max   |    min   |    max   |  min  |  max  |                      Type                      |
    +---------+---------+----------+----------+-------+-------+------------------------------------------------+
    |    24578|    24578|  0.246 ms|  0.246 ms|  24577|  24577|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-------+-------+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_59_4_VITIS_LOOP_61_5_VITIS_LOOP_62_6  |    24576|    24576|         3|          3|          4|  8192|       yes|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 3, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.12>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%ic = alloca i32 1" [cnn_layer.cpp:62]   --->   Operation 6 'alloca' 'ic' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [cnn_layer.cpp:61]   --->   Operation 7 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten19 = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [cnn_layer.cpp:59]   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten33 = alloca i32 1"   --->   Operation 10 'alloca' 'indvar_flatten33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %conv1_out, void @empty_0, i32 0, i32 0, void @empty_13, i32 0, i32 0, void @empty_13, void @empty_13, void @empty_13, i32 0, i32 0, i32 0, i32 0, void @empty_13, void @empty_13, i32 4294967295, i32 0, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.29ns)   --->   "%store_ln0 = store i14 0, i14 %indvar_flatten33"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 13 [1/1] (1.29ns)   --->   "%store_ln59 = store i5 0, i5 %i" [cnn_layer.cpp:59]   --->   Operation 13 'store' 'store_ln59' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 14 [1/1] (1.29ns)   --->   "%store_ln0 = store i11 0, i11 %indvar_flatten19"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 15 [1/1] (1.29ns)   --->   "%store_ln61 = store i5 0, i5 %j" [cnn_layer.cpp:61]   --->   Operation 15 'store' 'store_ln61' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 16 [1/1] (1.29ns)   --->   "%store_ln62 = store i6 0, i6 %ic" [cnn_layer.cpp:62]   --->   Operation 16 'store' 'store_ln62' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln59 = br void %for.inc44" [cnn_layer.cpp:59]   --->   Operation 17 'br' 'br_ln59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%indvar_flatten33_load = load i14 %indvar_flatten33" [cnn_layer.cpp:59]   --->   Operation 18 'load' 'indvar_flatten33_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.52ns)   --->   "%icmp_ln59 = icmp_eq  i14 %indvar_flatten33_load, i14 8192" [cnn_layer.cpp:59]   --->   Operation 19 'icmp' 'icmp_ln59' <Predicate = true> <Delay = 1.52> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.52> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (1.52ns)   --->   "%add_ln59 = add i14 %indvar_flatten33_load, i14 1" [cnn_layer.cpp:59]   --->   Operation 20 'add' 'add_ln59' <Predicate = true> <Delay = 1.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln59 = br i1 %icmp_ln59, void %for.inc50, void %for.end52.exitStub" [cnn_layer.cpp:59]   --->   Operation 21 'br' 'br_ln59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.29ns)   --->   "%store_ln59 = store i14 %add_ln59, i14 %indvar_flatten33" [cnn_layer.cpp:59]   --->   Operation 22 'store' 'store_ln59' <Predicate = (!icmp_ln59)> <Delay = 1.29>
ST_1 : Operation 73 [1/1] (1.29ns)   --->   "%ret_ln0 = ret"   --->   Operation 73 'ret' 'ret_ln0' <Predicate = (icmp_ln59)> <Delay = 1.29>

State 2 <SV = 1> <Delay = 6.27>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%ic_load = load i6 %ic" [cnn_layer.cpp:62]   --->   Operation 23 'load' 'ic_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%j_load = load i5 %j"   --->   Operation 24 'load' 'j_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%indvar_flatten19_load = load i11 %indvar_flatten19" [cnn_layer.cpp:61]   --->   Operation 25 'load' 'indvar_flatten19_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%i_load = load i5 %i"   --->   Operation 26 'load' 'i_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.48ns)   --->   "%icmp_ln61 = icmp_eq  i11 %indvar_flatten19_load, i11 512" [cnn_layer.cpp:61]   --->   Operation 27 'icmp' 'icmp_ln61' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.97ns)   --->   "%select_ln59 = select i1 %icmp_ln61, i5 0, i5 %j_load" [cnn_layer.cpp:59]   --->   Operation 28 'select' 'select_ln59' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (1.02ns)   --->   "%p_mid1 = add i5 %i_load, i5 2"   --->   Operation 29 'add' 'p_mid1' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (1.02ns)   --->   "%empty = add i5 %i_load, i5 1"   --->   Operation 30 'add' 'empty' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.97ns)   --->   "%select_ln59_3 = select i1 %icmp_ln61, i5 %p_mid1, i5 %empty" [cnn_layer.cpp:59]   --->   Operation 31 'select' 'select_ln59_3' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.02ns)   --->   "%indvars_iv_next223 = add i5 %j_load, i5 1"   --->   Operation 32 'add' 'indvars_iv_next223' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node select_ln61_1)   --->   "%select_ln59_4 = select i1 %icmp_ln61, i5 1, i5 %indvars_iv_next223" [cnn_layer.cpp:59]   --->   Operation 33 'select' 'select_ln59_4' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node and_ln59)   --->   "%xor_ln59 = xor i1 %icmp_ln61, i1 1" [cnn_layer.cpp:59]   --->   Operation 34 'xor' 'xor_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.28ns)   --->   "%icmp_ln62 = icmp_eq  i6 %ic_load, i6 32" [cnn_layer.cpp:62]   --->   Operation 35 'icmp' 'icmp_ln62' <Predicate = true> <Delay = 1.28> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln59 = and i1 %icmp_ln62, i1 %xor_ln59" [cnn_layer.cpp:59]   --->   Operation 36 'and' 'and_ln59' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.97ns)   --->   "%select_ln59_5 = select i1 %icmp_ln61, i5 %empty, i5 %i_load" [cnn_layer.cpp:59]   --->   Operation 37 'select' 'select_ln59_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (1.02ns)   --->   "%indvars_iv_next2_dup = add i5 %select_ln59, i5 1" [cnn_layer.cpp:59]   --->   Operation 38 'add' 'indvars_iv_next2_dup' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node select_ln61)   --->   "%or_ln61 = or i1 %and_ln59, i1 %icmp_ln61" [cnn_layer.cpp:61]   --->   Operation 39 'or' 'or_ln61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln61 = select i1 %or_ln61, i6 0, i6 %ic_load" [cnn_layer.cpp:61]   --->   Operation 40 'select' 'select_ln61' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.02ns)   --->   "%indvars_iv_next2_mid1 = add i5 %select_ln59, i5 2" [cnn_layer.cpp:59]   --->   Operation 41 'add' 'indvars_iv_next2_mid1' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln61_1 = select i1 %and_ln59, i5 %indvars_iv_next2_mid1, i5 %select_ln59_4" [cnn_layer.cpp:61]   --->   Operation 42 'select' 'select_ln61_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.97ns)   --->   "%select_ln61_2 = select i1 %and_ln59, i5 %indvars_iv_next2_dup, i5 %select_ln59" [cnn_layer.cpp:61]   --->   Operation 43 'select' 'select_ln61_2' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln64 = zext i5 %select_ln59_3" [cnn_layer.cpp:64]   --->   Operation 44 'zext' 'zext_ln64' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln64 = trunc i6 %select_ln61" [cnn_layer.cpp:64]   --->   Operation 45 'trunc' 'trunc_ln64' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i5.i4, i5 %trunc_ln64, i4 0" [cnn_layer.cpp:64]   --->   Operation 46 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln64_8 = zext i9 %tmp" [cnn_layer.cpp:64]   --->   Operation 47 'zext' 'zext_ln64_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%shl_ln64 = shl i6 %select_ln61, i6 1" [cnn_layer.cpp:64]   --->   Operation 48 'shl' 'shl_ln64' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln64_9 = zext i6 %shl_ln64" [cnn_layer.cpp:64]   --->   Operation 49 'zext' 'zext_ln64_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln64_4 = add i10 %zext_ln64_8, i10 %zext_ln64_9" [cnn_layer.cpp:64]   --->   Operation 50 'add' 'add_ln64_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.56> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 51 [1/1] (3.02ns) (root node of TernaryAdder)   --->   "%add_ln64 = add i10 %add_ln64_4, i10 %zext_ln64" [cnn_layer.cpp:64]   --->   Operation 51 'add' 'add_ln64' <Predicate = true> <Delay = 3.02> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.56> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 52 [1/1] (1.28ns)   --->   "%add_ln62 = add i6 %select_ln61, i6 1" [cnn_layer.cpp:62]   --->   Operation 52 'add' 'add_ln62' <Predicate = true> <Delay = 1.28> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (1.48ns)   --->   "%add_ln61 = add i11 %indvar_flatten19_load, i11 1" [cnn_layer.cpp:61]   --->   Operation 53 'add' 'add_ln61' <Predicate = true> <Delay = 1.48> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.79ns)   --->   "%select_ln61_3 = select i1 %icmp_ln61, i11 1, i11 %add_ln61" [cnn_layer.cpp:61]   --->   Operation 54 'select' 'select_ln61_3' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (1.29ns)   --->   "%store_ln59 = store i5 %select_ln59_5, i5 %i" [cnn_layer.cpp:59]   --->   Operation 55 'store' 'store_ln59' <Predicate = true> <Delay = 1.29>
ST_2 : Operation 56 [1/1] (1.29ns)   --->   "%store_ln61 = store i11 %select_ln61_3, i11 %indvar_flatten19" [cnn_layer.cpp:61]   --->   Operation 56 'store' 'store_ln61' <Predicate = true> <Delay = 1.29>
ST_2 : Operation 57 [1/1] (1.29ns)   --->   "%store_ln61 = store i5 %select_ln61_2, i5 %j" [cnn_layer.cpp:61]   --->   Operation 57 'store' 'store_ln61' <Predicate = true> <Delay = 1.29>
ST_2 : Operation 58 [1/1] (1.29ns)   --->   "%store_ln62 = store i6 %add_ln62, i6 %ic" [cnn_layer.cpp:62]   --->   Operation 58 'store' 'store_ln62' <Predicate = true> <Delay = 1.29>

State 3 <SV = 2> <Delay = 6.18>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_59_4_VITIS_LOOP_61_5_VITIS_LOOP_62_6_str"   --->   Operation 59 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 8192, i64 8192, i64 8192"   --->   Operation 60 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i5 %select_ln61_1" [cnn_layer.cpp:63]   --->   Operation 61 'zext' 'zext_ln63' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%specpipeline_ln63 = specpipeline void @_ssdm_op_SpecPipeline, i32 4, i32 0, i32 0, i32 0, void @empty_13" [cnn_layer.cpp:63]   --->   Operation 62 'specpipeline' 'specpipeline_ln63' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] ( I:3.41ns O:3.41ns )   --->   "%conv1_out_read = read i16 @_ssdm_op_Read.ap_fifo.volatile.i16P0A, i16 %conv1_out" [cnn_layer.cpp:64]   --->   Operation 63 'read' 'conv1_out_read' <Predicate = true> <Delay = 3.41> <CoreInst = "FIFO">   --->   Core 77 'FIFO' <Latency = 0> <II = 1> <Delay = 3.41> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 8192> <FIFO>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_13 = bitconcatenate i14 @_ssdm_op_BitConcatenate.i14.i10.i4, i10 %add_ln64, i4 0" [cnn_layer.cpp:64]   --->   Operation 64 'bitconcatenate' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_14 = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i10.i1, i10 %add_ln64, i1 0" [cnn_layer.cpp:64]   --->   Operation 65 'bitconcatenate' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln64_10 = zext i11 %tmp_14" [cnn_layer.cpp:64]   --->   Operation 66 'zext' 'zext_ln64_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln64_5 = add i14 %tmp_13, i14 %zext_ln64_10" [cnn_layer.cpp:64]   --->   Operation 67 'add' 'add_ln64_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.56> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 68 [1/1] (3.13ns) (root node of TernaryAdder)   --->   "%add_ln64_1 = add i14 %add_ln64_5, i14 %zext_ln63" [cnn_layer.cpp:64]   --->   Operation 68 'add' 'add_ln64_1' <Predicate = true> <Delay = 3.13> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.56> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln64_11 = zext i14 %add_ln64_1" [cnn_layer.cpp:64]   --->   Operation 69 'zext' 'zext_ln64_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%input_buf_addr = getelementptr i16 %input_buf, i32 0, i32 %zext_ln64_11" [cnn_layer.cpp:64]   --->   Operation 70 'getelementptr' 'input_buf_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] ( I:2.77ns O:2.77ns )   --->   "%store_ln64 = store i16 %conv1_out_read, i14 %input_buf_addr" [cnn_layer.cpp:64]   --->   Operation 71 'store' 'store_ln64' <Predicate = true> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 10368> <RAM>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln62 = br void %for.inc44" [cnn_layer.cpp:62]   --->   Operation 72 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.124ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten33' [9]  (1.298 ns)
	'load' operation 14 bit ('indvar_flatten33_load', cnn_layer.cpp:59) on local variable 'indvar_flatten33' [16]  (0.000 ns)
	'add' operation 14 bit ('add_ln59', cnn_layer.cpp:59) [18]  (1.528 ns)
	'store' operation 0 bit ('store_ln59', cnn_layer.cpp:59) of variable 'add_ln59', cnn_layer.cpp:59 on local variable 'indvar_flatten33' [66]  (1.298 ns)

 <State 2>: 6.274ns
The critical path consists of the following:
	'load' operation 11 bit ('indvar_flatten19_load', cnn_layer.cpp:61) on local variable 'indvar_flatten19' [23]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln61', cnn_layer.cpp:61) [27]  (1.482 ns)
	'xor' operation 1 bit ('xor_ln59', cnn_layer.cpp:59) [34]  (0.000 ns)
	'and' operation 1 bit ('and_ln59', cnn_layer.cpp:59) [36]  (0.800 ns)
	'or' operation 1 bit ('or_ln61', cnn_layer.cpp:61) [39]  (0.000 ns)
	'select' operation 6 bit ('select_ln61', cnn_layer.cpp:61) [40]  (0.972 ns)
	'shl' operation 6 bit ('shl_ln64', cnn_layer.cpp:64) [51]  (0.000 ns)
	'add' operation 10 bit ('add_ln64_4', cnn_layer.cpp:64) [53]  (0.000 ns)
	'add' operation 10 bit ('add_ln64', cnn_layer.cpp:64) [54]  (3.021 ns)

 <State 3>: 6.189ns
The critical path consists of the following:
	fifo read operation ('conv1_out_read', cnn_layer.cpp:64) on port 'conv1_out' (cnn_layer.cpp:64) [47]  (3.418 ns)
	'store' operation 0 bit ('store_ln64', cnn_layer.cpp:64) of variable 'conv1_out_read', cnn_layer.cpp:64 on array 'input_buf' [62]  (2.771 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
