-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_top_convolution_func is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_buf_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_buf_ce0 : OUT STD_LOGIC;
    input_buf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    local_weights_ce0 : OUT STD_LOGIC;
    local_weights_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_bias_ce0 : OUT STD_LOGIC;
    local_bias_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_buf_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_buf_ce0 : OUT STD_LOGIC;
    output_buf_we0 : OUT STD_LOGIC;
    output_buf_d0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
end;


architecture behav of cnn_top_convolution_func is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv20_90000 : STD_LOGIC_VECTOR (19 downto 0) := "10010000000000000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv16_4800 : STD_LOGIC_VECTOR (15 downto 0) := "0100100000000000";
    constant ap_const_lv13_900 : STD_LOGIC_VECTOR (12 downto 0) := "0100100000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv10_120 : STD_LOGIC_VECTOR (9 downto 0) := "0100100000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln77_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln77_reg_1282 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1286 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1286_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1286_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1286_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1286_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1286_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln77_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln77_reg_1299 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln77_reg_1299_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln81_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln81_reg_1306 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_6_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_6_reg_1311 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_6_reg_1311_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_6_reg_1311_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_6_reg_1311_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_6_reg_1311_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_6_reg_1311_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_1322 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_1322_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten62_mid21508_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten62_mid21508_reg_1328 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid295_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid295_reg_1333 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_reg_1338 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_reg_1338_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_reg_1338_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_reg_1338_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_71_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_71_reg_1348 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_72_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_72_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten33_mid299_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten33_mid299_reg_1358 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_reg_1363 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_reg_1363_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_reg_1363_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_reg_1363_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_reg_1363_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_74_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_74_reg_1371 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_451_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_451_reg_1376 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_451_reg_1376_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_451_reg_1376_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_451_reg_1376_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_354_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_354_reg_1381 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_354_reg_1381_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_354_reg_1381_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_354_reg_1381_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_256_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_256_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_256_reg_1386_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_256_reg_1386_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_256_reg_1386_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_158_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_158_reg_1391 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_158_reg_1391_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_158_reg_1391_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_158_reg_1391_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln79_fu_553_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln79_reg_1396 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln79_reg_1396_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln79_reg_1396_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln79_reg_1396_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln81_fu_578_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln81_reg_1401 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln81_reg_1401_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln81_reg_1401_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln81_reg_1401_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln84_fu_598_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln84_reg_1406 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln84_reg_1406_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln84_reg_1406_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln84_reg_1406_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln87_mid230_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid230_reg_1411 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid230_reg_1411_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid230_reg_1411_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid230_reg_1411_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln86_fu_639_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln86_reg_1416 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln86_reg_1416_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln86_reg_1416_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln86_reg_1416_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal n_mid2_fu_660_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_mid2_reg_1421 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_mid2_reg_1421_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal n_mid2_reg_1421_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal n_mid2_reg_1421_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_78_fu_676_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_78_reg_1428 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_78_reg_1428_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_78_reg_1428_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_78_reg_1428_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_78_reg_1428_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln95_fu_680_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln95_reg_1434 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln95_reg_1434_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln95_reg_1434_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln95_reg_1434_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln95_reg_1434_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln89_fu_688_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln89_reg_1439 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln89_reg_1439_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln89_reg_1439_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln89_reg_1439_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln89_reg_1439_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln90_23_fu_756_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln90_23_reg_1445 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln90_24_fu_776_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln90_24_reg_1451 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln87_4_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_4_reg_1457 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_4_reg_1457_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_4_reg_1457_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_4_reg_1457_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_4_reg_1457_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_2_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_2_reg_1461 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_2_reg_1461_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_2_reg_1461_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_2_reg_1461_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_2_reg_1461_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_2_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_2_reg_1465 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_2_reg_1465_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_2_reg_1465_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_2_reg_1465_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_2_reg_1465_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal zext_ln90_29_fu_888_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln90_31_fu_912_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal oc_cast_cast_fu_925_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln95_fu_1170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_4_fu_106 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_fu_1179_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln79_5_fu_1104_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_4_mid247_fu_985_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_4_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_4_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln87_4_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_fu_110 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal add_ln87_fu_782_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal m_fu_114 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal select_ln86_fu_668_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_fu_118 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal select_ln86_2_fu_448_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ic_fu_122 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal select_ln84_fu_632_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten31_fu_126 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal select_ln84_2_fu_462_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_fu_130 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal select_ln81_fu_591_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten60_fu_134 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    signal select_ln81_2_fu_322_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_fu_138 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal select_ln79_fu_571_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten100_fu_142 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal select_ln79_6_fu_336_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal oc_fu_146 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal select_ln77_2_fu_546_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten151_fu_150 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    signal add_ln77_2_fu_280_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln7910_fu_154 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal select_ln79_4_fu_1096_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buf_ce0_local : STD_LOGIC;
    signal local_weights_ce0_local : STD_LOGIC;
    signal local_bias_ce0_local : STD_LOGIC;
    signal output_buf_we0_local : STD_LOGIC;
    signal select_ln95_fu_1154_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal output_buf_ce0_local : STD_LOGIC;
    signal add_ln81_2_fu_316_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln79_2_fu_330_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln86_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten62_not9_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_4_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_5_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_73_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln86_2_fu_442_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln84_2_fu_456_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln87_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln77_fu_498_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln77_fu_504_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln77_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid268_fu_559_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ic_mid239_fu_584_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_flatten_mid295_not_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid291_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid255_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_mid259_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_mid222_fu_604_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_75_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_76_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_77_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln90_fu_692_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_696_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln90_fu_708_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln90_fu_704_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln90_23_fu_714_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_724_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_fu_736_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln90_24_fu_732_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln90_fu_746_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln90_25_fu_752_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln81_fu_684_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln90_1_fu_762_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln90_fu_766_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln90_27_fu_718_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln90_27_fu_772_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl4_fu_842_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln90_26_fu_839_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_55_fu_862_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_54_fu_855_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln83_fu_869_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln90_4_fu_849_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln90_28_fu_879_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln90_25_fu_882_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln89_fu_836_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln90_2_fu_893_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln90_1_fu_896_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln83_fu_873_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln90_30_fu_902_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln90_26_fu_906_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal first_iter_4_mid1_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln77_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln77_4_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln77_5_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln77_6_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_4_mid279_fu_951_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_iter_3_mid1_fu_992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_3_mid281_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_2_mid285_fu_975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_1_mid289_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_2_mid1_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_2_mid249_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_1_mid253_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_1_mid1_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_1_mid228_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_1_mid2_fu_1036_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_3_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln87_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_2_mid2_fu_1019_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln87_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln87_3_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_3_mid2_fu_997_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln87_3_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln87_4_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_fu_1043_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal first_iter_4_mid2_fu_963_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln79_fu_1092_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_1130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln94_1_fu_1139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_1130_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln95_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln94_1_fu_1139_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_40_fu_1163_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_top_mac_muladd_16s_16s_32ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mac_muladd_16s_16s_32ns_32_4_1_U232 : component cnn_top_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => local_weights_q0,
        din1 => input_buf_q0,
        din2 => ap_sig_allocacmp_sum_4_load_1,
        ce => ap_const_logic_1,
        dout => grp_fu_1179_p3);

    flow_control_loop_pipe_sequential_init_U : component cnn_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    i_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    i_fu_138 <= ap_const_lv4_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    i_fu_138 <= select_ln79_fu_571_p3;
                end if;
            end if; 
        end if;
    end process;

    ic_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ic_fu_122 <= ap_const_lv6_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    ic_fu_122 <= select_ln84_fu_632_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten100_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten100_fu_142 <= ap_const_lv16_0;
                elsif (((icmp_ln77_fu_274_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten100_fu_142 <= select_ln79_6_fu_336_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten151_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten151_fu_150 <= ap_const_lv20_0;
                elsif (((icmp_ln77_fu_274_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten151_fu_150 <= add_ln77_2_fu_280_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten31_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    indvar_flatten31_fu_126 <= ap_const_lv10_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln77_reg_1282 = ap_const_lv1_0))) then 
                    indvar_flatten31_fu_126 <= select_ln84_2_fu_462_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten60_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten60_fu_134 <= ap_const_lv13_0;
                elsif (((icmp_ln77_fu_274_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten60_fu_134 <= select_ln81_2_fu_322_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    indvar_flatten_fu_118 <= ap_const_lv4_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln77_reg_1282 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_118 <= select_ln86_2_fu_448_p3;
                end if;
            end if; 
        end if;
    end process;

    j_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    j_fu_130 <= ap_const_lv4_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    j_fu_130 <= select_ln81_fu_591_p3;
                end if;
            end if; 
        end if;
    end process;

    m_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    m_fu_114 <= ap_const_lv2_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    m_fu_114 <= select_ln86_fu_668_p3;
                end if;
            end if; 
        end if;
    end process;

    n_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    n_fu_110 <= ap_const_lv2_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    n_fu_110 <= add_ln87_fu_782_p2;
                end if;
            end if; 
        end if;
    end process;

    oc_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    oc_fu_146 <= ap_const_lv6_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    oc_fu_146 <= select_ln77_2_fu_546_p3;
                end if;
            end if; 
        end if;
    end process;

    sum_4_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (or_ln87_4_fu_1086_p2 = ap_const_lv1_1))) then 
                    sum_4_fu_106 <= sum_4_mid247_fu_985_p3;
                elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (or_ln87_4_fu_1086_p2 = ap_const_lv1_0))) then 
                    sum_4_fu_106 <= select_ln79_5_fu_1104_p3;
                elsif ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then 
                    sum_4_fu_106 <= grp_fu_1179_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln79_reg_1396 <= add_ln79_fu_553_p2;
                add_ln79_reg_1396_pp0_iter4_reg <= add_ln79_reg_1396;
                add_ln79_reg_1396_pp0_iter5_reg <= add_ln79_reg_1396_pp0_iter4_reg;
                add_ln79_reg_1396_pp0_iter6_reg <= add_ln79_reg_1396_pp0_iter5_reg;
                add_ln81_reg_1401 <= add_ln81_fu_578_p2;
                add_ln81_reg_1401_pp0_iter4_reg <= add_ln81_reg_1401;
                add_ln81_reg_1401_pp0_iter5_reg <= add_ln81_reg_1401_pp0_iter4_reg;
                add_ln81_reg_1401_pp0_iter6_reg <= add_ln81_reg_1401_pp0_iter5_reg;
                add_ln84_reg_1406 <= add_ln84_fu_598_p2;
                add_ln84_reg_1406_pp0_iter4_reg <= add_ln84_reg_1406;
                add_ln84_reg_1406_pp0_iter5_reg <= add_ln84_reg_1406_pp0_iter4_reg;
                add_ln84_reg_1406_pp0_iter6_reg <= add_ln84_reg_1406_pp0_iter5_reg;
                add_ln86_reg_1416 <= add_ln86_fu_639_p2;
                add_ln86_reg_1416_pp0_iter4_reg <= add_ln86_reg_1416;
                add_ln86_reg_1416_pp0_iter5_reg <= add_ln86_reg_1416_pp0_iter4_reg;
                add_ln86_reg_1416_pp0_iter6_reg <= add_ln86_reg_1416_pp0_iter5_reg;
                add_ln90_23_reg_1445 <= add_ln90_23_fu_756_p2;
                add_ln90_24_reg_1451 <= add_ln90_24_fu_776_p2;
                and_ln77_6_reg_1311_pp0_iter2_reg <= and_ln77_6_reg_1311;
                and_ln77_6_reg_1311_pp0_iter3_reg <= and_ln77_6_reg_1311_pp0_iter2_reg;
                and_ln77_6_reg_1311_pp0_iter4_reg <= and_ln77_6_reg_1311_pp0_iter3_reg;
                and_ln77_6_reg_1311_pp0_iter5_reg <= and_ln77_6_reg_1311_pp0_iter4_reg;
                and_ln77_6_reg_1311_pp0_iter6_reg <= and_ln77_6_reg_1311_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                empty_71_reg_1348 <= empty_71_fu_409_p2;
                empty_72_reg_1353 <= empty_72_fu_414_p2;
                empty_74_reg_1371 <= empty_74_fu_437_p2;
                empty_78_reg_1428 <= empty_78_fu_676_p1;
                empty_78_reg_1428_pp0_iter4_reg <= empty_78_reg_1428;
                empty_78_reg_1428_pp0_iter5_reg <= empty_78_reg_1428_pp0_iter4_reg;
                empty_78_reg_1428_pp0_iter6_reg <= empty_78_reg_1428_pp0_iter5_reg;
                empty_78_reg_1428_pp0_iter7_reg <= empty_78_reg_1428_pp0_iter6_reg;
                empty_reg_1322_pp0_iter2_reg <= empty_reg_1322;
                exitcond_flatten33_mid299_reg_1338 <= exitcond_flatten33_mid299_fu_403_p2;
                exitcond_flatten33_mid299_reg_1338_pp0_iter3_reg <= exitcond_flatten33_mid299_reg_1338;
                exitcond_flatten33_mid299_reg_1338_pp0_iter4_reg <= exitcond_flatten33_mid299_reg_1338_pp0_iter3_reg;
                exitcond_flatten33_mid299_reg_1338_pp0_iter5_reg <= exitcond_flatten33_mid299_reg_1338_pp0_iter4_reg;
                exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg <= exitcond_flatten33_mid299_reg_1338_pp0_iter5_reg;
                exitcond_flatten_mid259_reg_1363 <= exitcond_flatten_mid259_fu_425_p2;
                exitcond_flatten_mid259_reg_1363_pp0_iter3_reg <= exitcond_flatten_mid259_reg_1363;
                exitcond_flatten_mid259_reg_1363_pp0_iter4_reg <= exitcond_flatten_mid259_reg_1363_pp0_iter3_reg;
                exitcond_flatten_mid259_reg_1363_pp0_iter5_reg <= exitcond_flatten_mid259_reg_1363_pp0_iter4_reg;
                exitcond_flatten_mid259_reg_1363_pp0_iter6_reg <= exitcond_flatten_mid259_reg_1363_pp0_iter5_reg;
                exitcond_flatten_mid295_reg_1333 <= exitcond_flatten_mid295_fu_392_p2;
                first_iter_158_reg_1391 <= first_iter_158_fu_529_p2;
                first_iter_158_reg_1391_pp0_iter4_reg <= first_iter_158_reg_1391;
                first_iter_158_reg_1391_pp0_iter5_reg <= first_iter_158_reg_1391_pp0_iter4_reg;
                first_iter_158_reg_1391_pp0_iter6_reg <= first_iter_158_reg_1391_pp0_iter5_reg;
                first_iter_256_reg_1386 <= first_iter_256_fu_523_p2;
                first_iter_256_reg_1386_pp0_iter4_reg <= first_iter_256_reg_1386;
                first_iter_256_reg_1386_pp0_iter5_reg <= first_iter_256_reg_1386_pp0_iter4_reg;
                first_iter_256_reg_1386_pp0_iter6_reg <= first_iter_256_reg_1386_pp0_iter5_reg;
                first_iter_354_reg_1381 <= first_iter_354_fu_517_p2;
                first_iter_354_reg_1381_pp0_iter4_reg <= first_iter_354_reg_1381;
                first_iter_354_reg_1381_pp0_iter5_reg <= first_iter_354_reg_1381_pp0_iter4_reg;
                first_iter_354_reg_1381_pp0_iter6_reg <= first_iter_354_reg_1381_pp0_iter5_reg;
                first_iter_451_reg_1376 <= first_iter_451_fu_511_p2;
                first_iter_451_reg_1376_pp0_iter4_reg <= first_iter_451_reg_1376;
                first_iter_451_reg_1376_pp0_iter5_reg <= first_iter_451_reg_1376_pp0_iter4_reg;
                first_iter_451_reg_1376_pp0_iter6_reg <= first_iter_451_reg_1376_pp0_iter5_reg;
                icmp_ln79_reg_1286_pp0_iter2_reg <= icmp_ln79_reg_1286;
                icmp_ln79_reg_1286_pp0_iter3_reg <= icmp_ln79_reg_1286_pp0_iter2_reg;
                icmp_ln79_reg_1286_pp0_iter4_reg <= icmp_ln79_reg_1286_pp0_iter3_reg;
                icmp_ln79_reg_1286_pp0_iter5_reg <= icmp_ln79_reg_1286_pp0_iter4_reg;
                icmp_ln79_reg_1286_pp0_iter6_reg <= icmp_ln79_reg_1286_pp0_iter5_reg;
                icmp_ln84_2_reg_1465 <= icmp_ln84_2_fu_800_p2;
                icmp_ln84_2_reg_1465_pp0_iter4_reg <= icmp_ln84_2_reg_1465;
                icmp_ln84_2_reg_1465_pp0_iter5_reg <= icmp_ln84_2_reg_1465_pp0_iter4_reg;
                icmp_ln84_2_reg_1465_pp0_iter6_reg <= icmp_ln84_2_reg_1465_pp0_iter5_reg;
                icmp_ln84_2_reg_1465_pp0_iter7_reg <= icmp_ln84_2_reg_1465_pp0_iter6_reg;
                icmp_ln86_2_reg_1461 <= icmp_ln86_2_fu_794_p2;
                icmp_ln86_2_reg_1461_pp0_iter4_reg <= icmp_ln86_2_reg_1461;
                icmp_ln86_2_reg_1461_pp0_iter5_reg <= icmp_ln86_2_reg_1461_pp0_iter4_reg;
                icmp_ln86_2_reg_1461_pp0_iter6_reg <= icmp_ln86_2_reg_1461_pp0_iter5_reg;
                icmp_ln86_2_reg_1461_pp0_iter7_reg <= icmp_ln86_2_reg_1461_pp0_iter6_reg;
                icmp_ln87_4_reg_1457 <= icmp_ln87_4_fu_788_p2;
                icmp_ln87_4_reg_1457_pp0_iter4_reg <= icmp_ln87_4_reg_1457;
                icmp_ln87_4_reg_1457_pp0_iter5_reg <= icmp_ln87_4_reg_1457_pp0_iter4_reg;
                icmp_ln87_4_reg_1457_pp0_iter6_reg <= icmp_ln87_4_reg_1457_pp0_iter5_reg;
                icmp_ln87_4_reg_1457_pp0_iter7_reg <= icmp_ln87_4_reg_1457_pp0_iter6_reg;
                icmp_ln87_mid230_reg_1411 <= icmp_ln87_mid230_fu_626_p2;
                icmp_ln87_mid230_reg_1411_pp0_iter4_reg <= icmp_ln87_mid230_reg_1411;
                icmp_ln87_mid230_reg_1411_pp0_iter5_reg <= icmp_ln87_mid230_reg_1411_pp0_iter4_reg;
                icmp_ln87_mid230_reg_1411_pp0_iter6_reg <= icmp_ln87_mid230_reg_1411_pp0_iter5_reg;
                n_mid2_reg_1421 <= n_mid2_fu_660_p3;
                n_mid2_reg_1421_pp0_iter4_reg <= n_mid2_reg_1421;
                n_mid2_reg_1421_pp0_iter5_reg <= n_mid2_reg_1421_pp0_iter4_reg;
                n_mid2_reg_1421_pp0_iter6_reg <= n_mid2_reg_1421_pp0_iter5_reg;
                not_exitcond_flatten33_mid299_reg_1358 <= not_exitcond_flatten33_mid299_fu_419_p2;
                not_exitcond_flatten62_mid21508_reg_1328 <= not_exitcond_flatten62_mid21508_fu_387_p2;
                trunc_ln89_reg_1439 <= trunc_ln89_fu_688_p1;
                trunc_ln89_reg_1439_pp0_iter4_reg <= trunc_ln89_reg_1439;
                trunc_ln89_reg_1439_pp0_iter5_reg <= trunc_ln89_reg_1439_pp0_iter4_reg;
                trunc_ln89_reg_1439_pp0_iter6_reg <= trunc_ln89_reg_1439_pp0_iter5_reg;
                trunc_ln89_reg_1439_pp0_iter7_reg <= trunc_ln89_reg_1439_pp0_iter6_reg;
                trunc_ln95_reg_1434 <= trunc_ln95_fu_680_p1;
                trunc_ln95_reg_1434_pp0_iter4_reg <= trunc_ln95_reg_1434;
                trunc_ln95_reg_1434_pp0_iter5_reg <= trunc_ln95_reg_1434_pp0_iter4_reg;
                trunc_ln95_reg_1434_pp0_iter6_reg <= trunc_ln95_reg_1434_pp0_iter5_reg;
                trunc_ln95_reg_1434_pp0_iter7_reg <= trunc_ln95_reg_1434_pp0_iter6_reg;
                xor_ln77_reg_1299_pp0_iter2_reg <= xor_ln77_reg_1299;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln77_6_reg_1311 <= and_ln77_6_fu_304_p2;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                empty_reg_1322 <= empty_fu_310_p2;
                icmp_ln77_reg_1282 <= icmp_ln77_fu_274_p2;
                icmp_ln79_reg_1286 <= icmp_ln79_fu_286_p2;
                icmp_ln81_reg_1306 <= icmp_ln81_fu_298_p2;
                xor_ln77_reg_1299 <= xor_ln77_fu_292_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (or_ln87_4_fu_1086_p2 = ap_const_lv1_0))) then
                sext_ln7910_fu_154 <= select_ln79_4_fu_1096_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln77_2_fu_280_p2 <= std_logic_vector(unsigned(indvar_flatten151_fu_150) + unsigned(ap_const_lv20_1));
    add_ln77_fu_498_p2 <= std_logic_vector(unsigned(oc_fu_146) + unsigned(ap_const_lv6_1));
    add_ln79_2_fu_330_p2 <= std_logic_vector(unsigned(indvar_flatten100_fu_142) + unsigned(ap_const_lv16_1));
    add_ln79_fu_553_p2 <= std_logic_vector(unsigned(select_ln77_fu_504_p3) + unsigned(ap_const_lv4_1));
    add_ln81_2_fu_316_p2 <= std_logic_vector(unsigned(indvar_flatten60_fu_134) + unsigned(ap_const_lv13_1));
    add_ln81_fu_578_p2 <= std_logic_vector(unsigned(j_mid268_fu_559_p3) + unsigned(ap_const_lv4_1));
    add_ln83_fu_873_p2 <= std_logic_vector(unsigned(tmp_54_fu_855_p3) + unsigned(zext_ln83_fu_869_p1));
    add_ln84_2_fu_456_p2 <= std_logic_vector(unsigned(indvar_flatten31_fu_126) + unsigned(ap_const_lv10_1));
    add_ln84_fu_598_p2 <= std_logic_vector(unsigned(ic_mid239_fu_584_p3) + unsigned(ap_const_lv6_1));
    add_ln86_2_fu_442_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_118) + unsigned(ap_const_lv4_1));
    add_ln86_fu_639_p2 <= std_logic_vector(unsigned(m_mid222_fu_604_p3) + unsigned(ap_const_lv2_1));
    add_ln87_fu_782_p2 <= std_logic_vector(unsigned(n_mid2_fu_660_p3) + unsigned(ap_const_lv2_1));
    add_ln90_1_fu_896_p2 <= std_logic_vector(unsigned(zext_ln89_fu_836_p1) + unsigned(zext_ln90_2_fu_893_p1));
    add_ln90_23_fu_756_p2 <= std_logic_vector(unsigned(sub_ln90_fu_746_p2) + unsigned(zext_ln90_25_fu_752_p1));
    add_ln90_24_fu_776_p2 <= std_logic_vector(unsigned(add_ln90_27_fu_718_p2) + unsigned(zext_ln90_27_fu_772_p1));
    add_ln90_25_fu_882_p2 <= std_logic_vector(unsigned(sub_ln90_4_fu_849_p2) + unsigned(zext_ln90_28_fu_879_p1));
    add_ln90_26_fu_906_p2 <= std_logic_vector(unsigned(add_ln83_fu_873_p2) + unsigned(zext_ln90_30_fu_902_p1));
    add_ln90_27_fu_718_p2 <= std_logic_vector(unsigned(zext_ln90_fu_704_p1) + unsigned(zext_ln90_23_fu_714_p1));
    add_ln90_fu_766_p2 <= std_logic_vector(unsigned(zext_ln81_fu_684_p1) + unsigned(zext_ln90_1_fu_762_p1));
    and_ln77_4_fu_371_p2 <= (xor_ln77_reg_1299 and icmp_ln86_fu_365_p2);
    and_ln77_5_fu_398_p2 <= (xor_ln77_reg_1299 and icmp_ln84_fu_376_p2);
    and_ln77_6_fu_304_p2 <= (xor_ln77_fu_292_p2 and icmp_ln81_fu_298_p2);
    and_ln77_fu_541_p2 <= (xor_ln77_reg_1299_pp0_iter2_reg and icmp_ln87_fu_535_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln77_fu_274_p2)
    begin
        if (((icmp_ln77_fu_274_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, icmp_ln77_reg_1282)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln77_reg_1282 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_sum_4_load_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0, sum_4_fu_106, grp_fu_1179_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            ap_sig_allocacmp_sum_4_load <= grp_fu_1179_p3;
        else 
            ap_sig_allocacmp_sum_4_load <= sum_4_fu_106;
        end if; 
    end process;


    ap_sig_allocacmp_sum_4_load_1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0, sum_4_fu_106, grp_fu_1179_p3, select_ln79_5_fu_1104_p3, sum_4_mid247_fu_985_p3, or_ln87_4_fu_1086_p2)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0)) then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (or_ln87_4_fu_1086_p2 = ap_const_lv1_1))) then 
                ap_sig_allocacmp_sum_4_load_1 <= sum_4_mid247_fu_985_p3;
            elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (or_ln87_4_fu_1086_p2 = ap_const_lv1_0))) then 
                ap_sig_allocacmp_sum_4_load_1 <= select_ln79_5_fu_1104_p3;
            elsif ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then 
                ap_sig_allocacmp_sum_4_load_1 <= grp_fu_1179_p3;
            else 
                ap_sig_allocacmp_sum_4_load_1 <= sum_4_fu_106;
            end if;
        else 
            ap_sig_allocacmp_sum_4_load_1 <= sum_4_fu_106;
        end if; 
    end process;

    empty_71_fu_409_p2 <= (exitcond_flatten33_mid299_fu_403_p2 or and_ln77_6_reg_1311);
    empty_72_fu_414_p2 <= (icmp_ln79_reg_1286 or empty_71_fu_409_p2);
    empty_73_fu_431_p2 <= (exitcond_flatten_mid259_fu_425_p2 or exitcond_flatten33_mid299_fu_403_p2);
    empty_74_fu_437_p2 <= (empty_reg_1322 or empty_73_fu_431_p2);
    empty_75_fu_645_p2 <= (exitcond_flatten_mid259_reg_1363 or empty_71_reg_1348);
    empty_76_fu_649_p2 <= (icmp_ln87_mid230_fu_626_p2 or empty_75_fu_645_p2);
    empty_77_fu_655_p2 <= (icmp_ln79_reg_1286_pp0_iter2_reg or empty_76_fu_649_p2);
    empty_78_fu_676_p1 <= select_ln77_2_fu_546_p3(5 - 1 downto 0);
    empty_fu_310_p2 <= (icmp_ln79_fu_286_p2 or and_ln77_6_fu_304_p2);
    exitcond_flatten33_mid299_fu_403_p2 <= (not_exitcond_flatten62_mid21508_fu_387_p2 and and_ln77_5_fu_398_p2);
    exitcond_flatten62_not9_fu_382_p2 <= (icmp_ln81_reg_1306 xor ap_const_lv1_1);
    exitcond_flatten_mid259_fu_425_p2 <= (not_exitcond_flatten33_mid299_fu_419_p2 and exitcond_flatten_mid295_fu_392_p2);
    exitcond_flatten_mid295_fu_392_p2 <= (not_exitcond_flatten62_mid21508_fu_387_p2 and and_ln77_4_fu_371_p2);
    exitcond_flatten_mid295_not_fu_611_p2 <= (exitcond_flatten_mid295_reg_1333 xor ap_const_lv1_1);
    first_iter_158_fu_529_p2 <= "1" when (m_fu_114 = ap_const_lv2_0) else "0";
    first_iter_1_mid1_fu_1031_p2 <= "1" when (add_ln86_reg_1416_pp0_iter6_reg = ap_const_lv2_0) else "0";
    first_iter_1_mid228_fu_1026_p2 <= (first_iter_1_mid253_fu_1009_p2 or exitcond_flatten_mid259_reg_1363_pp0_iter6_reg);
    first_iter_1_mid253_fu_1009_p2 <= (first_iter_1_mid289_fu_980_p2 or exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg);
    first_iter_1_mid289_fu_980_p2 <= (or_ln77_6_fu_947_p2 or and_ln77_6_reg_1311_pp0_iter6_reg);
    first_iter_1_mid2_fu_1036_p3 <= 
        first_iter_1_mid1_fu_1031_p2 when (icmp_ln87_mid230_reg_1411_pp0_iter6_reg(0) = '1') else 
        first_iter_1_mid228_fu_1026_p2;
    first_iter_256_fu_523_p2 <= "1" when (ic_fu_122 = ap_const_lv6_0) else "0";
    first_iter_2_mid1_fu_1014_p2 <= "1" when (add_ln84_reg_1406_pp0_iter6_reg = ap_const_lv6_0) else "0";
    first_iter_2_mid249_fu_1004_p2 <= (first_iter_2_mid285_fu_975_p2 or exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg);
    first_iter_2_mid285_fu_975_p2 <= (or_ln77_5_fu_943_p2 or and_ln77_6_reg_1311_pp0_iter6_reg);
    first_iter_2_mid2_fu_1019_p3 <= 
        first_iter_2_mid1_fu_1014_p2 when (exitcond_flatten_mid259_reg_1363_pp0_iter6_reg(0) = '1') else 
        first_iter_2_mid249_fu_1004_p2;
    first_iter_354_fu_517_p2 <= "1" when (j_fu_130 = ap_const_lv4_0) else "0";
    first_iter_3_mid1_fu_992_p2 <= "1" when (add_ln81_reg_1401_pp0_iter6_reg = ap_const_lv4_0) else "0";
    first_iter_3_mid281_fu_970_p2 <= (or_ln77_4_fu_939_p2 or and_ln77_6_reg_1311_pp0_iter6_reg);
    first_iter_3_mid2_fu_997_p3 <= 
        first_iter_3_mid1_fu_992_p2 when (exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg(0) = '1') else 
        first_iter_3_mid281_fu_970_p2;
    first_iter_451_fu_511_p2 <= "1" when (i_fu_138 = ap_const_lv4_0) else "0";
    first_iter_4_mid1_fu_958_p2 <= "1" when (add_ln79_reg_1396_pp0_iter6_reg = ap_const_lv4_0) else "0";
    first_iter_4_mid2_fu_963_p3 <= 
        first_iter_4_mid1_fu_958_p2 when (and_ln77_6_reg_1311_pp0_iter6_reg(0) = '1') else 
        or_ln77_fu_935_p2;
    ic_mid239_fu_584_p3 <= 
        ap_const_lv6_0 when (empty_72_reg_1353(0) = '1') else 
        ic_fu_122;
    icmp_ln77_fu_274_p2 <= "1" when (indvar_flatten151_fu_150 = ap_const_lv20_90000) else "0";
    icmp_ln79_fu_286_p2 <= "1" when (indvar_flatten100_fu_142 = ap_const_lv16_4800) else "0";
    icmp_ln81_fu_298_p2 <= "1" when (indvar_flatten60_fu_134 = ap_const_lv13_900) else "0";
    icmp_ln84_2_fu_800_p2 <= "1" when (select_ln84_fu_632_p3 = ap_const_lv6_1F) else "0";
    icmp_ln84_fu_376_p2 <= "1" when (indvar_flatten31_fu_126 = ap_const_lv10_120) else "0";
    icmp_ln86_2_fu_794_p2 <= "1" when (select_ln86_fu_668_p3 = ap_const_lv2_2) else "0";
    icmp_ln86_fu_365_p2 <= "1" when (indvar_flatten_fu_118 = ap_const_lv4_9) else "0";
    icmp_ln87_3_fu_1051_p2 <= "0" when (n_mid2_reg_1421_pp0_iter6_reg = ap_const_lv2_0) else "1";
    icmp_ln87_4_fu_788_p2 <= "1" when (add_ln87_fu_782_p2 = ap_const_lv2_3) else "0";
    icmp_ln87_fu_535_p2 <= "1" when (n_fu_110 = ap_const_lv2_3) else "0";
    icmp_ln87_mid230_fu_626_p2 <= (not_exitcond_flatten_mid259_fu_616_p2 and icmp_ln87_mid255_fu_621_p2);
    icmp_ln87_mid255_fu_621_p2 <= (not_exitcond_flatten33_mid299_reg_1358 and icmp_ln87_mid291_fu_566_p2);
    icmp_ln87_mid291_fu_566_p2 <= (not_exitcond_flatten62_mid21508_reg_1328 and and_ln77_fu_541_p2);
    icmp_ln95_fu_1148_p2 <= "1" when (signed(result_fu_1130_p4) > signed(ap_const_lv16_0)) else "0";
    input_buf_address0 <= zext_ln90_31_fu_912_p1(12 - 1 downto 0);
    input_buf_ce0 <= input_buf_ce0_local;

    input_buf_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            input_buf_ce0_local <= ap_const_logic_1;
        else 
            input_buf_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    j_mid268_fu_559_p3 <= 
        ap_const_lv4_0 when (empty_reg_1322_pp0_iter2_reg(0) = '1') else 
        j_fu_130;
    local_bias_address0 <= oc_cast_cast_fu_925_p1(5 - 1 downto 0);
    local_bias_ce0 <= local_bias_ce0_local;

    local_bias_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            local_bias_ce0_local <= ap_const_logic_1;
        else 
            local_bias_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_address0 <= zext_ln90_29_fu_888_p1(14 - 1 downto 0);
    local_weights_ce0 <= local_weights_ce0_local;

    local_weights_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            local_weights_ce0_local <= ap_const_logic_1;
        else 
            local_weights_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    m_mid222_fu_604_p3 <= 
        ap_const_lv2_0 when (empty_74_reg_1371(0) = '1') else 
        m_fu_114;
    n_mid2_fu_660_p3 <= 
        ap_const_lv2_0 when (empty_77_fu_655_p2(0) = '1') else 
        n_fu_110;
    not_exitcond_flatten33_mid299_fu_419_p2 <= (exitcond_flatten33_mid299_fu_403_p2 xor ap_const_lv1_1);
    not_exitcond_flatten62_mid21508_fu_387_p2 <= (icmp_ln79_reg_1286 or exitcond_flatten62_not9_fu_382_p2);
    not_exitcond_flatten_mid259_fu_616_p2 <= (exitcond_flatten_mid295_not_fu_611_p2 or exitcond_flatten33_mid299_reg_1338);
    oc_cast_cast_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_78_reg_1428_pp0_iter5_reg),32));
    or_ln77_4_fu_939_p2 <= (icmp_ln79_reg_1286_pp0_iter6_reg or first_iter_354_reg_1381_pp0_iter6_reg);
    or_ln77_5_fu_943_p2 <= (icmp_ln79_reg_1286_pp0_iter6_reg or first_iter_256_reg_1386_pp0_iter6_reg);
    or_ln77_6_fu_947_p2 <= (icmp_ln79_reg_1286_pp0_iter6_reg or first_iter_158_reg_1391_pp0_iter6_reg);
    or_ln77_fu_935_p2 <= (icmp_ln79_reg_1286_pp0_iter6_reg or first_iter_451_reg_1376_pp0_iter6_reg);
    or_ln87_3_fu_1074_p2 <= (xor_ln87_3_fu_1068_p2 or or_ln87_fu_1062_p2);
    or_ln87_4_fu_1086_p2 <= (xor_ln87_4_fu_1080_p2 or or_ln87_3_fu_1074_p2);
    or_ln87_fu_1062_p2 <= (xor_ln87_fu_1056_p2 or icmp_ln87_3_fu_1051_p2);
    output_buf_address0 <= zext_ln95_fu_1170_p1(11 - 1 downto 0);
    output_buf_ce0 <= output_buf_ce0_local;

    output_buf_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            output_buf_ce0_local <= ap_const_logic_1;
        else 
            output_buf_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    output_buf_d0 <= select_ln95_fu_1154_p3;
    output_buf_we0 <= output_buf_we0_local;

    output_buf_we0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001, icmp_ln87_4_reg_1457_pp0_iter7_reg, icmp_ln86_2_reg_1461_pp0_iter7_reg, icmp_ln84_2_reg_1465_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln84_2_reg_1465_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln86_2_reg_1461_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln87_4_reg_1457_pp0_iter7_reg = ap_const_lv1_1))) then 
            output_buf_we0_local <= ap_const_logic_1;
        else 
            output_buf_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    p_shl4_fu_842_p3 <= (add_ln90_23_reg_1445 & ap_const_lv2_0);
    p_shl_fu_736_p4 <= ((empty_78_fu_676_p1 & trunc_ln90_fu_692_p1) & ap_const_lv2_0);
    result_fu_1130_p1 <= grp_fu_1179_p3;
    result_fu_1130_p4 <= result_fu_1130_p1(27 downto 12);
    select_ln77_2_fu_546_p3 <= 
        add_ln77_fu_498_p2 when (icmp_ln79_reg_1286_pp0_iter2_reg(0) = '1') else 
        oc_fu_146;
    select_ln77_fu_504_p3 <= 
        ap_const_lv4_0 when (icmp_ln79_reg_1286_pp0_iter2_reg(0) = '1') else 
        i_fu_138;
    select_ln79_4_fu_1096_p3 <= 
        sext_ln79_fu_1092_p1 when (first_iter_4_mid2_fu_963_p3(0) = '1') else 
        sext_ln7910_fu_154;
    select_ln79_5_fu_1104_p3 <= 
        sext_ln79_fu_1092_p1 when (first_iter_4_mid2_fu_963_p3(0) = '1') else 
        sum_4_mid247_fu_985_p3;
    select_ln79_6_fu_336_p3 <= 
        ap_const_lv16_1 when (icmp_ln79_fu_286_p2(0) = '1') else 
        add_ln79_2_fu_330_p2;
    select_ln79_fu_571_p3 <= 
        add_ln79_fu_553_p2 when (and_ln77_6_reg_1311_pp0_iter2_reg(0) = '1') else 
        select_ln77_fu_504_p3;
    select_ln81_2_fu_322_p3 <= 
        ap_const_lv13_1 when (empty_fu_310_p2(0) = '1') else 
        add_ln81_2_fu_316_p2;
    select_ln81_fu_591_p3 <= 
        add_ln81_fu_578_p2 when (exitcond_flatten33_mid299_reg_1338(0) = '1') else 
        j_mid268_fu_559_p3;
    select_ln84_2_fu_462_p3 <= 
        ap_const_lv10_1 when (empty_72_fu_414_p2(0) = '1') else 
        add_ln84_2_fu_456_p2;
    select_ln84_fu_632_p3 <= 
        add_ln84_fu_598_p2 when (exitcond_flatten_mid259_reg_1363(0) = '1') else 
        ic_mid239_fu_584_p3;
    select_ln86_2_fu_448_p3 <= 
        ap_const_lv4_1 when (empty_74_fu_437_p2(0) = '1') else 
        add_ln86_2_fu_442_p2;
    select_ln86_fu_668_p3 <= 
        add_ln86_fu_639_p2 when (icmp_ln87_mid230_fu_626_p2(0) = '1') else 
        m_mid222_fu_604_p3;
    select_ln95_fu_1154_p3 <= 
        trunc_ln94_1_fu_1139_p4 when (icmp_ln95_fu_1148_p2(0) = '1') else 
        ap_const_lv15_0;
        sext_ln79_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_fu_1043_p3),32));

    shl_ln90_fu_708_p2 <= std_logic_vector(shift_left(unsigned(select_ln84_fu_632_p3),to_integer(unsigned('0' & ap_const_lv6_1(6-1 downto 0)))));
    sub_ln90_4_fu_849_p2 <= std_logic_vector(unsigned(p_shl4_fu_842_p3) - unsigned(zext_ln90_26_fu_839_p1));
    sub_ln90_fu_746_p2 <= std_logic_vector(unsigned(p_shl_fu_736_p4) - unsigned(zext_ln90_24_fu_732_p1));
    sum_4_mid247_fu_985_p3 <= 
        sext_ln7910_fu_154 when (exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg(0) = '1') else 
        sum_4_mid279_fu_951_p3;
    sum_4_mid279_fu_951_p3 <= 
        sext_ln7910_fu_154 when (and_ln77_6_reg_1311_pp0_iter6_reg(0) = '1') else 
        ap_sig_allocacmp_sum_4_load;
    sum_fu_1043_p3 <= (local_bias_q0 & ap_const_lv12_0);
    tmp_40_fu_1163_p4 <= ((empty_78_reg_1428_pp0_iter7_reg & trunc_ln95_reg_1434_pp0_iter7_reg) & trunc_ln89_reg_1439_pp0_iter7_reg);
    tmp_54_fu_855_p3 <= (add_ln90_24_reg_1451 & ap_const_lv3_0);
    tmp_55_fu_862_p3 <= (add_ln90_24_reg_1451 & ap_const_lv1_0);
    tmp_fu_696_p3 <= (trunc_ln90_fu_692_p1 & ap_const_lv3_0);
    tmp_s_fu_724_p3 <= (empty_78_fu_676_p1 & trunc_ln90_fu_692_p1);
    trunc_ln89_fu_688_p1 <= select_ln81_fu_591_p3(3 - 1 downto 0);
    trunc_ln90_fu_692_p1 <= select_ln84_fu_632_p3(5 - 1 downto 0);
    trunc_ln94_1_fu_1139_p1 <= grp_fu_1179_p3;
    trunc_ln94_1_fu_1139_p4 <= trunc_ln94_1_fu_1139_p1(26 downto 12);
    trunc_ln95_fu_680_p1 <= select_ln79_fu_571_p3(3 - 1 downto 0);
    xor_ln77_fu_292_p2 <= (icmp_ln79_fu_286_p2 xor ap_const_lv1_1);
    xor_ln87_3_fu_1068_p2 <= (first_iter_2_mid2_fu_1019_p3 xor ap_const_lv1_1);
    xor_ln87_4_fu_1080_p2 <= (first_iter_3_mid2_fu_997_p3 xor ap_const_lv1_1);
    xor_ln87_fu_1056_p2 <= (first_iter_1_mid2_fu_1036_p3 xor ap_const_lv1_1);
    zext_ln81_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln95_fu_680_p1),4));
    zext_ln83_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_fu_862_p3),12));
    zext_ln89_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln89_reg_1439),4));
    zext_ln90_1_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_fu_668_p3),4));
    zext_ln90_23_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln90_fu_708_p2),9));
    zext_ln90_24_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_724_p3),12));
    zext_ln90_25_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_fu_668_p3),12));
    zext_ln90_26_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln90_23_reg_1445),14));
    zext_ln90_27_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln90_fu_766_p2),9));
    zext_ln90_28_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_mid2_reg_1421),14));
    zext_ln90_29_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln90_25_fu_882_p2),32));
    zext_ln90_2_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_mid2_reg_1421),4));
    zext_ln90_30_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln90_1_fu_896_p2),12));
    zext_ln90_31_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln90_26_fu_906_p2),32));
    zext_ln90_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_696_p3),9));
    zext_ln95_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_1163_p4),32));
end behav;
