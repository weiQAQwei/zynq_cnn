// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cnn_top_prepare_input_buf_func_2_Pipeline_VITIS_LOOP_51_2_VITIS_LOOP_52_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_buf_2_2_address0,
        input_buf_2_2_ce0,
        input_buf_2_2_we0,
        input_buf_2_2_d0,
        input_buf_2_1_address0,
        input_buf_2_1_ce0,
        input_buf_2_1_we0,
        input_buf_2_1_d0,
        input_buf_2_0_address0,
        input_buf_2_0_ce0,
        input_buf_2_0_we0,
        input_buf_2_0_d0,
        input_buf_1_2_address0,
        input_buf_1_2_ce0,
        input_buf_1_2_we0,
        input_buf_1_2_d0,
        input_buf_1_1_address0,
        input_buf_1_1_ce0,
        input_buf_1_1_we0,
        input_buf_1_1_d0,
        input_buf_1_0_address0,
        input_buf_1_0_ce0,
        input_buf_1_0_we0,
        input_buf_1_0_d0,
        input_buf_0_2_address0,
        input_buf_0_2_ce0,
        input_buf_0_2_we0,
        input_buf_0_2_d0,
        input_buf_0_1_address0,
        input_buf_0_1_ce0,
        input_buf_0_1_we0,
        input_buf_0_1_d0,
        input_buf_0_0_address0,
        input_buf_0_0_ce0,
        input_buf_0_0_we0,
        input_buf_0_0_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] input_buf_2_2_address0;
output   input_buf_2_2_ce0;
output   input_buf_2_2_we0;
output  [15:0] input_buf_2_2_d0;
output  [5:0] input_buf_2_1_address0;
output   input_buf_2_1_ce0;
output   input_buf_2_1_we0;
output  [15:0] input_buf_2_1_d0;
output  [5:0] input_buf_2_0_address0;
output   input_buf_2_0_ce0;
output   input_buf_2_0_we0;
output  [15:0] input_buf_2_0_d0;
output  [5:0] input_buf_1_2_address0;
output   input_buf_1_2_ce0;
output   input_buf_1_2_we0;
output  [15:0] input_buf_1_2_d0;
output  [5:0] input_buf_1_1_address0;
output   input_buf_1_1_ce0;
output   input_buf_1_1_we0;
output  [15:0] input_buf_1_1_d0;
output  [5:0] input_buf_1_0_address0;
output   input_buf_1_0_ce0;
output   input_buf_1_0_we0;
output  [15:0] input_buf_1_0_d0;
output  [5:0] input_buf_0_2_address0;
output   input_buf_0_2_ce0;
output   input_buf_0_2_we0;
output  [15:0] input_buf_0_2_d0;
output  [5:0] input_buf_0_1_address0;
output   input_buf_0_1_ce0;
output   input_buf_0_1_we0;
output  [15:0] input_buf_0_1_d0;
output  [5:0] input_buf_0_0_address0;
output   input_buf_0_0_ce0;
output   input_buf_0_0_we0;
output  [15:0] input_buf_0_0_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [0:0] icmp_ln51_reg_450;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] icmp_ln51_fu_239_p2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln51_reg_450_pp0_iter1_reg;
wire   [4:0] select_ln51_fu_269_p3;
reg   [4:0] select_ln51_reg_454;
reg   [4:0] select_ln51_reg_454_pp0_iter1_reg;
wire   [4:0] select_ln51_1_fu_277_p3;
reg   [4:0] select_ln51_1_reg_460;
reg   [4:0] select_ln51_1_reg_460_pp0_iter1_reg;
reg   [3:0] tmp_12_reg_466;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [1:0] trunc_ln51_fu_355_p1;
reg   [1:0] trunc_ln51_reg_471;
wire   [5:0] add_ln54_fu_398_p2;
reg   [5:0] add_ln54_reg_475;
wire    ap_block_pp0_stage1_subdone;
wire   [31:0] zext_ln54_6_fu_417_p1;
wire    ap_block_pp0_stage1;
reg   [4:0] j_fu_76;
wire   [4:0] add_ln52_fu_291_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_load;
wire    ap_block_pp0_stage0;
reg   [4:0] i_fu_80;
reg   [4:0] ap_sig_allocacmp_i_load;
reg   [8:0] indvar_flatten_fu_84;
wire   [8:0] add_ln51_1_fu_245_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
reg    input_buf_1_1_we0_local;
wire   [1:0] trunc_ln52_fu_412_p1;
reg    input_buf_1_1_ce0_local;
reg    input_buf_1_0_we0_local;
reg    input_buf_1_0_ce0_local;
reg    input_buf_1_2_we0_local;
reg    input_buf_1_2_ce0_local;
reg    input_buf_0_1_we0_local;
reg    input_buf_0_1_ce0_local;
reg    input_buf_0_0_we0_local;
reg    input_buf_0_0_ce0_local;
reg    input_buf_0_2_we0_local;
reg    input_buf_0_2_ce0_local;
reg    input_buf_2_1_we0_local;
reg    input_buf_2_1_ce0_local;
reg    input_buf_2_0_we0_local;
reg    input_buf_2_0_ce0_local;
reg    input_buf_2_2_we0_local;
reg    input_buf_2_2_ce0_local;
wire   [0:0] icmp_ln52_fu_263_p2;
wire   [4:0] add_ln51_fu_257_p2;
wire   [4:0] grp_fu_285_p0;
wire   [2:0] grp_fu_285_p1;
wire   [2:0] grp_fu_312_p1;
wire   [4:0] mul_ln52_fu_320_p0;
wire   [6:0] mul_ln52_fu_320_p1;
wire   [10:0] mul_ln52_fu_320_p2;
wire   [4:0] mul_ln51_fu_339_p0;
wire   [6:0] mul_ln51_fu_339_p1;
wire   [10:0] mul_ln51_fu_339_p2;
wire   [1:0] grp_fu_285_p2;
wire   [3:0] tmp_fu_345_p4;
wire   [2:0] tmp_9_fu_359_p4;
wire   [4:0] tmp_10_fu_369_p3;
wire   [5:0] tmp_11_fu_377_p3;
wire   [5:0] zext_ln54_fu_385_p1;
wire   [5:0] sub_ln53_fu_389_p2;
wire   [5:0] zext_ln54_5_fu_395_p1;
wire   [1:0] grp_fu_312_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
wire    ap_block_pp0_stage3_11001;
reg    ap_condition_exit_pp0_iter1_stage1;
reg    ap_idle_pp0_0to0;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [10:0] mul_ln51_fu_339_p00;
wire   [10:0] mul_ln52_fu_320_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 j_fu_76 = 5'd0;
#0 i_fu_80 = 5'd0;
#0 indvar_flatten_fu_84 = 9'd0;
#0 ap_done_reg = 1'b0;
end

cnn_top_urem_5ns_3ns_2_9_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_5ns_3ns_2_9_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_285_p0),
    .din1(grp_fu_285_p1),
    .ce(1'b1),
    .dout(grp_fu_285_p2)
);

cnn_top_urem_5ns_3ns_2_9_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_5ns_3ns_2_9_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln51_reg_454),
    .din1(grp_fu_312_p1),
    .ce(1'b1),
    .dout(grp_fu_312_p2)
);

cnn_top_mul_5ns_7ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
mul_5ns_7ns_11_1_1_U36(
    .din0(mul_ln52_fu_320_p0),
    .din1(mul_ln52_fu_320_p1),
    .dout(mul_ln52_fu_320_p2)
);

cnn_top_mul_5ns_7ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
mul_5ns_7ns_11_1_1_U37(
    .din0(mul_ln51_fu_339_p0),
    .din1(mul_ln51_fu_339_p1),
    .dout(mul_ln51_fu_339_p2)
);

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln51_fu_239_p2 == 1'd0))) begin
            i_fu_80 <= select_ln51_1_fu_277_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_80 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln51_fu_239_p2 == 1'd0))) begin
            indvar_flatten_fu_84 <= add_ln51_1_fu_245_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_84 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln51_fu_239_p2 == 1'd0))) begin
            j_fu_76 <= add_ln52_fu_291_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_76 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln54_reg_475 <= add_ln54_fu_398_p2;
        icmp_ln51_reg_450 <= icmp_ln51_fu_239_p2;
        icmp_ln51_reg_450_pp0_iter1_reg <= icmp_ln51_reg_450;
        select_ln51_1_reg_460 <= select_ln51_1_fu_277_p3;
        select_ln51_1_reg_460_pp0_iter1_reg <= select_ln51_1_reg_460;
        select_ln51_reg_454 <= select_ln51_fu_269_p3;
        select_ln51_reg_454_pp0_iter1_reg <= select_ln51_reg_454;
        trunc_ln51_reg_471 <= trunc_ln51_fu_355_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_12_reg_466 <= {{mul_ln52_fu_320_p2[10:7]}};
    end
end

always @ (*) begin
    if (((icmp_ln51_reg_450 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln51_reg_450_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_load = 5'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_0_0_ce0_local = 1'b1;
    end else begin
        input_buf_0_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln52_fu_412_p1 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln51_reg_471 == 2'd0))) begin
        input_buf_0_0_we0_local = 1'b1;
    end else begin
        input_buf_0_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_0_1_ce0_local = 1'b1;
    end else begin
        input_buf_0_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln52_fu_412_p1 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln51_reg_471 == 2'd0))) begin
        input_buf_0_1_we0_local = 1'b1;
    end else begin
        input_buf_0_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_0_2_ce0_local = 1'b1;
    end else begin
        input_buf_0_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln52_fu_412_p1 == 2'd0) & ~(trunc_ln52_fu_412_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln51_reg_471 == 2'd0))) begin
        input_buf_0_2_we0_local = 1'b1;
    end else begin
        input_buf_0_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_1_0_ce0_local = 1'b1;
    end else begin
        input_buf_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln52_fu_412_p1 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln51_reg_471 == 2'd1))) begin
        input_buf_1_0_we0_local = 1'b1;
    end else begin
        input_buf_1_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_1_1_ce0_local = 1'b1;
    end else begin
        input_buf_1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln52_fu_412_p1 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln51_reg_471 == 2'd1))) begin
        input_buf_1_1_we0_local = 1'b1;
    end else begin
        input_buf_1_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_1_2_ce0_local = 1'b1;
    end else begin
        input_buf_1_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln52_fu_412_p1 == 2'd0) & ~(trunc_ln52_fu_412_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln51_reg_471 == 2'd1))) begin
        input_buf_1_2_we0_local = 1'b1;
    end else begin
        input_buf_1_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_2_0_ce0_local = 1'b1;
    end else begin
        input_buf_2_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln51_reg_471 == 2'd0) & ~(trunc_ln51_reg_471 == 2'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln52_fu_412_p1 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_2_0_we0_local = 1'b1;
    end else begin
        input_buf_2_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_2_1_ce0_local = 1'b1;
    end else begin
        input_buf_2_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln51_reg_471 == 2'd0) & ~(trunc_ln51_reg_471 == 2'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln52_fu_412_p1 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_2_1_we0_local = 1'b1;
    end else begin
        input_buf_2_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_2_2_ce0_local = 1'b1;
    end else begin
        input_buf_2_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln51_reg_471 == 2'd0) & ~(trunc_ln52_fu_412_p1 == 2'd0) & ~(trunc_ln52_fu_412_p1 == 2'd1) & ~(trunc_ln51_reg_471 == 2'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_buf_2_2_we0_local = 1'b1;
    end else begin
        input_buf_2_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln51_1_fu_245_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign add_ln51_fu_257_p2 = (ap_sig_allocacmp_i_load + 5'd1);

assign add_ln52_fu_291_p2 = (select_ln51_fu_269_p3 + 5'd1);

assign add_ln54_fu_398_p2 = (sub_ln53_fu_389_p2 + zext_ln54_5_fu_395_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign ap_ready = ap_ready_sig;

assign grp_fu_285_p0 = ((icmp_ln52_fu_263_p2[0:0] == 1'b1) ? add_ln51_fu_257_p2 : ap_sig_allocacmp_i_load);

assign grp_fu_285_p1 = 5'd3;

assign grp_fu_312_p1 = 5'd3;

assign icmp_ln51_fu_239_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd324) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_263_p2 = ((ap_sig_allocacmp_j_load == 5'd18) ? 1'b1 : 1'b0);

assign input_buf_0_0_address0 = zext_ln54_6_fu_417_p1;

assign input_buf_0_0_ce0 = input_buf_0_0_ce0_local;

assign input_buf_0_0_d0 = 16'd0;

assign input_buf_0_0_we0 = input_buf_0_0_we0_local;

assign input_buf_0_1_address0 = zext_ln54_6_fu_417_p1;

assign input_buf_0_1_ce0 = input_buf_0_1_ce0_local;

assign input_buf_0_1_d0 = 16'd0;

assign input_buf_0_1_we0 = input_buf_0_1_we0_local;

assign input_buf_0_2_address0 = zext_ln54_6_fu_417_p1;

assign input_buf_0_2_ce0 = input_buf_0_2_ce0_local;

assign input_buf_0_2_d0 = 16'd0;

assign input_buf_0_2_we0 = input_buf_0_2_we0_local;

assign input_buf_1_0_address0 = zext_ln54_6_fu_417_p1;

assign input_buf_1_0_ce0 = input_buf_1_0_ce0_local;

assign input_buf_1_0_d0 = 16'd0;

assign input_buf_1_0_we0 = input_buf_1_0_we0_local;

assign input_buf_1_1_address0 = zext_ln54_6_fu_417_p1;

assign input_buf_1_1_ce0 = input_buf_1_1_ce0_local;

assign input_buf_1_1_d0 = 16'd0;

assign input_buf_1_1_we0 = input_buf_1_1_we0_local;

assign input_buf_1_2_address0 = zext_ln54_6_fu_417_p1;

assign input_buf_1_2_ce0 = input_buf_1_2_ce0_local;

assign input_buf_1_2_d0 = 16'd0;

assign input_buf_1_2_we0 = input_buf_1_2_we0_local;

assign input_buf_2_0_address0 = zext_ln54_6_fu_417_p1;

assign input_buf_2_0_ce0 = input_buf_2_0_ce0_local;

assign input_buf_2_0_d0 = 16'd0;

assign input_buf_2_0_we0 = input_buf_2_0_we0_local;

assign input_buf_2_1_address0 = zext_ln54_6_fu_417_p1;

assign input_buf_2_1_ce0 = input_buf_2_1_ce0_local;

assign input_buf_2_1_d0 = 16'd0;

assign input_buf_2_1_we0 = input_buf_2_1_we0_local;

assign input_buf_2_2_address0 = zext_ln54_6_fu_417_p1;

assign input_buf_2_2_ce0 = input_buf_2_2_ce0_local;

assign input_buf_2_2_d0 = 16'd0;

assign input_buf_2_2_we0 = input_buf_2_2_we0_local;

assign mul_ln51_fu_339_p0 = mul_ln51_fu_339_p00;

assign mul_ln51_fu_339_p00 = select_ln51_1_reg_460_pp0_iter1_reg;

assign mul_ln51_fu_339_p1 = 11'd43;

assign mul_ln52_fu_320_p0 = mul_ln52_fu_320_p00;

assign mul_ln52_fu_320_p00 = select_ln51_reg_454_pp0_iter1_reg;

assign mul_ln52_fu_320_p1 = 11'd43;

assign select_ln51_1_fu_277_p3 = ((icmp_ln52_fu_263_p2[0:0] == 1'b1) ? add_ln51_fu_257_p2 : ap_sig_allocacmp_i_load);

assign select_ln51_fu_269_p3 = ((icmp_ln52_fu_263_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_j_load);

assign sub_ln53_fu_389_p2 = (tmp_11_fu_377_p3 - zext_ln54_fu_385_p1);

assign tmp_10_fu_369_p3 = {{tmp_fu_345_p4}, {1'd0}};

assign tmp_11_fu_377_p3 = {{tmp_9_fu_359_p4}, {3'd0}};

assign tmp_9_fu_359_p4 = {{mul_ln51_fu_339_p2[9:7]}};

assign tmp_fu_345_p4 = {{mul_ln51_fu_339_p2[10:7]}};

assign trunc_ln51_fu_355_p1 = grp_fu_285_p2[1:0];

assign trunc_ln52_fu_412_p1 = grp_fu_312_p2[1:0];

assign zext_ln54_5_fu_395_p1 = tmp_12_reg_466;

assign zext_ln54_6_fu_417_p1 = add_ln54_reg_475;

assign zext_ln54_fu_385_p1 = tmp_10_fu_369_p3;

endmodule //cnn_top_prepare_input_buf_func_2_Pipeline_VITIS_LOOP_51_2_VITIS_LOOP_52_3
