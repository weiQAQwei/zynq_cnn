-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_top_convolution_func_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_buf_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buf_0_0_ce0 : OUT STD_LOGIC;
    input_buf_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buf_0_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buf_0_1_ce0 : OUT STD_LOGIC;
    input_buf_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buf_0_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buf_0_2_ce0 : OUT STD_LOGIC;
    input_buf_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buf_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buf_1_0_ce0 : OUT STD_LOGIC;
    input_buf_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buf_1_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buf_1_1_ce0 : OUT STD_LOGIC;
    input_buf_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buf_1_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buf_1_2_ce0 : OUT STD_LOGIC;
    input_buf_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buf_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buf_2_0_ce0 : OUT STD_LOGIC;
    input_buf_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buf_2_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buf_2_1_ce0 : OUT STD_LOGIC;
    input_buf_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buf_2_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_buf_2_2_ce0 : OUT STD_LOGIC;
    input_buf_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_weights_0_0_ce0 : OUT STD_LOGIC;
    local_weights_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_0_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_weights_0_1_ce0 : OUT STD_LOGIC;
    local_weights_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_0_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_weights_0_2_ce0 : OUT STD_LOGIC;
    local_weights_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_weights_1_0_ce0 : OUT STD_LOGIC;
    local_weights_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_1_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_weights_1_1_ce0 : OUT STD_LOGIC;
    local_weights_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_1_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_weights_1_2_ce0 : OUT STD_LOGIC;
    local_weights_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_weights_2_0_ce0 : OUT STD_LOGIC;
    local_weights_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_2_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_weights_2_1_ce0 : OUT STD_LOGIC;
    local_weights_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_2_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_weights_2_2_ce0 : OUT STD_LOGIC;
    local_weights_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_bias_ce0 : OUT STD_LOGIC;
    local_bias_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_buf_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    output_buf_ce0 : OUT STD_LOGIC;
    output_buf_we0 : OUT STD_LOGIC;
    output_buf_d0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
end;


architecture behav of cnn_top_convolution_func_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv9_16 : STD_LOGIC_VECTOR (8 downto 0) := "000010110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv11_2B : STD_LOGIC_VECTOR (10 downto 0) := "00000101011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln77_fu_309_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln77_reg_546 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_fu_315_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_reg_551 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_fu_333_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sum_reg_606 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal local_weights_0_0_load_reg_611 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_0_1_load_reg_616 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_0_2_load_reg_621 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_1_0_load_reg_626 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_1_1_load_reg_631 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_1_2_load_reg_636 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_2_0_load_reg_641 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_2_1_load_reg_646 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_2_2_load_reg_651 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln79_fu_347_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln79_reg_656 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal trunc_ln79_fu_371_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln79_reg_661 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal empty_62_fu_390_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_62_reg_666 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln90_fu_444_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln90_reg_671 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln90_1_fu_477_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln90_1_reg_676 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln90_2_fu_509_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln90_2_reg_681 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln79_fu_516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_686 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_start : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_done : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_idle : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_ready : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_0_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_1_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_2_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_0_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_1_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_2_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_0_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_1_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_2_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_we0 : STD_LOGIC;
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_reg_242 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_start_reg : STD_LOGIC := '0';
    signal oc_cast_cast_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln77_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal oc_fu_108 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal local_bias_ce0_local : STD_LOGIC;
    signal local_weights_0_0_ce0_local : STD_LOGIC;
    signal local_weights_0_1_ce0_local : STD_LOGIC;
    signal local_weights_0_2_ce0_local : STD_LOGIC;
    signal local_weights_1_0_ce0_local : STD_LOGIC;
    signal local_weights_1_1_ce0_local : STD_LOGIC;
    signal local_weights_1_2_ce0_local : STD_LOGIC;
    signal local_weights_2_0_ce0_local : STD_LOGIC;
    signal local_weights_2_1_ce0_local : STD_LOGIC;
    signal local_weights_2_2_ce0_local : STD_LOGIC;
    signal grp_fu_341_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal mul_ln79_fu_355_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln79_fu_355_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln79_fu_355_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_341_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_41_fu_376_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_526_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_61_fu_385_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_fu_398_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_fu_398_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_fu_398_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_361_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_43_fu_414_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_fu_424_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_45_fu_432_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln90_fu_440_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_fu_404_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_46_fu_451_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_48_fu_469_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_47_fu_461_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_49_fu_484_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_fu_376_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_49_fu_484_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_51_fu_501_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_50_fu_493_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_526_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_526_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_526_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_341_ap_start : STD_LOGIC;
    signal grp_fu_341_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal grp_fu_526_p00 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_fu_398_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln79_fu_355_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component cnn_top_convolution_func_2_Pipeline_VITIS_LOOP_81_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mul_ln90_9 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_buf_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_0_0_ce0 : OUT STD_LOGIC;
        input_buf_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        mul_ln90_10 : IN STD_LOGIC_VECTOR (4 downto 0);
        mul_ln90_11 : IN STD_LOGIC_VECTOR (4 downto 0);
        input_buf_0_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_0_1_ce0 : OUT STD_LOGIC;
        input_buf_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_0_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_0_2_ce0 : OUT STD_LOGIC;
        input_buf_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_1_0_ce0 : OUT STD_LOGIC;
        input_buf_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_1_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_1_1_ce0 : OUT STD_LOGIC;
        input_buf_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_1_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_1_2_ce0 : OUT STD_LOGIC;
        input_buf_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_2_0_ce0 : OUT STD_LOGIC;
        input_buf_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_2_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_2_1_ce0 : OUT STD_LOGIC;
        input_buf_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_2_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_2_2_ce0 : OUT STD_LOGIC;
        input_buf_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        empty_41 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln90_15 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln90_16 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln90_17 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln90_1 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln90_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln90_11 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln90_12 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln90_13 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln90_14 : IN STD_LOGIC_VECTOR (15 downto 0);
        sum : IN STD_LOGIC_VECTOR (27 downto 0);
        empty : IN STD_LOGIC_VECTOR (4 downto 0);
        i : IN STD_LOGIC_VECTOR (3 downto 0);
        output_buf_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        output_buf_ce0 : OUT STD_LOGIC;
        output_buf_we0 : OUT STD_LOGIC;
        output_buf_d0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component cnn_top_urem_4ns_3ns_2_8_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component cnn_top_mul_4ns_6ns_9_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component cnn_top_mul_5ns_7ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component cnn_top_am_addmul_4ns_2ns_6ns_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254 : component cnn_top_convolution_func_2_Pipeline_VITIS_LOOP_81_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_start,
        ap_done => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_done,
        ap_idle => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_idle,
        ap_ready => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_ready,
        mul_ln90_9 => sub_ln90_reg_671,
        input_buf_0_0_address0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_0_address0,
        input_buf_0_0_ce0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_0_ce0,
        input_buf_0_0_q0 => input_buf_0_0_q0,
        mul_ln90_10 => sub_ln90_1_reg_676,
        mul_ln90_11 => sub_ln90_2_reg_681,
        input_buf_0_1_address0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_1_address0,
        input_buf_0_1_ce0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_1_ce0,
        input_buf_0_1_q0 => input_buf_0_1_q0,
        input_buf_0_2_address0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_2_address0,
        input_buf_0_2_ce0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_2_ce0,
        input_buf_0_2_q0 => input_buf_0_2_q0,
        input_buf_1_0_address0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_0_address0,
        input_buf_1_0_ce0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_0_ce0,
        input_buf_1_0_q0 => input_buf_1_0_q0,
        input_buf_1_1_address0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_1_address0,
        input_buf_1_1_ce0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_1_ce0,
        input_buf_1_1_q0 => input_buf_1_1_q0,
        input_buf_1_2_address0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_2_address0,
        input_buf_1_2_ce0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_2_ce0,
        input_buf_1_2_q0 => input_buf_1_2_q0,
        input_buf_2_0_address0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_0_address0,
        input_buf_2_0_ce0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_0_ce0,
        input_buf_2_0_q0 => input_buf_2_0_q0,
        input_buf_2_1_address0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_1_address0,
        input_buf_2_1_ce0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_1_ce0,
        input_buf_2_1_q0 => input_buf_2_1_q0,
        input_buf_2_2_address0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_2_address0,
        input_buf_2_2_ce0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_2_ce0,
        input_buf_2_2_q0 => input_buf_2_2_q0,
        empty_41 => trunc_ln79_reg_661,
        sext_ln90_15 => local_weights_2_0_load_reg_641,
        sext_ln90_16 => local_weights_2_1_load_reg_646,
        sext_ln90_17 => local_weights_2_2_load_reg_651,
        sext_ln90_1 => local_weights_0_0_load_reg_611,
        sext_ln90_2 => local_weights_0_1_load_reg_616,
        sext_ln90_11 => local_weights_0_2_load_reg_621,
        sext_ln90_12 => local_weights_1_0_load_reg_626,
        sext_ln90_13 => local_weights_1_1_load_reg_631,
        sext_ln90_14 => local_weights_1_2_load_reg_636,
        sum => sum_reg_606,
        empty => empty_reg_551,
        i => i_reg_242,
        output_buf_address0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_address0,
        output_buf_ce0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_ce0,
        output_buf_we0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_we0,
        output_buf_d0 => grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_d0);

    urem_4ns_3ns_2_8_seq_1_U136 : component cnn_top_urem_4ns_3ns_2_8_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 4,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_341_ap_start,
        done => grp_fu_341_ap_done,
        din0 => i_reg_242,
        din1 => grp_fu_341_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_341_p2);

    mul_4ns_6ns_9_1_1_U137 : component cnn_top_mul_4ns_6ns_9_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 6,
        dout_WIDTH => 9)
    port map (
        din0 => mul_ln79_fu_355_p0,
        din1 => mul_ln79_fu_355_p1,
        dout => mul_ln79_fu_355_p2);

    mul_5ns_7ns_11_1_1_U138 : component cnn_top_mul_5ns_7ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => mul_fu_398_p0,
        din1 => mul_fu_398_p1,
        dout => mul_fu_398_p2);

    am_addmul_4ns_2ns_6ns_11_4_1_U139 : component cnn_top_am_addmul_4ns_2ns_6ns_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 4,
        din1_WIDTH => 2,
        din2_WIDTH => 6,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_526_p0,
        din1 => grp_fu_526_p1,
        din2 => grp_fu_526_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_526_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_ready = ap_const_logic_1)) then 
                    grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_done = ap_const_logic_1) and (icmp_ln79_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i_reg_242 <= empty_62_reg_666;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_reg_242 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    oc_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                oc_fu_108 <= ap_const_lv6_0;
            elsif (((grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_done = ap_const_logic_1) and (icmp_ln79_reg_686 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                oc_fu_108 <= add_ln77_reg_546;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln77_reg_546 <= add_ln77_fu_309_p2;
                empty_reg_551 <= empty_fu_315_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                empty_62_reg_666 <= empty_62_fu_390_p1;
                icmp_ln79_reg_686 <= icmp_ln79_fu_516_p2;
                    sub_ln90_1_reg_676(4 downto 1) <= sub_ln90_1_fu_477_p2(4 downto 1);
                    sub_ln90_2_reg_681(4 downto 1) <= sub_ln90_2_fu_509_p2(4 downto 1);
                    sub_ln90_reg_671(4 downto 1) <= sub_ln90_fu_444_p2(4 downto 1);
                trunc_ln79_reg_661 <= trunc_ln79_fu_371_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                local_weights_0_0_load_reg_611 <= local_weights_0_0_q0;
                local_weights_0_1_load_reg_616 <= local_weights_0_1_q0;
                local_weights_0_2_load_reg_621 <= local_weights_0_2_q0;
                local_weights_1_0_load_reg_626 <= local_weights_1_0_q0;
                local_weights_1_1_load_reg_631 <= local_weights_1_1_q0;
                local_weights_1_2_load_reg_636 <= local_weights_1_2_q0;
                local_weights_2_0_load_reg_641 <= local_weights_2_0_q0;
                local_weights_2_1_load_reg_646 <= local_weights_2_1_q0;
                local_weights_2_2_load_reg_651 <= local_weights_2_2_q0;
                    sum_reg_606(27 downto 12) <= sum_fu_333_p3(27 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    zext_ln79_reg_656(3 downto 0) <= zext_ln79_fu_347_p1(3 downto 0);
            end if;
        end if;
    end process;
    sum_reg_606(11 downto 0) <= "000000000000";
    zext_ln79_reg_656(4) <= '0';
    sub_ln90_reg_671(0) <= '0';
    sub_ln90_1_reg_676(0) <= '0';
    sub_ln90_2_reg_681(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln79_reg_686, grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_done, ap_CS_fsm_state12, icmp_ln77_fu_303_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln77_fu_303_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_done = ap_const_logic_1) and (icmp_ln79_reg_686 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_done = ap_const_logic_1) and (icmp_ln79_reg_686 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln77_fu_309_p2 <= std_logic_vector(unsigned(oc_fu_108) + unsigned(ap_const_lv6_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_done)
    begin
        if ((grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln77_fu_303_p2)
    begin
        if ((((icmp_ln77_fu_303_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln77_fu_303_p2)
    begin
        if (((icmp_ln77_fu_303_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_61_fu_385_p2 <= std_logic_vector(unsigned(zext_ln79_reg_656) + unsigned(ap_const_lv5_1));
    empty_62_fu_390_p1 <= empty_61_fu_385_p2(4 - 1 downto 0);
    empty_fu_315_p1 <= oc_fu_108(5 - 1 downto 0);
    grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_start <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_ap_start_reg;

    grp_fu_341_ap_start_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_341_ap_start <= ap_const_logic_1;
        else 
            grp_fu_341_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_341_p1 <= ap_const_lv4_3(3 - 1 downto 0);
    grp_fu_526_p0 <= grp_fu_526_p00(4 - 1 downto 0);
    grp_fu_526_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_242),5));
    grp_fu_526_p1 <= ap_const_lv5_2(2 - 1 downto 0);
    grp_fu_526_p2 <= ap_const_lv11_2B(6 - 1 downto 0);
    icmp_ln77_fu_303_p2 <= "1" when (oc_fu_108 = ap_const_lv6_20) else "0";
    icmp_ln79_fu_516_p2 <= "1" when (empty_61_fu_385_p2 = ap_const_lv5_10) else "0";
    input_buf_0_0_address0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_0_address0;
    input_buf_0_0_ce0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_0_ce0;
    input_buf_0_1_address0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_1_address0;
    input_buf_0_1_ce0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_1_ce0;
    input_buf_0_2_address0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_2_address0;
    input_buf_0_2_ce0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_0_2_ce0;
    input_buf_1_0_address0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_0_address0;
    input_buf_1_0_ce0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_0_ce0;
    input_buf_1_1_address0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_1_address0;
    input_buf_1_1_ce0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_1_ce0;
    input_buf_1_2_address0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_2_address0;
    input_buf_1_2_ce0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_1_2_ce0;
    input_buf_2_0_address0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_0_address0;
    input_buf_2_0_ce0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_0_ce0;
    input_buf_2_1_address0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_1_address0;
    input_buf_2_1_ce0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_1_ce0;
    input_buf_2_2_address0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_2_address0;
    input_buf_2_2_ce0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_input_buf_2_2_ce0;
    local_bias_address0 <= oc_cast_cast_fu_319_p1(5 - 1 downto 0);
    local_bias_ce0 <= local_bias_ce0_local;

    local_bias_ce0_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_bias_ce0_local <= ap_const_logic_1;
        else 
            local_bias_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_0_0_address0 <= oc_cast_cast_fu_319_p1(5 - 1 downto 0);
    local_weights_0_0_ce0 <= local_weights_0_0_ce0_local;

    local_weights_0_0_ce0_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_0_0_ce0_local <= ap_const_logic_1;
        else 
            local_weights_0_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_0_1_address0 <= oc_cast_cast_fu_319_p1(5 - 1 downto 0);
    local_weights_0_1_ce0 <= local_weights_0_1_ce0_local;

    local_weights_0_1_ce0_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_0_1_ce0_local <= ap_const_logic_1;
        else 
            local_weights_0_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_0_2_address0 <= oc_cast_cast_fu_319_p1(5 - 1 downto 0);
    local_weights_0_2_ce0 <= local_weights_0_2_ce0_local;

    local_weights_0_2_ce0_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_0_2_ce0_local <= ap_const_logic_1;
        else 
            local_weights_0_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_1_0_address0 <= oc_cast_cast_fu_319_p1(5 - 1 downto 0);
    local_weights_1_0_ce0 <= local_weights_1_0_ce0_local;

    local_weights_1_0_ce0_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_1_0_ce0_local <= ap_const_logic_1;
        else 
            local_weights_1_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_1_1_address0 <= oc_cast_cast_fu_319_p1(5 - 1 downto 0);
    local_weights_1_1_ce0 <= local_weights_1_1_ce0_local;

    local_weights_1_1_ce0_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_1_1_ce0_local <= ap_const_logic_1;
        else 
            local_weights_1_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_1_2_address0 <= oc_cast_cast_fu_319_p1(5 - 1 downto 0);
    local_weights_1_2_ce0 <= local_weights_1_2_ce0_local;

    local_weights_1_2_ce0_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_1_2_ce0_local <= ap_const_logic_1;
        else 
            local_weights_1_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_2_0_address0 <= oc_cast_cast_fu_319_p1(5 - 1 downto 0);
    local_weights_2_0_ce0 <= local_weights_2_0_ce0_local;

    local_weights_2_0_ce0_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_2_0_ce0_local <= ap_const_logic_1;
        else 
            local_weights_2_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_2_1_address0 <= oc_cast_cast_fu_319_p1(5 - 1 downto 0);
    local_weights_2_1_ce0 <= local_weights_2_1_ce0_local;

    local_weights_2_1_ce0_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_2_1_ce0_local <= ap_const_logic_1;
        else 
            local_weights_2_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_2_2_address0 <= oc_cast_cast_fu_319_p1(5 - 1 downto 0);
    local_weights_2_2_ce0 <= local_weights_2_2_ce0_local;

    local_weights_2_2_ce0_local_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_2_2_ce0_local <= ap_const_logic_1;
        else 
            local_weights_2_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    mul_fu_398_p0 <= mul_fu_398_p00(5 - 1 downto 0);
    mul_fu_398_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_61_fu_385_p2),11));
    mul_fu_398_p1 <= ap_const_lv11_2B(7 - 1 downto 0);
    mul_ln79_fu_355_p0 <= mul_ln79_fu_355_p00(4 - 1 downto 0);
    mul_ln79_fu_355_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_242),9));
    mul_ln79_fu_355_p1 <= ap_const_lv9_16(6 - 1 downto 0);
    oc_cast_cast_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_315_p1),32));
    output_buf_address0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_address0;
    output_buf_ce0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_ce0;
    output_buf_d0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_d0;
    output_buf_we0 <= grp_convolution_func_2_Pipeline_VITIS_LOOP_81_3_fu_254_output_buf_we0;
    sub_ln90_1_fu_477_p2 <= std_logic_vector(unsigned(tmp_48_fu_469_p3) - unsigned(tmp_47_fu_461_p3));
    sub_ln90_2_fu_509_p2 <= std_logic_vector(unsigned(tmp_51_fu_501_p3) - unsigned(tmp_50_fu_493_p3));
    sub_ln90_fu_444_p2 <= std_logic_vector(unsigned(tmp_45_fu_432_p3) - unsigned(zext_ln90_fu_440_p1));
    sum_fu_333_p3 <= (local_bias_q0 & ap_const_lv12_0);
    tmp_41_fu_376_p1 <= grp_fu_526_p3;
    tmp_41_fu_376_p4 <= tmp_41_fu_376_p1(10 downto 7);
    tmp_42_fu_404_p4 <= mul_fu_398_p2(10 downto 7);
    tmp_43_fu_414_p4 <= mul_ln79_fu_355_p2(7 downto 6);
    tmp_44_fu_424_p3 <= (tmp_fu_361_p4 & ap_const_lv1_0);
    tmp_45_fu_432_p3 <= (tmp_43_fu_414_p4 & ap_const_lv3_0);
    tmp_46_fu_451_p4 <= mul_fu_398_p2(8 downto 7);
    tmp_47_fu_461_p3 <= (tmp_42_fu_404_p4 & ap_const_lv1_0);
    tmp_48_fu_469_p3 <= (tmp_46_fu_451_p4 & ap_const_lv3_0);
    tmp_49_fu_484_p1 <= grp_fu_526_p3;
    tmp_49_fu_484_p4 <= tmp_49_fu_484_p1(8 downto 7);
    tmp_50_fu_493_p3 <= (tmp_41_fu_376_p4 & ap_const_lv1_0);
    tmp_51_fu_501_p3 <= (tmp_49_fu_484_p4 & ap_const_lv3_0);
    tmp_fu_361_p4 <= mul_ln79_fu_355_p2(8 downto 6);
    trunc_ln79_fu_371_p1 <= grp_fu_341_p2(2 - 1 downto 0);
    zext_ln79_fu_347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_242),5));
    zext_ln90_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_424_p3),5));
end behav;
