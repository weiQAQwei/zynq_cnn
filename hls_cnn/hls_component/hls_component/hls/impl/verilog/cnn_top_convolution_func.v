// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cnn_top_convolution_func (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_buf_address0,
        input_buf_ce0,
        input_buf_q0,
        local_weights_address0,
        local_weights_ce0,
        local_weights_q0,
        local_bias_address0,
        local_bias_ce0,
        local_bias_q0,
        output_buf_address0,
        output_buf_ce0,
        output_buf_we0,
        output_buf_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_buf_address0;
output   input_buf_ce0;
input  [15:0] input_buf_q0;
output  [13:0] local_weights_address0;
output   local_weights_ce0;
input  [15:0] local_weights_q0;
output  [4:0] local_bias_address0;
output   local_bias_ce0;
input  [15:0] local_bias_q0;
output  [10:0] output_buf_address0;
output   output_buf_ce0;
output   output_buf_we0;
output  [14:0] output_buf_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln77_fu_274_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln77_reg_1282;
wire   [0:0] icmp_ln79_fu_286_p2;
reg   [0:0] icmp_ln79_reg_1286;
reg   [0:0] icmp_ln79_reg_1286_pp0_iter2_reg;
reg   [0:0] icmp_ln79_reg_1286_pp0_iter3_reg;
reg   [0:0] icmp_ln79_reg_1286_pp0_iter4_reg;
reg   [0:0] icmp_ln79_reg_1286_pp0_iter5_reg;
reg   [0:0] icmp_ln79_reg_1286_pp0_iter6_reg;
wire   [0:0] xor_ln77_fu_292_p2;
reg   [0:0] xor_ln77_reg_1299;
reg   [0:0] xor_ln77_reg_1299_pp0_iter2_reg;
wire   [0:0] icmp_ln81_fu_298_p2;
reg   [0:0] icmp_ln81_reg_1306;
wire   [0:0] and_ln77_6_fu_304_p2;
reg   [0:0] and_ln77_6_reg_1311;
reg   [0:0] and_ln77_6_reg_1311_pp0_iter2_reg;
reg   [0:0] and_ln77_6_reg_1311_pp0_iter3_reg;
reg   [0:0] and_ln77_6_reg_1311_pp0_iter4_reg;
reg   [0:0] and_ln77_6_reg_1311_pp0_iter5_reg;
reg   [0:0] and_ln77_6_reg_1311_pp0_iter6_reg;
wire   [0:0] empty_fu_310_p2;
reg   [0:0] empty_reg_1322;
reg   [0:0] empty_reg_1322_pp0_iter2_reg;
wire   [0:0] not_exitcond_flatten62_mid21508_fu_387_p2;
reg   [0:0] not_exitcond_flatten62_mid21508_reg_1328;
wire   [0:0] exitcond_flatten_mid295_fu_392_p2;
reg   [0:0] exitcond_flatten_mid295_reg_1333;
wire   [0:0] exitcond_flatten33_mid299_fu_403_p2;
reg   [0:0] exitcond_flatten33_mid299_reg_1338;
reg   [0:0] exitcond_flatten33_mid299_reg_1338_pp0_iter3_reg;
reg   [0:0] exitcond_flatten33_mid299_reg_1338_pp0_iter4_reg;
reg   [0:0] exitcond_flatten33_mid299_reg_1338_pp0_iter5_reg;
reg   [0:0] exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg;
wire   [0:0] empty_71_fu_409_p2;
reg   [0:0] empty_71_reg_1348;
wire   [0:0] empty_72_fu_414_p2;
reg   [0:0] empty_72_reg_1353;
wire   [0:0] not_exitcond_flatten33_mid299_fu_419_p2;
reg   [0:0] not_exitcond_flatten33_mid299_reg_1358;
wire   [0:0] exitcond_flatten_mid259_fu_425_p2;
reg   [0:0] exitcond_flatten_mid259_reg_1363;
reg   [0:0] exitcond_flatten_mid259_reg_1363_pp0_iter3_reg;
reg   [0:0] exitcond_flatten_mid259_reg_1363_pp0_iter4_reg;
reg   [0:0] exitcond_flatten_mid259_reg_1363_pp0_iter5_reg;
reg   [0:0] exitcond_flatten_mid259_reg_1363_pp0_iter6_reg;
wire   [0:0] empty_74_fu_437_p2;
reg   [0:0] empty_74_reg_1371;
wire   [0:0] first_iter_451_fu_511_p2;
reg   [0:0] first_iter_451_reg_1376;
reg   [0:0] first_iter_451_reg_1376_pp0_iter4_reg;
reg   [0:0] first_iter_451_reg_1376_pp0_iter5_reg;
reg   [0:0] first_iter_451_reg_1376_pp0_iter6_reg;
wire   [0:0] first_iter_354_fu_517_p2;
reg   [0:0] first_iter_354_reg_1381;
reg   [0:0] first_iter_354_reg_1381_pp0_iter4_reg;
reg   [0:0] first_iter_354_reg_1381_pp0_iter5_reg;
reg   [0:0] first_iter_354_reg_1381_pp0_iter6_reg;
wire   [0:0] first_iter_256_fu_523_p2;
reg   [0:0] first_iter_256_reg_1386;
reg   [0:0] first_iter_256_reg_1386_pp0_iter4_reg;
reg   [0:0] first_iter_256_reg_1386_pp0_iter5_reg;
reg   [0:0] first_iter_256_reg_1386_pp0_iter6_reg;
wire   [0:0] first_iter_158_fu_529_p2;
reg   [0:0] first_iter_158_reg_1391;
reg   [0:0] first_iter_158_reg_1391_pp0_iter4_reg;
reg   [0:0] first_iter_158_reg_1391_pp0_iter5_reg;
reg   [0:0] first_iter_158_reg_1391_pp0_iter6_reg;
wire   [3:0] add_ln79_fu_553_p2;
reg   [3:0] add_ln79_reg_1396;
reg   [3:0] add_ln79_reg_1396_pp0_iter4_reg;
reg   [3:0] add_ln79_reg_1396_pp0_iter5_reg;
reg   [3:0] add_ln79_reg_1396_pp0_iter6_reg;
wire   [3:0] add_ln81_fu_578_p2;
reg   [3:0] add_ln81_reg_1401;
reg   [3:0] add_ln81_reg_1401_pp0_iter4_reg;
reg   [3:0] add_ln81_reg_1401_pp0_iter5_reg;
reg   [3:0] add_ln81_reg_1401_pp0_iter6_reg;
wire   [5:0] add_ln84_fu_598_p2;
reg   [5:0] add_ln84_reg_1406;
reg   [5:0] add_ln84_reg_1406_pp0_iter4_reg;
reg   [5:0] add_ln84_reg_1406_pp0_iter5_reg;
reg   [5:0] add_ln84_reg_1406_pp0_iter6_reg;
wire   [0:0] icmp_ln87_mid230_fu_626_p2;
reg   [0:0] icmp_ln87_mid230_reg_1411;
reg   [0:0] icmp_ln87_mid230_reg_1411_pp0_iter4_reg;
reg   [0:0] icmp_ln87_mid230_reg_1411_pp0_iter5_reg;
reg   [0:0] icmp_ln87_mid230_reg_1411_pp0_iter6_reg;
wire   [1:0] add_ln86_fu_639_p2;
reg   [1:0] add_ln86_reg_1416;
reg   [1:0] add_ln86_reg_1416_pp0_iter4_reg;
reg   [1:0] add_ln86_reg_1416_pp0_iter5_reg;
reg   [1:0] add_ln86_reg_1416_pp0_iter6_reg;
wire   [1:0] n_mid2_fu_660_p3;
reg   [1:0] n_mid2_reg_1421;
reg   [1:0] n_mid2_reg_1421_pp0_iter4_reg;
reg   [1:0] n_mid2_reg_1421_pp0_iter5_reg;
reg   [1:0] n_mid2_reg_1421_pp0_iter6_reg;
wire   [4:0] empty_78_fu_676_p1;
reg   [4:0] empty_78_reg_1428;
reg   [4:0] empty_78_reg_1428_pp0_iter4_reg;
reg   [4:0] empty_78_reg_1428_pp0_iter5_reg;
reg   [4:0] empty_78_reg_1428_pp0_iter6_reg;
reg   [4:0] empty_78_reg_1428_pp0_iter7_reg;
wire   [2:0] trunc_ln95_fu_680_p1;
reg   [2:0] trunc_ln95_reg_1434;
reg   [2:0] trunc_ln95_reg_1434_pp0_iter4_reg;
reg   [2:0] trunc_ln95_reg_1434_pp0_iter5_reg;
reg   [2:0] trunc_ln95_reg_1434_pp0_iter6_reg;
reg   [2:0] trunc_ln95_reg_1434_pp0_iter7_reg;
wire   [2:0] trunc_ln89_fu_688_p1;
reg   [2:0] trunc_ln89_reg_1439;
reg   [2:0] trunc_ln89_reg_1439_pp0_iter4_reg;
reg   [2:0] trunc_ln89_reg_1439_pp0_iter5_reg;
reg   [2:0] trunc_ln89_reg_1439_pp0_iter6_reg;
reg   [2:0] trunc_ln89_reg_1439_pp0_iter7_reg;
wire   [11:0] add_ln90_23_fu_756_p2;
reg   [11:0] add_ln90_23_reg_1445;
wire   [8:0] add_ln90_24_fu_776_p2;
reg   [8:0] add_ln90_24_reg_1451;
wire   [0:0] icmp_ln87_4_fu_788_p2;
reg   [0:0] icmp_ln87_4_reg_1457;
reg   [0:0] icmp_ln87_4_reg_1457_pp0_iter4_reg;
reg   [0:0] icmp_ln87_4_reg_1457_pp0_iter5_reg;
reg   [0:0] icmp_ln87_4_reg_1457_pp0_iter6_reg;
reg   [0:0] icmp_ln87_4_reg_1457_pp0_iter7_reg;
wire   [0:0] icmp_ln86_2_fu_794_p2;
reg   [0:0] icmp_ln86_2_reg_1461;
reg   [0:0] icmp_ln86_2_reg_1461_pp0_iter4_reg;
reg   [0:0] icmp_ln86_2_reg_1461_pp0_iter5_reg;
reg   [0:0] icmp_ln86_2_reg_1461_pp0_iter6_reg;
reg   [0:0] icmp_ln86_2_reg_1461_pp0_iter7_reg;
wire   [0:0] icmp_ln84_2_fu_800_p2;
reg   [0:0] icmp_ln84_2_reg_1465;
reg   [0:0] icmp_ln84_2_reg_1465_pp0_iter4_reg;
reg   [0:0] icmp_ln84_2_reg_1465_pp0_iter5_reg;
reg   [0:0] icmp_ln84_2_reg_1465_pp0_iter6_reg;
reg   [0:0] icmp_ln84_2_reg_1465_pp0_iter7_reg;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [31:0] zext_ln90_29_fu_888_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln90_31_fu_912_p1;
wire   [31:0] oc_cast_cast_fu_925_p1;
wire   [31:0] zext_ln95_fu_1170_p1;
reg   [31:0] sum_4_fu_106;
wire   [31:0] grp_fu_1179_p3;
wire   [31:0] select_ln79_5_fu_1104_p3;
wire   [31:0] sum_4_mid247_fu_985_p3;
reg   [31:0] ap_sig_allocacmp_sum_4_load;
reg   [31:0] ap_sig_allocacmp_sum_4_load_1;
wire   [0:0] or_ln87_4_fu_1086_p2;
reg   [1:0] n_fu_110;
wire   [1:0] add_ln87_fu_782_p2;
wire    ap_loop_init;
reg   [1:0] m_fu_114;
wire   [1:0] select_ln86_fu_668_p3;
reg   [3:0] indvar_flatten_fu_118;
wire   [3:0] select_ln86_2_fu_448_p3;
reg   [5:0] ic_fu_122;
wire   [5:0] select_ln84_fu_632_p3;
reg   [9:0] indvar_flatten31_fu_126;
wire   [9:0] select_ln84_2_fu_462_p3;
reg   [3:0] j_fu_130;
wire   [3:0] select_ln81_fu_591_p3;
reg   [12:0] indvar_flatten60_fu_134;
wire   [12:0] select_ln81_2_fu_322_p3;
reg   [3:0] i_fu_138;
wire   [3:0] select_ln79_fu_571_p3;
reg   [15:0] indvar_flatten100_fu_142;
wire   [15:0] select_ln79_6_fu_336_p3;
reg   [5:0] oc_fu_146;
wire   [5:0] select_ln77_2_fu_546_p3;
reg   [19:0] indvar_flatten151_fu_150;
wire   [19:0] add_ln77_2_fu_280_p2;
reg   [31:0] sext_ln7910_fu_154;
wire   [31:0] select_ln79_4_fu_1096_p3;
reg    input_buf_ce0_local;
reg    local_weights_ce0_local;
reg    local_bias_ce0_local;
reg    output_buf_we0_local;
wire   [14:0] select_ln95_fu_1154_p3;
reg    output_buf_ce0_local;
wire   [12:0] add_ln81_2_fu_316_p2;
wire   [15:0] add_ln79_2_fu_330_p2;
wire   [0:0] icmp_ln86_fu_365_p2;
wire   [0:0] exitcond_flatten62_not9_fu_382_p2;
wire   [0:0] and_ln77_4_fu_371_p2;
wire   [0:0] icmp_ln84_fu_376_p2;
wire   [0:0] and_ln77_5_fu_398_p2;
wire   [0:0] empty_73_fu_431_p2;
wire   [3:0] add_ln86_2_fu_442_p2;
wire   [9:0] add_ln84_2_fu_456_p2;
wire   [0:0] icmp_ln87_fu_535_p2;
wire   [5:0] add_ln77_fu_498_p2;
wire   [3:0] select_ln77_fu_504_p3;
wire   [0:0] and_ln77_fu_541_p2;
wire   [3:0] j_mid268_fu_559_p3;
wire   [5:0] ic_mid239_fu_584_p3;
wire   [0:0] exitcond_flatten_mid295_not_fu_611_p2;
wire   [0:0] icmp_ln87_mid291_fu_566_p2;
wire   [0:0] icmp_ln87_mid255_fu_621_p2;
wire   [0:0] not_exitcond_flatten_mid259_fu_616_p2;
wire   [1:0] m_mid222_fu_604_p3;
wire   [0:0] empty_75_fu_645_p2;
wire   [0:0] empty_76_fu_649_p2;
wire   [0:0] empty_77_fu_655_p2;
wire   [4:0] trunc_ln90_fu_692_p1;
wire   [7:0] tmp_fu_696_p3;
wire   [5:0] shl_ln90_fu_708_p2;
wire   [8:0] zext_ln90_fu_704_p1;
wire   [8:0] zext_ln90_23_fu_714_p1;
wire   [9:0] tmp_s_fu_724_p3;
wire   [11:0] p_shl_fu_736_p4;
wire   [11:0] zext_ln90_24_fu_732_p1;
wire   [11:0] sub_ln90_fu_746_p2;
wire   [11:0] zext_ln90_25_fu_752_p1;
wire   [3:0] zext_ln81_fu_684_p1;
wire   [3:0] zext_ln90_1_fu_762_p1;
wire   [3:0] add_ln90_fu_766_p2;
wire   [8:0] add_ln90_27_fu_718_p2;
wire   [8:0] zext_ln90_27_fu_772_p1;
wire   [13:0] p_shl4_fu_842_p3;
wire   [13:0] zext_ln90_26_fu_839_p1;
wire   [9:0] tmp_55_fu_862_p3;
wire   [11:0] tmp_54_fu_855_p3;
wire   [11:0] zext_ln83_fu_869_p1;
wire   [13:0] sub_ln90_4_fu_849_p2;
wire   [13:0] zext_ln90_28_fu_879_p1;
wire   [13:0] add_ln90_25_fu_882_p2;
wire   [3:0] zext_ln89_fu_836_p1;
wire   [3:0] zext_ln90_2_fu_893_p1;
wire   [3:0] add_ln90_1_fu_896_p2;
wire   [11:0] add_ln83_fu_873_p2;
wire   [11:0] zext_ln90_30_fu_902_p1;
wire   [11:0] add_ln90_26_fu_906_p2;
wire   [0:0] first_iter_4_mid1_fu_958_p2;
wire   [0:0] or_ln77_fu_935_p2;
wire   [0:0] or_ln77_4_fu_939_p2;
wire   [0:0] or_ln77_5_fu_943_p2;
wire   [0:0] or_ln77_6_fu_947_p2;
wire   [31:0] sum_4_mid279_fu_951_p3;
wire   [0:0] first_iter_3_mid1_fu_992_p2;
wire   [0:0] first_iter_3_mid281_fu_970_p2;
wire   [0:0] first_iter_2_mid285_fu_975_p2;
wire   [0:0] first_iter_1_mid289_fu_980_p2;
wire   [0:0] first_iter_2_mid1_fu_1014_p2;
wire   [0:0] first_iter_2_mid249_fu_1004_p2;
wire   [0:0] first_iter_1_mid253_fu_1009_p2;
wire   [0:0] first_iter_1_mid1_fu_1031_p2;
wire   [0:0] first_iter_1_mid228_fu_1026_p2;
wire   [0:0] first_iter_1_mid2_fu_1036_p3;
wire   [0:0] icmp_ln87_3_fu_1051_p2;
wire   [0:0] xor_ln87_fu_1056_p2;
wire   [0:0] first_iter_2_mid2_fu_1019_p3;
wire   [0:0] or_ln87_fu_1062_p2;
wire   [0:0] xor_ln87_3_fu_1068_p2;
wire   [0:0] first_iter_3_mid2_fu_997_p3;
wire   [0:0] or_ln87_3_fu_1074_p2;
wire   [0:0] xor_ln87_4_fu_1080_p2;
wire   [27:0] sum_fu_1043_p3;
wire   [0:0] first_iter_4_mid2_fu_963_p3;
wire  signed [31:0] sext_ln79_fu_1092_p1;
wire  signed [31:0] result_fu_1130_p1;
wire  signed [31:0] trunc_ln94_1_fu_1139_p1;
wire   [15:0] result_fu_1130_p4;
wire   [0:0] icmp_ln95_fu_1148_p2;
wire   [14:0] trunc_ln94_1_fu_1139_p4;
wire   [10:0] tmp_40_fu_1163_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 sum_4_fu_106 = 32'd0;
#0 n_fu_110 = 2'd0;
#0 m_fu_114 = 2'd0;
#0 indvar_flatten_fu_118 = 4'd0;
#0 ic_fu_122 = 6'd0;
#0 indvar_flatten31_fu_126 = 10'd0;
#0 j_fu_130 = 4'd0;
#0 indvar_flatten60_fu_134 = 13'd0;
#0 i_fu_138 = 4'd0;
#0 indvar_flatten100_fu_142 = 16'd0;
#0 oc_fu_146 = 6'd0;
#0 indvar_flatten151_fu_150 = 20'd0;
#0 sext_ln7910_fu_154 = 32'd0;
#0 ap_done_reg = 1'b0;
end

cnn_top_mac_muladd_16s_16s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32ns_32_4_1_U232(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(local_weights_q0),
    .din1(input_buf_q0),
    .din2(ap_sig_allocacmp_sum_4_load_1),
    .ce(1'b1),
    .dout(grp_fu_1179_p3)
);

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_fu_138 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            i_fu_138 <= select_ln79_fu_571_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ic_fu_122 <= 6'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            ic_fu_122 <= select_ln84_fu_632_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten100_fu_142 <= 16'd0;
        end else if (((icmp_ln77_fu_274_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten100_fu_142 <= select_ln79_6_fu_336_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten151_fu_150 <= 20'd0;
        end else if (((icmp_ln77_fu_274_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten151_fu_150 <= add_ln77_2_fu_280_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten31_fu_126 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln77_reg_1282 == 1'd0))) begin
            indvar_flatten31_fu_126 <= select_ln84_2_fu_462_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten60_fu_134 <= 13'd0;
        end else if (((icmp_ln77_fu_274_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten60_fu_134 <= select_ln81_2_fu_322_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten_fu_118 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln77_reg_1282 == 1'd0))) begin
            indvar_flatten_fu_118 <= select_ln86_2_fu_448_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            j_fu_130 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            j_fu_130 <= select_ln81_fu_591_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            m_fu_114 <= 2'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            m_fu_114 <= select_ln86_fu_668_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            n_fu_110 <= 2'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            n_fu_110 <= add_ln87_fu_782_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            oc_fu_146 <= 6'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            oc_fu_146 <= select_ln77_2_fu_546_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_enable_reg_pp0_iter7 == 1'b1) & (or_ln87_4_fu_1086_p2 == 1'd1))) begin
            sum_4_fu_106 <= sum_4_mid247_fu_985_p3;
        end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (or_ln87_4_fu_1086_p2 == 1'd0))) begin
            sum_4_fu_106 <= select_ln79_5_fu_1104_p3;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            sum_4_fu_106 <= grp_fu_1179_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln79_reg_1396 <= add_ln79_fu_553_p2;
        add_ln79_reg_1396_pp0_iter4_reg <= add_ln79_reg_1396;
        add_ln79_reg_1396_pp0_iter5_reg <= add_ln79_reg_1396_pp0_iter4_reg;
        add_ln79_reg_1396_pp0_iter6_reg <= add_ln79_reg_1396_pp0_iter5_reg;
        add_ln81_reg_1401 <= add_ln81_fu_578_p2;
        add_ln81_reg_1401_pp0_iter4_reg <= add_ln81_reg_1401;
        add_ln81_reg_1401_pp0_iter5_reg <= add_ln81_reg_1401_pp0_iter4_reg;
        add_ln81_reg_1401_pp0_iter6_reg <= add_ln81_reg_1401_pp0_iter5_reg;
        add_ln84_reg_1406 <= add_ln84_fu_598_p2;
        add_ln84_reg_1406_pp0_iter4_reg <= add_ln84_reg_1406;
        add_ln84_reg_1406_pp0_iter5_reg <= add_ln84_reg_1406_pp0_iter4_reg;
        add_ln84_reg_1406_pp0_iter6_reg <= add_ln84_reg_1406_pp0_iter5_reg;
        add_ln86_reg_1416 <= add_ln86_fu_639_p2;
        add_ln86_reg_1416_pp0_iter4_reg <= add_ln86_reg_1416;
        add_ln86_reg_1416_pp0_iter5_reg <= add_ln86_reg_1416_pp0_iter4_reg;
        add_ln86_reg_1416_pp0_iter6_reg <= add_ln86_reg_1416_pp0_iter5_reg;
        add_ln90_23_reg_1445 <= add_ln90_23_fu_756_p2;
        add_ln90_24_reg_1451 <= add_ln90_24_fu_776_p2;
        and_ln77_6_reg_1311_pp0_iter2_reg <= and_ln77_6_reg_1311;
        and_ln77_6_reg_1311_pp0_iter3_reg <= and_ln77_6_reg_1311_pp0_iter2_reg;
        and_ln77_6_reg_1311_pp0_iter4_reg <= and_ln77_6_reg_1311_pp0_iter3_reg;
        and_ln77_6_reg_1311_pp0_iter5_reg <= and_ln77_6_reg_1311_pp0_iter4_reg;
        and_ln77_6_reg_1311_pp0_iter6_reg <= and_ln77_6_reg_1311_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        empty_71_reg_1348 <= empty_71_fu_409_p2;
        empty_72_reg_1353 <= empty_72_fu_414_p2;
        empty_74_reg_1371 <= empty_74_fu_437_p2;
        empty_78_reg_1428 <= empty_78_fu_676_p1;
        empty_78_reg_1428_pp0_iter4_reg <= empty_78_reg_1428;
        empty_78_reg_1428_pp0_iter5_reg <= empty_78_reg_1428_pp0_iter4_reg;
        empty_78_reg_1428_pp0_iter6_reg <= empty_78_reg_1428_pp0_iter5_reg;
        empty_78_reg_1428_pp0_iter7_reg <= empty_78_reg_1428_pp0_iter6_reg;
        empty_reg_1322_pp0_iter2_reg <= empty_reg_1322;
        exitcond_flatten33_mid299_reg_1338 <= exitcond_flatten33_mid299_fu_403_p2;
        exitcond_flatten33_mid299_reg_1338_pp0_iter3_reg <= exitcond_flatten33_mid299_reg_1338;
        exitcond_flatten33_mid299_reg_1338_pp0_iter4_reg <= exitcond_flatten33_mid299_reg_1338_pp0_iter3_reg;
        exitcond_flatten33_mid299_reg_1338_pp0_iter5_reg <= exitcond_flatten33_mid299_reg_1338_pp0_iter4_reg;
        exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg <= exitcond_flatten33_mid299_reg_1338_pp0_iter5_reg;
        exitcond_flatten_mid259_reg_1363 <= exitcond_flatten_mid259_fu_425_p2;
        exitcond_flatten_mid259_reg_1363_pp0_iter3_reg <= exitcond_flatten_mid259_reg_1363;
        exitcond_flatten_mid259_reg_1363_pp0_iter4_reg <= exitcond_flatten_mid259_reg_1363_pp0_iter3_reg;
        exitcond_flatten_mid259_reg_1363_pp0_iter5_reg <= exitcond_flatten_mid259_reg_1363_pp0_iter4_reg;
        exitcond_flatten_mid259_reg_1363_pp0_iter6_reg <= exitcond_flatten_mid259_reg_1363_pp0_iter5_reg;
        exitcond_flatten_mid295_reg_1333 <= exitcond_flatten_mid295_fu_392_p2;
        first_iter_158_reg_1391 <= first_iter_158_fu_529_p2;
        first_iter_158_reg_1391_pp0_iter4_reg <= first_iter_158_reg_1391;
        first_iter_158_reg_1391_pp0_iter5_reg <= first_iter_158_reg_1391_pp0_iter4_reg;
        first_iter_158_reg_1391_pp0_iter6_reg <= first_iter_158_reg_1391_pp0_iter5_reg;
        first_iter_256_reg_1386 <= first_iter_256_fu_523_p2;
        first_iter_256_reg_1386_pp0_iter4_reg <= first_iter_256_reg_1386;
        first_iter_256_reg_1386_pp0_iter5_reg <= first_iter_256_reg_1386_pp0_iter4_reg;
        first_iter_256_reg_1386_pp0_iter6_reg <= first_iter_256_reg_1386_pp0_iter5_reg;
        first_iter_354_reg_1381 <= first_iter_354_fu_517_p2;
        first_iter_354_reg_1381_pp0_iter4_reg <= first_iter_354_reg_1381;
        first_iter_354_reg_1381_pp0_iter5_reg <= first_iter_354_reg_1381_pp0_iter4_reg;
        first_iter_354_reg_1381_pp0_iter6_reg <= first_iter_354_reg_1381_pp0_iter5_reg;
        first_iter_451_reg_1376 <= first_iter_451_fu_511_p2;
        first_iter_451_reg_1376_pp0_iter4_reg <= first_iter_451_reg_1376;
        first_iter_451_reg_1376_pp0_iter5_reg <= first_iter_451_reg_1376_pp0_iter4_reg;
        first_iter_451_reg_1376_pp0_iter6_reg <= first_iter_451_reg_1376_pp0_iter5_reg;
        icmp_ln79_reg_1286_pp0_iter2_reg <= icmp_ln79_reg_1286;
        icmp_ln79_reg_1286_pp0_iter3_reg <= icmp_ln79_reg_1286_pp0_iter2_reg;
        icmp_ln79_reg_1286_pp0_iter4_reg <= icmp_ln79_reg_1286_pp0_iter3_reg;
        icmp_ln79_reg_1286_pp0_iter5_reg <= icmp_ln79_reg_1286_pp0_iter4_reg;
        icmp_ln79_reg_1286_pp0_iter6_reg <= icmp_ln79_reg_1286_pp0_iter5_reg;
        icmp_ln84_2_reg_1465 <= icmp_ln84_2_fu_800_p2;
        icmp_ln84_2_reg_1465_pp0_iter4_reg <= icmp_ln84_2_reg_1465;
        icmp_ln84_2_reg_1465_pp0_iter5_reg <= icmp_ln84_2_reg_1465_pp0_iter4_reg;
        icmp_ln84_2_reg_1465_pp0_iter6_reg <= icmp_ln84_2_reg_1465_pp0_iter5_reg;
        icmp_ln84_2_reg_1465_pp0_iter7_reg <= icmp_ln84_2_reg_1465_pp0_iter6_reg;
        icmp_ln86_2_reg_1461 <= icmp_ln86_2_fu_794_p2;
        icmp_ln86_2_reg_1461_pp0_iter4_reg <= icmp_ln86_2_reg_1461;
        icmp_ln86_2_reg_1461_pp0_iter5_reg <= icmp_ln86_2_reg_1461_pp0_iter4_reg;
        icmp_ln86_2_reg_1461_pp0_iter6_reg <= icmp_ln86_2_reg_1461_pp0_iter5_reg;
        icmp_ln86_2_reg_1461_pp0_iter7_reg <= icmp_ln86_2_reg_1461_pp0_iter6_reg;
        icmp_ln87_4_reg_1457 <= icmp_ln87_4_fu_788_p2;
        icmp_ln87_4_reg_1457_pp0_iter4_reg <= icmp_ln87_4_reg_1457;
        icmp_ln87_4_reg_1457_pp0_iter5_reg <= icmp_ln87_4_reg_1457_pp0_iter4_reg;
        icmp_ln87_4_reg_1457_pp0_iter6_reg <= icmp_ln87_4_reg_1457_pp0_iter5_reg;
        icmp_ln87_4_reg_1457_pp0_iter7_reg <= icmp_ln87_4_reg_1457_pp0_iter6_reg;
        icmp_ln87_mid230_reg_1411 <= icmp_ln87_mid230_fu_626_p2;
        icmp_ln87_mid230_reg_1411_pp0_iter4_reg <= icmp_ln87_mid230_reg_1411;
        icmp_ln87_mid230_reg_1411_pp0_iter5_reg <= icmp_ln87_mid230_reg_1411_pp0_iter4_reg;
        icmp_ln87_mid230_reg_1411_pp0_iter6_reg <= icmp_ln87_mid230_reg_1411_pp0_iter5_reg;
        n_mid2_reg_1421 <= n_mid2_fu_660_p3;
        n_mid2_reg_1421_pp0_iter4_reg <= n_mid2_reg_1421;
        n_mid2_reg_1421_pp0_iter5_reg <= n_mid2_reg_1421_pp0_iter4_reg;
        n_mid2_reg_1421_pp0_iter6_reg <= n_mid2_reg_1421_pp0_iter5_reg;
        not_exitcond_flatten33_mid299_reg_1358 <= not_exitcond_flatten33_mid299_fu_419_p2;
        not_exitcond_flatten62_mid21508_reg_1328 <= not_exitcond_flatten62_mid21508_fu_387_p2;
        trunc_ln89_reg_1439 <= trunc_ln89_fu_688_p1;
        trunc_ln89_reg_1439_pp0_iter4_reg <= trunc_ln89_reg_1439;
        trunc_ln89_reg_1439_pp0_iter5_reg <= trunc_ln89_reg_1439_pp0_iter4_reg;
        trunc_ln89_reg_1439_pp0_iter6_reg <= trunc_ln89_reg_1439_pp0_iter5_reg;
        trunc_ln89_reg_1439_pp0_iter7_reg <= trunc_ln89_reg_1439_pp0_iter6_reg;
        trunc_ln95_reg_1434 <= trunc_ln95_fu_680_p1;
        trunc_ln95_reg_1434_pp0_iter4_reg <= trunc_ln95_reg_1434;
        trunc_ln95_reg_1434_pp0_iter5_reg <= trunc_ln95_reg_1434_pp0_iter4_reg;
        trunc_ln95_reg_1434_pp0_iter6_reg <= trunc_ln95_reg_1434_pp0_iter5_reg;
        trunc_ln95_reg_1434_pp0_iter7_reg <= trunc_ln95_reg_1434_pp0_iter6_reg;
        xor_ln77_reg_1299_pp0_iter2_reg <= xor_ln77_reg_1299;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln77_6_reg_1311 <= and_ln77_6_fu_304_p2;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        empty_reg_1322 <= empty_fu_310_p2;
        icmp_ln77_reg_1282 <= icmp_ln77_fu_274_p2;
        icmp_ln79_reg_1286 <= icmp_ln79_fu_286_p2;
        icmp_ln81_reg_1306 <= icmp_ln81_fu_298_p2;
        xor_ln77_reg_1299 <= xor_ln77_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (or_ln87_4_fu_1086_p2 == 1'd0))) begin
        sext_ln7910_fu_154 <= select_ln79_4_fu_1096_p3;
    end
end

always @ (*) begin
    if (((icmp_ln77_fu_274_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln77_reg_1282 == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_sig_allocacmp_sum_4_load = grp_fu_1179_p3;
    end else begin
        ap_sig_allocacmp_sum_4_load = sum_4_fu_106;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_enable_reg_pp0_iter7 == 1'b1) & (or_ln87_4_fu_1086_p2 == 1'd1))) begin
            ap_sig_allocacmp_sum_4_load_1 = sum_4_mid247_fu_985_p3;
        end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (or_ln87_4_fu_1086_p2 == 1'd0))) begin
            ap_sig_allocacmp_sum_4_load_1 = select_ln79_5_fu_1104_p3;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            ap_sig_allocacmp_sum_4_load_1 = grp_fu_1179_p3;
        end else begin
            ap_sig_allocacmp_sum_4_load_1 = sum_4_fu_106;
        end
    end else begin
        ap_sig_allocacmp_sum_4_load_1 = sum_4_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        input_buf_ce0_local = 1'b1;
    end else begin
        input_buf_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        local_bias_ce0_local = 1'b1;
    end else begin
        local_bias_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        local_weights_ce0_local = 1'b1;
    end else begin
        local_weights_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        output_buf_ce0_local = 1'b1;
    end else begin
        output_buf_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln84_2_reg_1465_pp0_iter7_reg == 1'd1) & (icmp_ln86_2_reg_1461_pp0_iter7_reg == 1'd1) & (icmp_ln87_4_reg_1457_pp0_iter7_reg == 1'd1))) begin
        output_buf_we0_local = 1'b1;
    end else begin
        output_buf_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln77_2_fu_280_p2 = (indvar_flatten151_fu_150 + 20'd1);

assign add_ln77_fu_498_p2 = (oc_fu_146 + 6'd1);

assign add_ln79_2_fu_330_p2 = (indvar_flatten100_fu_142 + 16'd1);

assign add_ln79_fu_553_p2 = (select_ln77_fu_504_p3 + 4'd1);

assign add_ln81_2_fu_316_p2 = (indvar_flatten60_fu_134 + 13'd1);

assign add_ln81_fu_578_p2 = (j_mid268_fu_559_p3 + 4'd1);

assign add_ln83_fu_873_p2 = (tmp_54_fu_855_p3 + zext_ln83_fu_869_p1);

assign add_ln84_2_fu_456_p2 = (indvar_flatten31_fu_126 + 10'd1);

assign add_ln84_fu_598_p2 = (ic_mid239_fu_584_p3 + 6'd1);

assign add_ln86_2_fu_442_p2 = (indvar_flatten_fu_118 + 4'd1);

assign add_ln86_fu_639_p2 = (m_mid222_fu_604_p3 + 2'd1);

assign add_ln87_fu_782_p2 = (n_mid2_fu_660_p3 + 2'd1);

assign add_ln90_1_fu_896_p2 = (zext_ln89_fu_836_p1 + zext_ln90_2_fu_893_p1);

assign add_ln90_23_fu_756_p2 = (sub_ln90_fu_746_p2 + zext_ln90_25_fu_752_p1);

assign add_ln90_24_fu_776_p2 = (add_ln90_27_fu_718_p2 + zext_ln90_27_fu_772_p1);

assign add_ln90_25_fu_882_p2 = (sub_ln90_4_fu_849_p2 + zext_ln90_28_fu_879_p1);

assign add_ln90_26_fu_906_p2 = (add_ln83_fu_873_p2 + zext_ln90_30_fu_902_p1);

assign add_ln90_27_fu_718_p2 = (zext_ln90_fu_704_p1 + zext_ln90_23_fu_714_p1);

assign add_ln90_fu_766_p2 = (zext_ln81_fu_684_p1 + zext_ln90_1_fu_762_p1);

assign and_ln77_4_fu_371_p2 = (xor_ln77_reg_1299 & icmp_ln86_fu_365_p2);

assign and_ln77_5_fu_398_p2 = (xor_ln77_reg_1299 & icmp_ln84_fu_376_p2);

assign and_ln77_6_fu_304_p2 = (xor_ln77_fu_292_p2 & icmp_ln81_fu_298_p2);

assign and_ln77_fu_541_p2 = (xor_ln77_reg_1299_pp0_iter2_reg & icmp_ln87_fu_535_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign empty_71_fu_409_p2 = (exitcond_flatten33_mid299_fu_403_p2 | and_ln77_6_reg_1311);

assign empty_72_fu_414_p2 = (icmp_ln79_reg_1286 | empty_71_fu_409_p2);

assign empty_73_fu_431_p2 = (exitcond_flatten_mid259_fu_425_p2 | exitcond_flatten33_mid299_fu_403_p2);

assign empty_74_fu_437_p2 = (empty_reg_1322 | empty_73_fu_431_p2);

assign empty_75_fu_645_p2 = (exitcond_flatten_mid259_reg_1363 | empty_71_reg_1348);

assign empty_76_fu_649_p2 = (icmp_ln87_mid230_fu_626_p2 | empty_75_fu_645_p2);

assign empty_77_fu_655_p2 = (icmp_ln79_reg_1286_pp0_iter2_reg | empty_76_fu_649_p2);

assign empty_78_fu_676_p1 = select_ln77_2_fu_546_p3[4:0];

assign empty_fu_310_p2 = (icmp_ln79_fu_286_p2 | and_ln77_6_fu_304_p2);

assign exitcond_flatten33_mid299_fu_403_p2 = (not_exitcond_flatten62_mid21508_fu_387_p2 & and_ln77_5_fu_398_p2);

assign exitcond_flatten62_not9_fu_382_p2 = (icmp_ln81_reg_1306 ^ 1'd1);

assign exitcond_flatten_mid259_fu_425_p2 = (not_exitcond_flatten33_mid299_fu_419_p2 & exitcond_flatten_mid295_fu_392_p2);

assign exitcond_flatten_mid295_fu_392_p2 = (not_exitcond_flatten62_mid21508_fu_387_p2 & and_ln77_4_fu_371_p2);

assign exitcond_flatten_mid295_not_fu_611_p2 = (exitcond_flatten_mid295_reg_1333 ^ 1'd1);

assign first_iter_158_fu_529_p2 = ((m_fu_114 == 2'd0) ? 1'b1 : 1'b0);

assign first_iter_1_mid1_fu_1031_p2 = ((add_ln86_reg_1416_pp0_iter6_reg == 2'd0) ? 1'b1 : 1'b0);

assign first_iter_1_mid228_fu_1026_p2 = (first_iter_1_mid253_fu_1009_p2 | exitcond_flatten_mid259_reg_1363_pp0_iter6_reg);

assign first_iter_1_mid253_fu_1009_p2 = (first_iter_1_mid289_fu_980_p2 | exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg);

assign first_iter_1_mid289_fu_980_p2 = (or_ln77_6_fu_947_p2 | and_ln77_6_reg_1311_pp0_iter6_reg);

assign first_iter_1_mid2_fu_1036_p3 = ((icmp_ln87_mid230_reg_1411_pp0_iter6_reg[0:0] == 1'b1) ? first_iter_1_mid1_fu_1031_p2 : first_iter_1_mid228_fu_1026_p2);

assign first_iter_256_fu_523_p2 = ((ic_fu_122 == 6'd0) ? 1'b1 : 1'b0);

assign first_iter_2_mid1_fu_1014_p2 = ((add_ln84_reg_1406_pp0_iter6_reg == 6'd0) ? 1'b1 : 1'b0);

assign first_iter_2_mid249_fu_1004_p2 = (first_iter_2_mid285_fu_975_p2 | exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg);

assign first_iter_2_mid285_fu_975_p2 = (or_ln77_5_fu_943_p2 | and_ln77_6_reg_1311_pp0_iter6_reg);

assign first_iter_2_mid2_fu_1019_p3 = ((exitcond_flatten_mid259_reg_1363_pp0_iter6_reg[0:0] == 1'b1) ? first_iter_2_mid1_fu_1014_p2 : first_iter_2_mid249_fu_1004_p2);

assign first_iter_354_fu_517_p2 = ((j_fu_130 == 4'd0) ? 1'b1 : 1'b0);

assign first_iter_3_mid1_fu_992_p2 = ((add_ln81_reg_1401_pp0_iter6_reg == 4'd0) ? 1'b1 : 1'b0);

assign first_iter_3_mid281_fu_970_p2 = (or_ln77_4_fu_939_p2 | and_ln77_6_reg_1311_pp0_iter6_reg);

assign first_iter_3_mid2_fu_997_p3 = ((exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg[0:0] == 1'b1) ? first_iter_3_mid1_fu_992_p2 : first_iter_3_mid281_fu_970_p2);

assign first_iter_451_fu_511_p2 = ((i_fu_138 == 4'd0) ? 1'b1 : 1'b0);

assign first_iter_4_mid1_fu_958_p2 = ((add_ln79_reg_1396_pp0_iter6_reg == 4'd0) ? 1'b1 : 1'b0);

assign first_iter_4_mid2_fu_963_p3 = ((and_ln77_6_reg_1311_pp0_iter6_reg[0:0] == 1'b1) ? first_iter_4_mid1_fu_958_p2 : or_ln77_fu_935_p2);

assign ic_mid239_fu_584_p3 = ((empty_72_reg_1353[0:0] == 1'b1) ? 6'd0 : ic_fu_122);

assign icmp_ln77_fu_274_p2 = ((indvar_flatten151_fu_150 == 20'd589824) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_286_p2 = ((indvar_flatten100_fu_142 == 16'd18432) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_298_p2 = ((indvar_flatten60_fu_134 == 13'd2304) ? 1'b1 : 1'b0);

assign icmp_ln84_2_fu_800_p2 = ((select_ln84_fu_632_p3 == 6'd31) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_376_p2 = ((indvar_flatten31_fu_126 == 10'd288) ? 1'b1 : 1'b0);

assign icmp_ln86_2_fu_794_p2 = ((select_ln86_fu_668_p3 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_365_p2 = ((indvar_flatten_fu_118 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln87_3_fu_1051_p2 = ((n_mid2_reg_1421_pp0_iter6_reg != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_4_fu_788_p2 = ((add_ln87_fu_782_p2 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_535_p2 = ((n_fu_110 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln87_mid230_fu_626_p2 = (not_exitcond_flatten_mid259_fu_616_p2 & icmp_ln87_mid255_fu_621_p2);

assign icmp_ln87_mid255_fu_621_p2 = (not_exitcond_flatten33_mid299_reg_1358 & icmp_ln87_mid291_fu_566_p2);

assign icmp_ln87_mid291_fu_566_p2 = (not_exitcond_flatten62_mid21508_reg_1328 & and_ln77_fu_541_p2);

assign icmp_ln95_fu_1148_p2 = (($signed(result_fu_1130_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign input_buf_address0 = zext_ln90_31_fu_912_p1;

assign input_buf_ce0 = input_buf_ce0_local;

assign j_mid268_fu_559_p3 = ((empty_reg_1322_pp0_iter2_reg[0:0] == 1'b1) ? 4'd0 : j_fu_130);

assign local_bias_address0 = oc_cast_cast_fu_925_p1;

assign local_bias_ce0 = local_bias_ce0_local;

assign local_weights_address0 = zext_ln90_29_fu_888_p1;

assign local_weights_ce0 = local_weights_ce0_local;

assign m_mid222_fu_604_p3 = ((empty_74_reg_1371[0:0] == 1'b1) ? 2'd0 : m_fu_114);

assign n_mid2_fu_660_p3 = ((empty_77_fu_655_p2[0:0] == 1'b1) ? 2'd0 : n_fu_110);

assign not_exitcond_flatten33_mid299_fu_419_p2 = (exitcond_flatten33_mid299_fu_403_p2 ^ 1'd1);

assign not_exitcond_flatten62_mid21508_fu_387_p2 = (icmp_ln79_reg_1286 | exitcond_flatten62_not9_fu_382_p2);

assign not_exitcond_flatten_mid259_fu_616_p2 = (exitcond_flatten_mid295_not_fu_611_p2 | exitcond_flatten33_mid299_reg_1338);

assign oc_cast_cast_fu_925_p1 = empty_78_reg_1428_pp0_iter5_reg;

assign or_ln77_4_fu_939_p2 = (icmp_ln79_reg_1286_pp0_iter6_reg | first_iter_354_reg_1381_pp0_iter6_reg);

assign or_ln77_5_fu_943_p2 = (icmp_ln79_reg_1286_pp0_iter6_reg | first_iter_256_reg_1386_pp0_iter6_reg);

assign or_ln77_6_fu_947_p2 = (icmp_ln79_reg_1286_pp0_iter6_reg | first_iter_158_reg_1391_pp0_iter6_reg);

assign or_ln77_fu_935_p2 = (icmp_ln79_reg_1286_pp0_iter6_reg | first_iter_451_reg_1376_pp0_iter6_reg);

assign or_ln87_3_fu_1074_p2 = (xor_ln87_3_fu_1068_p2 | or_ln87_fu_1062_p2);

assign or_ln87_4_fu_1086_p2 = (xor_ln87_4_fu_1080_p2 | or_ln87_3_fu_1074_p2);

assign or_ln87_fu_1062_p2 = (xor_ln87_fu_1056_p2 | icmp_ln87_3_fu_1051_p2);

assign output_buf_address0 = zext_ln95_fu_1170_p1;

assign output_buf_ce0 = output_buf_ce0_local;

assign output_buf_d0 = select_ln95_fu_1154_p3;

assign output_buf_we0 = output_buf_we0_local;

assign p_shl4_fu_842_p3 = {{add_ln90_23_reg_1445}, {2'd0}};

assign p_shl_fu_736_p4 = {{{empty_78_fu_676_p1}, {trunc_ln90_fu_692_p1}}, {2'd0}};

assign result_fu_1130_p1 = grp_fu_1179_p3;

assign result_fu_1130_p4 = {{result_fu_1130_p1[27:12]}};

assign select_ln77_2_fu_546_p3 = ((icmp_ln79_reg_1286_pp0_iter2_reg[0:0] == 1'b1) ? add_ln77_fu_498_p2 : oc_fu_146);

assign select_ln77_fu_504_p3 = ((icmp_ln79_reg_1286_pp0_iter2_reg[0:0] == 1'b1) ? 4'd0 : i_fu_138);

assign select_ln79_4_fu_1096_p3 = ((first_iter_4_mid2_fu_963_p3[0:0] == 1'b1) ? sext_ln79_fu_1092_p1 : sext_ln7910_fu_154);

assign select_ln79_5_fu_1104_p3 = ((first_iter_4_mid2_fu_963_p3[0:0] == 1'b1) ? sext_ln79_fu_1092_p1 : sum_4_mid247_fu_985_p3);

assign select_ln79_6_fu_336_p3 = ((icmp_ln79_fu_286_p2[0:0] == 1'b1) ? 16'd1 : add_ln79_2_fu_330_p2);

assign select_ln79_fu_571_p3 = ((and_ln77_6_reg_1311_pp0_iter2_reg[0:0] == 1'b1) ? add_ln79_fu_553_p2 : select_ln77_fu_504_p3);

assign select_ln81_2_fu_322_p3 = ((empty_fu_310_p2[0:0] == 1'b1) ? 13'd1 : add_ln81_2_fu_316_p2);

assign select_ln81_fu_591_p3 = ((exitcond_flatten33_mid299_reg_1338[0:0] == 1'b1) ? add_ln81_fu_578_p2 : j_mid268_fu_559_p3);

assign select_ln84_2_fu_462_p3 = ((empty_72_fu_414_p2[0:0] == 1'b1) ? 10'd1 : add_ln84_2_fu_456_p2);

assign select_ln84_fu_632_p3 = ((exitcond_flatten_mid259_reg_1363[0:0] == 1'b1) ? add_ln84_fu_598_p2 : ic_mid239_fu_584_p3);

assign select_ln86_2_fu_448_p3 = ((empty_74_fu_437_p2[0:0] == 1'b1) ? 4'd1 : add_ln86_2_fu_442_p2);

assign select_ln86_fu_668_p3 = ((icmp_ln87_mid230_fu_626_p2[0:0] == 1'b1) ? add_ln86_fu_639_p2 : m_mid222_fu_604_p3);

assign select_ln95_fu_1154_p3 = ((icmp_ln95_fu_1148_p2[0:0] == 1'b1) ? trunc_ln94_1_fu_1139_p4 : 15'd0);

assign sext_ln79_fu_1092_p1 = $signed(sum_fu_1043_p3);

assign shl_ln90_fu_708_p2 = select_ln84_fu_632_p3 << 6'd1;

assign sub_ln90_4_fu_849_p2 = (p_shl4_fu_842_p3 - zext_ln90_26_fu_839_p1);

assign sub_ln90_fu_746_p2 = (p_shl_fu_736_p4 - zext_ln90_24_fu_732_p1);

assign sum_4_mid247_fu_985_p3 = ((exitcond_flatten33_mid299_reg_1338_pp0_iter6_reg[0:0] == 1'b1) ? sext_ln7910_fu_154 : sum_4_mid279_fu_951_p3);

assign sum_4_mid279_fu_951_p3 = ((and_ln77_6_reg_1311_pp0_iter6_reg[0:0] == 1'b1) ? sext_ln7910_fu_154 : ap_sig_allocacmp_sum_4_load);

assign sum_fu_1043_p3 = {{local_bias_q0}, {12'd0}};

assign tmp_40_fu_1163_p4 = {{{empty_78_reg_1428_pp0_iter7_reg}, {trunc_ln95_reg_1434_pp0_iter7_reg}}, {trunc_ln89_reg_1439_pp0_iter7_reg}};

assign tmp_54_fu_855_p3 = {{add_ln90_24_reg_1451}, {3'd0}};

assign tmp_55_fu_862_p3 = {{add_ln90_24_reg_1451}, {1'd0}};

assign tmp_fu_696_p3 = {{trunc_ln90_fu_692_p1}, {3'd0}};

assign tmp_s_fu_724_p3 = {{empty_78_fu_676_p1}, {trunc_ln90_fu_692_p1}};

assign trunc_ln89_fu_688_p1 = select_ln81_fu_591_p3[2:0];

assign trunc_ln90_fu_692_p1 = select_ln84_fu_632_p3[4:0];

assign trunc_ln94_1_fu_1139_p1 = grp_fu_1179_p3;

assign trunc_ln94_1_fu_1139_p4 = {{trunc_ln94_1_fu_1139_p1[26:12]}};

assign trunc_ln95_fu_680_p1 = select_ln79_fu_571_p3[2:0];

assign xor_ln77_fu_292_p2 = (icmp_ln79_fu_286_p2 ^ 1'd1);

assign xor_ln87_3_fu_1068_p2 = (first_iter_2_mid2_fu_1019_p3 ^ 1'd1);

assign xor_ln87_4_fu_1080_p2 = (first_iter_3_mid2_fu_997_p3 ^ 1'd1);

assign xor_ln87_fu_1056_p2 = (first_iter_1_mid2_fu_1036_p3 ^ 1'd1);

assign zext_ln81_fu_684_p1 = trunc_ln95_fu_680_p1;

assign zext_ln83_fu_869_p1 = tmp_55_fu_862_p3;

assign zext_ln89_fu_836_p1 = trunc_ln89_reg_1439;

assign zext_ln90_1_fu_762_p1 = select_ln86_fu_668_p3;

assign zext_ln90_23_fu_714_p1 = shl_ln90_fu_708_p2;

assign zext_ln90_24_fu_732_p1 = tmp_s_fu_724_p3;

assign zext_ln90_25_fu_752_p1 = select_ln86_fu_668_p3;

assign zext_ln90_26_fu_839_p1 = add_ln90_23_reg_1445;

assign zext_ln90_27_fu_772_p1 = add_ln90_fu_766_p2;

assign zext_ln90_28_fu_879_p1 = n_mid2_reg_1421;

assign zext_ln90_29_fu_888_p1 = add_ln90_25_fu_882_p2;

assign zext_ln90_2_fu_893_p1 = n_mid2_reg_1421;

assign zext_ln90_30_fu_902_p1 = add_ln90_1_fu_896_p2;

assign zext_ln90_31_fu_912_p1 = add_ln90_26_fu_906_p2;

assign zext_ln90_fu_704_p1 = tmp_fu_696_p3;

assign zext_ln95_fu_1170_p1 = tmp_40_fu_1163_p4;

endmodule //cnn_top_convolution_func
