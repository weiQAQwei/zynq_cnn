// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cnn_top_convolution_func_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_buf_address0,
        input_buf_ce0,
        input_buf_q0,
        local_weights_address0,
        local_weights_ce0,
        local_weights_q0,
        local_bias_address0,
        local_bias_ce0,
        local_bias_q0,
        output_buf_address0,
        output_buf_ce0,
        output_buf_we0,
        output_buf_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_buf_address0;
output   input_buf_ce0;
input  [15:0] input_buf_q0;
output  [13:0] local_weights_address0;
output   local_weights_ce0;
input  [15:0] local_weights_q0;
output  [4:0] local_bias_address0;
output   local_bias_ce0;
input  [15:0] local_bias_q0;
output  [12:0] output_buf_address0;
output   output_buf_ce0;
output   output_buf_we0;
output  [14:0] output_buf_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln77_fu_278_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln77_reg_1286;
wire   [0:0] icmp_ln79_fu_290_p2;
reg   [0:0] icmp_ln79_reg_1290;
reg   [0:0] icmp_ln79_reg_1290_pp0_iter2_reg;
reg   [0:0] icmp_ln79_reg_1290_pp0_iter3_reg;
reg   [0:0] icmp_ln79_reg_1290_pp0_iter4_reg;
reg   [0:0] icmp_ln79_reg_1290_pp0_iter5_reg;
reg   [0:0] icmp_ln79_reg_1290_pp0_iter6_reg;
wire   [0:0] xor_ln77_fu_296_p2;
reg   [0:0] xor_ln77_reg_1303;
reg   [0:0] xor_ln77_reg_1303_pp0_iter2_reg;
wire   [0:0] icmp_ln81_fu_302_p2;
reg   [0:0] icmp_ln81_reg_1310;
wire   [0:0] and_ln77_3_fu_308_p2;
reg   [0:0] and_ln77_3_reg_1315;
reg   [0:0] and_ln77_3_reg_1315_pp0_iter2_reg;
reg   [0:0] and_ln77_3_reg_1315_pp0_iter3_reg;
reg   [0:0] and_ln77_3_reg_1315_pp0_iter4_reg;
reg   [0:0] and_ln77_3_reg_1315_pp0_iter5_reg;
reg   [0:0] and_ln77_3_reg_1315_pp0_iter6_reg;
wire   [0:0] empty_fu_314_p2;
reg   [0:0] empty_reg_1326;
reg   [0:0] empty_reg_1326_pp0_iter2_reg;
wire   [0:0] not_exitcond_flatten62_mid21508_fu_391_p2;
reg   [0:0] not_exitcond_flatten62_mid21508_reg_1332;
wire   [0:0] exitcond_flatten_mid295_fu_396_p2;
reg   [0:0] exitcond_flatten_mid295_reg_1337;
wire   [0:0] exitcond_flatten33_mid299_fu_407_p2;
reg   [0:0] exitcond_flatten33_mid299_reg_1342;
reg   [0:0] exitcond_flatten33_mid299_reg_1342_pp0_iter3_reg;
reg   [0:0] exitcond_flatten33_mid299_reg_1342_pp0_iter4_reg;
reg   [0:0] exitcond_flatten33_mid299_reg_1342_pp0_iter5_reg;
reg   [0:0] exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg;
wire   [0:0] empty_63_fu_413_p2;
reg   [0:0] empty_63_reg_1352;
wire   [0:0] empty_64_fu_418_p2;
reg   [0:0] empty_64_reg_1357;
wire   [0:0] not_exitcond_flatten33_mid299_fu_423_p2;
reg   [0:0] not_exitcond_flatten33_mid299_reg_1362;
wire   [0:0] exitcond_flatten_mid259_fu_429_p2;
reg   [0:0] exitcond_flatten_mid259_reg_1367;
reg   [0:0] exitcond_flatten_mid259_reg_1367_pp0_iter3_reg;
reg   [0:0] exitcond_flatten_mid259_reg_1367_pp0_iter4_reg;
reg   [0:0] exitcond_flatten_mid259_reg_1367_pp0_iter5_reg;
reg   [0:0] exitcond_flatten_mid259_reg_1367_pp0_iter6_reg;
wire   [0:0] empty_66_fu_441_p2;
reg   [0:0] empty_66_reg_1375;
wire   [0:0] first_iter_451_fu_515_p2;
reg   [0:0] first_iter_451_reg_1380;
reg   [0:0] first_iter_451_reg_1380_pp0_iter4_reg;
reg   [0:0] first_iter_451_reg_1380_pp0_iter5_reg;
reg   [0:0] first_iter_451_reg_1380_pp0_iter6_reg;
wire   [0:0] first_iter_354_fu_521_p2;
reg   [0:0] first_iter_354_reg_1385;
reg   [0:0] first_iter_354_reg_1385_pp0_iter4_reg;
reg   [0:0] first_iter_354_reg_1385_pp0_iter5_reg;
reg   [0:0] first_iter_354_reg_1385_pp0_iter6_reg;
wire   [0:0] first_iter_256_fu_527_p2;
reg   [0:0] first_iter_256_reg_1390;
reg   [0:0] first_iter_256_reg_1390_pp0_iter4_reg;
reg   [0:0] first_iter_256_reg_1390_pp0_iter5_reg;
reg   [0:0] first_iter_256_reg_1390_pp0_iter6_reg;
wire   [0:0] first_iter_158_fu_533_p2;
reg   [0:0] first_iter_158_reg_1395;
reg   [0:0] first_iter_158_reg_1395_pp0_iter4_reg;
reg   [0:0] first_iter_158_reg_1395_pp0_iter5_reg;
reg   [0:0] first_iter_158_reg_1395_pp0_iter6_reg;
wire   [4:0] add_ln79_fu_557_p2;
reg   [4:0] add_ln79_reg_1400;
reg   [4:0] add_ln79_reg_1400_pp0_iter4_reg;
reg   [4:0] add_ln79_reg_1400_pp0_iter5_reg;
reg   [4:0] add_ln79_reg_1400_pp0_iter6_reg;
wire   [4:0] add_ln81_fu_582_p2;
reg   [4:0] add_ln81_reg_1405;
reg   [4:0] add_ln81_reg_1405_pp0_iter4_reg;
reg   [4:0] add_ln81_reg_1405_pp0_iter5_reg;
reg   [4:0] add_ln81_reg_1405_pp0_iter6_reg;
wire   [5:0] add_ln84_fu_602_p2;
reg   [5:0] add_ln84_reg_1410;
reg   [5:0] add_ln84_reg_1410_pp0_iter4_reg;
reg   [5:0] add_ln84_reg_1410_pp0_iter5_reg;
reg   [5:0] add_ln84_reg_1410_pp0_iter6_reg;
wire   [0:0] icmp_ln87_mid230_fu_630_p2;
reg   [0:0] icmp_ln87_mid230_reg_1415;
reg   [0:0] icmp_ln87_mid230_reg_1415_pp0_iter4_reg;
reg   [0:0] icmp_ln87_mid230_reg_1415_pp0_iter5_reg;
reg   [0:0] icmp_ln87_mid230_reg_1415_pp0_iter6_reg;
wire   [1:0] add_ln86_fu_643_p2;
reg   [1:0] add_ln86_reg_1420;
reg   [1:0] add_ln86_reg_1420_pp0_iter4_reg;
reg   [1:0] add_ln86_reg_1420_pp0_iter5_reg;
reg   [1:0] add_ln86_reg_1420_pp0_iter6_reg;
wire   [1:0] n_mid2_fu_664_p3;
reg   [1:0] n_mid2_reg_1425;
reg   [1:0] n_mid2_reg_1425_pp0_iter4_reg;
reg   [1:0] n_mid2_reg_1425_pp0_iter5_reg;
reg   [1:0] n_mid2_reg_1425_pp0_iter6_reg;
wire   [4:0] empty_70_fu_680_p1;
reg   [4:0] empty_70_reg_1432;
reg   [4:0] empty_70_reg_1432_pp0_iter4_reg;
reg   [4:0] empty_70_reg_1432_pp0_iter5_reg;
reg   [4:0] empty_70_reg_1432_pp0_iter6_reg;
reg   [4:0] empty_70_reg_1432_pp0_iter7_reg;
wire   [3:0] trunc_ln95_fu_684_p1;
reg   [3:0] trunc_ln95_reg_1438;
reg   [3:0] trunc_ln95_reg_1438_pp0_iter4_reg;
reg   [3:0] trunc_ln95_reg_1438_pp0_iter5_reg;
reg   [3:0] trunc_ln95_reg_1438_pp0_iter6_reg;
reg   [3:0] trunc_ln95_reg_1438_pp0_iter7_reg;
wire   [3:0] trunc_ln89_fu_692_p1;
reg   [3:0] trunc_ln89_reg_1443;
reg   [3:0] trunc_ln89_reg_1443_pp0_iter4_reg;
reg   [3:0] trunc_ln89_reg_1443_pp0_iter5_reg;
reg   [3:0] trunc_ln89_reg_1443_pp0_iter6_reg;
reg   [3:0] trunc_ln89_reg_1443_pp0_iter7_reg;
wire   [11:0] add_ln90_18_fu_760_p2;
reg   [11:0] add_ln90_18_reg_1449;
wire   [9:0] add_ln90_19_fu_780_p2;
reg   [9:0] add_ln90_19_reg_1455;
wire   [0:0] icmp_ln87_2_fu_792_p2;
reg   [0:0] icmp_ln87_2_reg_1461;
reg   [0:0] icmp_ln87_2_reg_1461_pp0_iter4_reg;
reg   [0:0] icmp_ln87_2_reg_1461_pp0_iter5_reg;
reg   [0:0] icmp_ln87_2_reg_1461_pp0_iter6_reg;
reg   [0:0] icmp_ln87_2_reg_1461_pp0_iter7_reg;
wire   [0:0] icmp_ln86_1_fu_798_p2;
reg   [0:0] icmp_ln86_1_reg_1465;
reg   [0:0] icmp_ln86_1_reg_1465_pp0_iter4_reg;
reg   [0:0] icmp_ln86_1_reg_1465_pp0_iter5_reg;
reg   [0:0] icmp_ln86_1_reg_1465_pp0_iter6_reg;
reg   [0:0] icmp_ln86_1_reg_1465_pp0_iter7_reg;
wire   [0:0] icmp_ln84_1_fu_804_p2;
reg   [0:0] icmp_ln84_1_reg_1469;
reg   [0:0] icmp_ln84_1_reg_1469_pp0_iter4_reg;
reg   [0:0] icmp_ln84_1_reg_1469_pp0_iter5_reg;
reg   [0:0] icmp_ln84_1_reg_1469_pp0_iter6_reg;
reg   [0:0] icmp_ln84_1_reg_1469_pp0_iter7_reg;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [31:0] zext_ln90_20_fu_892_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln90_22_fu_916_p1;
wire   [31:0] oc_cast_cast_fu_929_p1;
wire   [31:0] zext_ln95_fu_1174_p1;
reg   [31:0] sum_2_fu_110;
wire   [31:0] grp_fu_1183_p3;
wire   [31:0] select_ln79_2_fu_1108_p3;
wire   [31:0] sum_9_mid247_fu_989_p3;
reg   [31:0] ap_sig_allocacmp_sum_2_load;
reg   [31:0] ap_sig_allocacmp_sum_2_load_1;
wire   [0:0] or_ln87_2_fu_1090_p2;
reg   [1:0] n_fu_114;
wire   [1:0] add_ln87_fu_786_p2;
wire    ap_loop_init;
reg   [1:0] m_fu_118;
wire   [1:0] select_ln86_fu_672_p3;
reg   [3:0] indvar_flatten_fu_122;
wire   [3:0] select_ln86_1_fu_452_p3;
reg   [5:0] ic_fu_126;
wire   [5:0] select_ln84_fu_636_p3;
reg   [9:0] indvar_flatten31_fu_130;
wire   [9:0] select_ln84_1_fu_466_p3;
reg   [4:0] j_fu_134;
wire   [4:0] select_ln81_fu_595_p3;
reg   [13:0] indvar_flatten60_fu_138;
wire   [13:0] select_ln81_1_fu_326_p3;
reg   [4:0] i_fu_142;
wire   [4:0] select_ln79_fu_575_p3;
reg   [17:0] indvar_flatten100_fu_146;
wire   [17:0] select_ln79_3_fu_340_p3;
reg   [5:0] oc_fu_150;
wire   [5:0] select_ln77_1_fu_550_p3;
reg   [21:0] indvar_flatten151_fu_154;
wire   [21:0] add_ln77_1_fu_284_p2;
reg   [31:0] sext_ln7910_fu_158;
wire   [31:0] select_ln79_1_fu_1100_p3;
reg    input_buf_ce0_local;
reg    local_weights_ce0_local;
reg    local_bias_ce0_local;
reg    output_buf_we0_local;
wire   [14:0] select_ln95_fu_1158_p3;
reg    output_buf_ce0_local;
wire   [13:0] add_ln81_1_fu_320_p2;
wire   [17:0] add_ln79_1_fu_334_p2;
wire   [0:0] icmp_ln86_fu_369_p2;
wire   [0:0] exitcond_flatten62_not9_fu_386_p2;
wire   [0:0] and_ln77_1_fu_375_p2;
wire   [0:0] icmp_ln84_fu_380_p2;
wire   [0:0] and_ln77_2_fu_402_p2;
wire   [0:0] empty_65_fu_435_p2;
wire   [3:0] add_ln86_1_fu_446_p2;
wire   [9:0] add_ln84_1_fu_460_p2;
wire   [0:0] icmp_ln87_fu_539_p2;
wire   [5:0] add_ln77_fu_502_p2;
wire   [4:0] select_ln77_fu_508_p3;
wire   [0:0] and_ln77_fu_545_p2;
wire   [4:0] j_mid268_fu_563_p3;
wire   [5:0] ic_mid239_fu_588_p3;
wire   [0:0] exitcond_flatten_mid295_not_fu_615_p2;
wire   [0:0] icmp_ln87_mid291_fu_570_p2;
wire   [0:0] icmp_ln87_mid255_fu_625_p2;
wire   [0:0] not_exitcond_flatten_mid259_fu_620_p2;
wire   [1:0] m_mid222_fu_608_p3;
wire   [0:0] empty_67_fu_649_p2;
wire   [0:0] empty_68_fu_653_p2;
wire   [0:0] empty_69_fu_659_p2;
wire   [4:0] trunc_ln90_fu_696_p1;
wire   [8:0] tmp_fu_700_p3;
wire   [5:0] shl_ln90_fu_712_p2;
wire   [9:0] zext_ln90_fu_708_p1;
wire   [9:0] zext_ln90_14_fu_718_p1;
wire   [9:0] tmp_s_fu_728_p3;
wire   [11:0] p_shl_fu_740_p4;
wire   [11:0] zext_ln90_15_fu_736_p1;
wire   [11:0] sub_ln90_fu_750_p2;
wire   [11:0] zext_ln90_16_fu_756_p1;
wire   [4:0] zext_ln81_fu_688_p1;
wire   [4:0] zext_ln90_4_fu_766_p1;
wire   [4:0] add_ln90_fu_770_p2;
wire   [9:0] add_ln90_22_fu_722_p2;
wire   [9:0] zext_ln90_18_fu_776_p1;
wire   [13:0] p_shl3_fu_846_p3;
wire   [13:0] zext_ln90_17_fu_843_p1;
wire   [10:0] tmp_53_fu_866_p3;
wire   [13:0] tmp_52_fu_859_p3;
wire   [13:0] zext_ln83_fu_873_p1;
wire   [13:0] sub_ln90_3_fu_853_p2;
wire   [13:0] zext_ln90_19_fu_883_p1;
wire   [13:0] add_ln90_20_fu_886_p2;
wire   [4:0] zext_ln89_fu_840_p1;
wire   [4:0] zext_ln90_5_fu_897_p1;
wire   [4:0] add_ln90_3_fu_900_p2;
wire   [13:0] add_ln83_fu_877_p2;
wire   [13:0] zext_ln90_21_fu_906_p1;
wire   [13:0] add_ln90_21_fu_910_p2;
wire   [0:0] first_iter_4_mid1_fu_962_p2;
wire   [0:0] or_ln77_fu_939_p2;
wire   [0:0] or_ln77_1_fu_943_p2;
wire   [0:0] or_ln77_2_fu_947_p2;
wire   [0:0] or_ln77_3_fu_951_p2;
wire   [31:0] sum_9_mid279_fu_955_p3;
wire   [0:0] first_iter_3_mid1_fu_996_p2;
wire   [0:0] first_iter_3_mid281_fu_974_p2;
wire   [0:0] first_iter_2_mid285_fu_979_p2;
wire   [0:0] first_iter_1_mid289_fu_984_p2;
wire   [0:0] first_iter_2_mid1_fu_1018_p2;
wire   [0:0] first_iter_2_mid249_fu_1008_p2;
wire   [0:0] first_iter_1_mid253_fu_1013_p2;
wire   [0:0] first_iter_1_mid1_fu_1035_p2;
wire   [0:0] first_iter_1_mid228_fu_1030_p2;
wire   [0:0] first_iter_1_mid2_fu_1040_p3;
wire   [0:0] icmp_ln87_1_fu_1055_p2;
wire   [0:0] xor_ln87_fu_1060_p2;
wire   [0:0] first_iter_2_mid2_fu_1023_p3;
wire   [0:0] or_ln87_fu_1066_p2;
wire   [0:0] xor_ln87_1_fu_1072_p2;
wire   [0:0] first_iter_3_mid2_fu_1001_p3;
wire   [0:0] or_ln87_1_fu_1078_p2;
wire   [0:0] xor_ln87_2_fu_1084_p2;
wire   [27:0] sum_fu_1047_p3;
wire   [0:0] first_iter_4_mid2_fu_967_p3;
wire  signed [31:0] sext_ln79_fu_1096_p1;
wire  signed [31:0] result_fu_1134_p1;
wire  signed [31:0] trunc_ln94_2_fu_1143_p1;
wire   [15:0] result_fu_1134_p4;
wire   [0:0] icmp_ln95_fu_1152_p2;
wire   [14:0] trunc_ln94_2_fu_1143_p4;
wire   [12:0] tmp_39_fu_1167_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 sum_2_fu_110 = 32'd0;
#0 n_fu_114 = 2'd0;
#0 m_fu_118 = 2'd0;
#0 indvar_flatten_fu_122 = 4'd0;
#0 ic_fu_126 = 6'd0;
#0 indvar_flatten31_fu_130 = 10'd0;
#0 j_fu_134 = 5'd0;
#0 indvar_flatten60_fu_138 = 14'd0;
#0 i_fu_142 = 5'd0;
#0 indvar_flatten100_fu_146 = 18'd0;
#0 oc_fu_150 = 6'd0;
#0 indvar_flatten151_fu_154 = 22'd0;
#0 sext_ln7910_fu_158 = 32'd0;
#0 ap_done_reg = 1'b0;
end

cnn_top_mac_muladd_16s_16s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32ns_32_4_1_U190(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(local_weights_q0),
    .din1(input_buf_q0),
    .din2(ap_sig_allocacmp_sum_2_load_1),
    .ce(1'b1),
    .dout(grp_fu_1183_p3)
);

cnn_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_fu_142 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            i_fu_142 <= select_ln79_fu_575_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ic_fu_126 <= 6'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            ic_fu_126 <= select_ln84_fu_636_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten100_fu_146 <= 18'd0;
        end else if (((icmp_ln77_fu_278_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten100_fu_146 <= select_ln79_3_fu_340_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten151_fu_154 <= 22'd0;
        end else if (((icmp_ln77_fu_278_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten151_fu_154 <= add_ln77_1_fu_284_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten31_fu_130 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln77_reg_1286 == 1'd0))) begin
            indvar_flatten31_fu_130 <= select_ln84_1_fu_466_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten60_fu_138 <= 14'd0;
        end else if (((icmp_ln77_fu_278_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten60_fu_138 <= select_ln81_1_fu_326_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten_fu_122 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln77_reg_1286 == 1'd0))) begin
            indvar_flatten_fu_122 <= select_ln86_1_fu_452_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            j_fu_134 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            j_fu_134 <= select_ln81_fu_595_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            m_fu_118 <= 2'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            m_fu_118 <= select_ln86_fu_672_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            n_fu_114 <= 2'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            n_fu_114 <= add_ln87_fu_786_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            oc_fu_150 <= 6'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            oc_fu_150 <= select_ln77_1_fu_550_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_enable_reg_pp0_iter7 == 1'b1) & (or_ln87_2_fu_1090_p2 == 1'd1))) begin
            sum_2_fu_110 <= sum_9_mid247_fu_989_p3;
        end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (or_ln87_2_fu_1090_p2 == 1'd0))) begin
            sum_2_fu_110 <= select_ln79_2_fu_1108_p3;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            sum_2_fu_110 <= grp_fu_1183_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln79_reg_1400 <= add_ln79_fu_557_p2;
        add_ln79_reg_1400_pp0_iter4_reg <= add_ln79_reg_1400;
        add_ln79_reg_1400_pp0_iter5_reg <= add_ln79_reg_1400_pp0_iter4_reg;
        add_ln79_reg_1400_pp0_iter6_reg <= add_ln79_reg_1400_pp0_iter5_reg;
        add_ln81_reg_1405 <= add_ln81_fu_582_p2;
        add_ln81_reg_1405_pp0_iter4_reg <= add_ln81_reg_1405;
        add_ln81_reg_1405_pp0_iter5_reg <= add_ln81_reg_1405_pp0_iter4_reg;
        add_ln81_reg_1405_pp0_iter6_reg <= add_ln81_reg_1405_pp0_iter5_reg;
        add_ln84_reg_1410 <= add_ln84_fu_602_p2;
        add_ln84_reg_1410_pp0_iter4_reg <= add_ln84_reg_1410;
        add_ln84_reg_1410_pp0_iter5_reg <= add_ln84_reg_1410_pp0_iter4_reg;
        add_ln84_reg_1410_pp0_iter6_reg <= add_ln84_reg_1410_pp0_iter5_reg;
        add_ln86_reg_1420 <= add_ln86_fu_643_p2;
        add_ln86_reg_1420_pp0_iter4_reg <= add_ln86_reg_1420;
        add_ln86_reg_1420_pp0_iter5_reg <= add_ln86_reg_1420_pp0_iter4_reg;
        add_ln86_reg_1420_pp0_iter6_reg <= add_ln86_reg_1420_pp0_iter5_reg;
        add_ln90_18_reg_1449 <= add_ln90_18_fu_760_p2;
        add_ln90_19_reg_1455 <= add_ln90_19_fu_780_p2;
        and_ln77_3_reg_1315_pp0_iter2_reg <= and_ln77_3_reg_1315;
        and_ln77_3_reg_1315_pp0_iter3_reg <= and_ln77_3_reg_1315_pp0_iter2_reg;
        and_ln77_3_reg_1315_pp0_iter4_reg <= and_ln77_3_reg_1315_pp0_iter3_reg;
        and_ln77_3_reg_1315_pp0_iter5_reg <= and_ln77_3_reg_1315_pp0_iter4_reg;
        and_ln77_3_reg_1315_pp0_iter6_reg <= and_ln77_3_reg_1315_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        empty_63_reg_1352 <= empty_63_fu_413_p2;
        empty_64_reg_1357 <= empty_64_fu_418_p2;
        empty_66_reg_1375 <= empty_66_fu_441_p2;
        empty_70_reg_1432 <= empty_70_fu_680_p1;
        empty_70_reg_1432_pp0_iter4_reg <= empty_70_reg_1432;
        empty_70_reg_1432_pp0_iter5_reg <= empty_70_reg_1432_pp0_iter4_reg;
        empty_70_reg_1432_pp0_iter6_reg <= empty_70_reg_1432_pp0_iter5_reg;
        empty_70_reg_1432_pp0_iter7_reg <= empty_70_reg_1432_pp0_iter6_reg;
        empty_reg_1326_pp0_iter2_reg <= empty_reg_1326;
        exitcond_flatten33_mid299_reg_1342 <= exitcond_flatten33_mid299_fu_407_p2;
        exitcond_flatten33_mid299_reg_1342_pp0_iter3_reg <= exitcond_flatten33_mid299_reg_1342;
        exitcond_flatten33_mid299_reg_1342_pp0_iter4_reg <= exitcond_flatten33_mid299_reg_1342_pp0_iter3_reg;
        exitcond_flatten33_mid299_reg_1342_pp0_iter5_reg <= exitcond_flatten33_mid299_reg_1342_pp0_iter4_reg;
        exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg <= exitcond_flatten33_mid299_reg_1342_pp0_iter5_reg;
        exitcond_flatten_mid259_reg_1367 <= exitcond_flatten_mid259_fu_429_p2;
        exitcond_flatten_mid259_reg_1367_pp0_iter3_reg <= exitcond_flatten_mid259_reg_1367;
        exitcond_flatten_mid259_reg_1367_pp0_iter4_reg <= exitcond_flatten_mid259_reg_1367_pp0_iter3_reg;
        exitcond_flatten_mid259_reg_1367_pp0_iter5_reg <= exitcond_flatten_mid259_reg_1367_pp0_iter4_reg;
        exitcond_flatten_mid259_reg_1367_pp0_iter6_reg <= exitcond_flatten_mid259_reg_1367_pp0_iter5_reg;
        exitcond_flatten_mid295_reg_1337 <= exitcond_flatten_mid295_fu_396_p2;
        first_iter_158_reg_1395 <= first_iter_158_fu_533_p2;
        first_iter_158_reg_1395_pp0_iter4_reg <= first_iter_158_reg_1395;
        first_iter_158_reg_1395_pp0_iter5_reg <= first_iter_158_reg_1395_pp0_iter4_reg;
        first_iter_158_reg_1395_pp0_iter6_reg <= first_iter_158_reg_1395_pp0_iter5_reg;
        first_iter_256_reg_1390 <= first_iter_256_fu_527_p2;
        first_iter_256_reg_1390_pp0_iter4_reg <= first_iter_256_reg_1390;
        first_iter_256_reg_1390_pp0_iter5_reg <= first_iter_256_reg_1390_pp0_iter4_reg;
        first_iter_256_reg_1390_pp0_iter6_reg <= first_iter_256_reg_1390_pp0_iter5_reg;
        first_iter_354_reg_1385 <= first_iter_354_fu_521_p2;
        first_iter_354_reg_1385_pp0_iter4_reg <= first_iter_354_reg_1385;
        first_iter_354_reg_1385_pp0_iter5_reg <= first_iter_354_reg_1385_pp0_iter4_reg;
        first_iter_354_reg_1385_pp0_iter6_reg <= first_iter_354_reg_1385_pp0_iter5_reg;
        first_iter_451_reg_1380 <= first_iter_451_fu_515_p2;
        first_iter_451_reg_1380_pp0_iter4_reg <= first_iter_451_reg_1380;
        first_iter_451_reg_1380_pp0_iter5_reg <= first_iter_451_reg_1380_pp0_iter4_reg;
        first_iter_451_reg_1380_pp0_iter6_reg <= first_iter_451_reg_1380_pp0_iter5_reg;
        icmp_ln79_reg_1290_pp0_iter2_reg <= icmp_ln79_reg_1290;
        icmp_ln79_reg_1290_pp0_iter3_reg <= icmp_ln79_reg_1290_pp0_iter2_reg;
        icmp_ln79_reg_1290_pp0_iter4_reg <= icmp_ln79_reg_1290_pp0_iter3_reg;
        icmp_ln79_reg_1290_pp0_iter5_reg <= icmp_ln79_reg_1290_pp0_iter4_reg;
        icmp_ln79_reg_1290_pp0_iter6_reg <= icmp_ln79_reg_1290_pp0_iter5_reg;
        icmp_ln84_1_reg_1469 <= icmp_ln84_1_fu_804_p2;
        icmp_ln84_1_reg_1469_pp0_iter4_reg <= icmp_ln84_1_reg_1469;
        icmp_ln84_1_reg_1469_pp0_iter5_reg <= icmp_ln84_1_reg_1469_pp0_iter4_reg;
        icmp_ln84_1_reg_1469_pp0_iter6_reg <= icmp_ln84_1_reg_1469_pp0_iter5_reg;
        icmp_ln84_1_reg_1469_pp0_iter7_reg <= icmp_ln84_1_reg_1469_pp0_iter6_reg;
        icmp_ln86_1_reg_1465 <= icmp_ln86_1_fu_798_p2;
        icmp_ln86_1_reg_1465_pp0_iter4_reg <= icmp_ln86_1_reg_1465;
        icmp_ln86_1_reg_1465_pp0_iter5_reg <= icmp_ln86_1_reg_1465_pp0_iter4_reg;
        icmp_ln86_1_reg_1465_pp0_iter6_reg <= icmp_ln86_1_reg_1465_pp0_iter5_reg;
        icmp_ln86_1_reg_1465_pp0_iter7_reg <= icmp_ln86_1_reg_1465_pp0_iter6_reg;
        icmp_ln87_2_reg_1461 <= icmp_ln87_2_fu_792_p2;
        icmp_ln87_2_reg_1461_pp0_iter4_reg <= icmp_ln87_2_reg_1461;
        icmp_ln87_2_reg_1461_pp0_iter5_reg <= icmp_ln87_2_reg_1461_pp0_iter4_reg;
        icmp_ln87_2_reg_1461_pp0_iter6_reg <= icmp_ln87_2_reg_1461_pp0_iter5_reg;
        icmp_ln87_2_reg_1461_pp0_iter7_reg <= icmp_ln87_2_reg_1461_pp0_iter6_reg;
        icmp_ln87_mid230_reg_1415 <= icmp_ln87_mid230_fu_630_p2;
        icmp_ln87_mid230_reg_1415_pp0_iter4_reg <= icmp_ln87_mid230_reg_1415;
        icmp_ln87_mid230_reg_1415_pp0_iter5_reg <= icmp_ln87_mid230_reg_1415_pp0_iter4_reg;
        icmp_ln87_mid230_reg_1415_pp0_iter6_reg <= icmp_ln87_mid230_reg_1415_pp0_iter5_reg;
        n_mid2_reg_1425 <= n_mid2_fu_664_p3;
        n_mid2_reg_1425_pp0_iter4_reg <= n_mid2_reg_1425;
        n_mid2_reg_1425_pp0_iter5_reg <= n_mid2_reg_1425_pp0_iter4_reg;
        n_mid2_reg_1425_pp0_iter6_reg <= n_mid2_reg_1425_pp0_iter5_reg;
        not_exitcond_flatten33_mid299_reg_1362 <= not_exitcond_flatten33_mid299_fu_423_p2;
        not_exitcond_flatten62_mid21508_reg_1332 <= not_exitcond_flatten62_mid21508_fu_391_p2;
        trunc_ln89_reg_1443 <= trunc_ln89_fu_692_p1;
        trunc_ln89_reg_1443_pp0_iter4_reg <= trunc_ln89_reg_1443;
        trunc_ln89_reg_1443_pp0_iter5_reg <= trunc_ln89_reg_1443_pp0_iter4_reg;
        trunc_ln89_reg_1443_pp0_iter6_reg <= trunc_ln89_reg_1443_pp0_iter5_reg;
        trunc_ln89_reg_1443_pp0_iter7_reg <= trunc_ln89_reg_1443_pp0_iter6_reg;
        trunc_ln95_reg_1438 <= trunc_ln95_fu_684_p1;
        trunc_ln95_reg_1438_pp0_iter4_reg <= trunc_ln95_reg_1438;
        trunc_ln95_reg_1438_pp0_iter5_reg <= trunc_ln95_reg_1438_pp0_iter4_reg;
        trunc_ln95_reg_1438_pp0_iter6_reg <= trunc_ln95_reg_1438_pp0_iter5_reg;
        trunc_ln95_reg_1438_pp0_iter7_reg <= trunc_ln95_reg_1438_pp0_iter6_reg;
        xor_ln77_reg_1303_pp0_iter2_reg <= xor_ln77_reg_1303;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln77_3_reg_1315 <= and_ln77_3_fu_308_p2;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        empty_reg_1326 <= empty_fu_314_p2;
        icmp_ln77_reg_1286 <= icmp_ln77_fu_278_p2;
        icmp_ln79_reg_1290 <= icmp_ln79_fu_290_p2;
        icmp_ln81_reg_1310 <= icmp_ln81_fu_302_p2;
        xor_ln77_reg_1303 <= xor_ln77_fu_296_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (or_ln87_2_fu_1090_p2 == 1'd0))) begin
        sext_ln7910_fu_158 <= select_ln79_1_fu_1100_p3;
    end
end

always @ (*) begin
    if (((icmp_ln77_fu_278_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln77_reg_1286 == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_sig_allocacmp_sum_2_load = grp_fu_1183_p3;
    end else begin
        ap_sig_allocacmp_sum_2_load = sum_2_fu_110;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_enable_reg_pp0_iter7 == 1'b1) & (or_ln87_2_fu_1090_p2 == 1'd1))) begin
            ap_sig_allocacmp_sum_2_load_1 = sum_9_mid247_fu_989_p3;
        end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (or_ln87_2_fu_1090_p2 == 1'd0))) begin
            ap_sig_allocacmp_sum_2_load_1 = select_ln79_2_fu_1108_p3;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            ap_sig_allocacmp_sum_2_load_1 = grp_fu_1183_p3;
        end else begin
            ap_sig_allocacmp_sum_2_load_1 = sum_2_fu_110;
        end
    end else begin
        ap_sig_allocacmp_sum_2_load_1 = sum_2_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        input_buf_ce0_local = 1'b1;
    end else begin
        input_buf_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        local_bias_ce0_local = 1'b1;
    end else begin
        local_bias_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        local_weights_ce0_local = 1'b1;
    end else begin
        local_weights_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        output_buf_ce0_local = 1'b1;
    end else begin
        output_buf_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln84_1_reg_1469_pp0_iter7_reg == 1'd1) & (icmp_ln86_1_reg_1465_pp0_iter7_reg == 1'd1) & (icmp_ln87_2_reg_1461_pp0_iter7_reg == 1'd1))) begin
        output_buf_we0_local = 1'b1;
    end else begin
        output_buf_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln77_1_fu_284_p2 = (indvar_flatten151_fu_154 + 22'd1);

assign add_ln77_fu_502_p2 = (oc_fu_150 + 6'd1);

assign add_ln79_1_fu_334_p2 = (indvar_flatten100_fu_146 + 18'd1);

assign add_ln79_fu_557_p2 = (select_ln77_fu_508_p3 + 5'd1);

assign add_ln81_1_fu_320_p2 = (indvar_flatten60_fu_138 + 14'd1);

assign add_ln81_fu_582_p2 = (j_mid268_fu_563_p3 + 5'd1);

assign add_ln83_fu_877_p2 = (tmp_52_fu_859_p3 + zext_ln83_fu_873_p1);

assign add_ln84_1_fu_460_p2 = (indvar_flatten31_fu_130 + 10'd1);

assign add_ln84_fu_602_p2 = (ic_mid239_fu_588_p3 + 6'd1);

assign add_ln86_1_fu_446_p2 = (indvar_flatten_fu_122 + 4'd1);

assign add_ln86_fu_643_p2 = (m_mid222_fu_608_p3 + 2'd1);

assign add_ln87_fu_786_p2 = (n_mid2_fu_664_p3 + 2'd1);

assign add_ln90_18_fu_760_p2 = (sub_ln90_fu_750_p2 + zext_ln90_16_fu_756_p1);

assign add_ln90_19_fu_780_p2 = (add_ln90_22_fu_722_p2 + zext_ln90_18_fu_776_p1);

assign add_ln90_20_fu_886_p2 = (sub_ln90_3_fu_853_p2 + zext_ln90_19_fu_883_p1);

assign add_ln90_21_fu_910_p2 = (add_ln83_fu_877_p2 + zext_ln90_21_fu_906_p1);

assign add_ln90_22_fu_722_p2 = (zext_ln90_fu_708_p1 + zext_ln90_14_fu_718_p1);

assign add_ln90_3_fu_900_p2 = (zext_ln89_fu_840_p1 + zext_ln90_5_fu_897_p1);

assign add_ln90_fu_770_p2 = (zext_ln81_fu_688_p1 + zext_ln90_4_fu_766_p1);

assign and_ln77_1_fu_375_p2 = (xor_ln77_reg_1303 & icmp_ln86_fu_369_p2);

assign and_ln77_2_fu_402_p2 = (xor_ln77_reg_1303 & icmp_ln84_fu_380_p2);

assign and_ln77_3_fu_308_p2 = (xor_ln77_fu_296_p2 & icmp_ln81_fu_302_p2);

assign and_ln77_fu_545_p2 = (xor_ln77_reg_1303_pp0_iter2_reg & icmp_ln87_fu_539_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign empty_63_fu_413_p2 = (exitcond_flatten33_mid299_fu_407_p2 | and_ln77_3_reg_1315);

assign empty_64_fu_418_p2 = (icmp_ln79_reg_1290 | empty_63_fu_413_p2);

assign empty_65_fu_435_p2 = (exitcond_flatten_mid259_fu_429_p2 | exitcond_flatten33_mid299_fu_407_p2);

assign empty_66_fu_441_p2 = (empty_reg_1326 | empty_65_fu_435_p2);

assign empty_67_fu_649_p2 = (exitcond_flatten_mid259_reg_1367 | empty_63_reg_1352);

assign empty_68_fu_653_p2 = (icmp_ln87_mid230_fu_630_p2 | empty_67_fu_649_p2);

assign empty_69_fu_659_p2 = (icmp_ln79_reg_1290_pp0_iter2_reg | empty_68_fu_653_p2);

assign empty_70_fu_680_p1 = select_ln77_1_fu_550_p3[4:0];

assign empty_fu_314_p2 = (icmp_ln79_fu_290_p2 | and_ln77_3_fu_308_p2);

assign exitcond_flatten33_mid299_fu_407_p2 = (not_exitcond_flatten62_mid21508_fu_391_p2 & and_ln77_2_fu_402_p2);

assign exitcond_flatten62_not9_fu_386_p2 = (icmp_ln81_reg_1310 ^ 1'd1);

assign exitcond_flatten_mid259_fu_429_p2 = (not_exitcond_flatten33_mid299_fu_423_p2 & exitcond_flatten_mid295_fu_396_p2);

assign exitcond_flatten_mid295_fu_396_p2 = (not_exitcond_flatten62_mid21508_fu_391_p2 & and_ln77_1_fu_375_p2);

assign exitcond_flatten_mid295_not_fu_615_p2 = (exitcond_flatten_mid295_reg_1337 ^ 1'd1);

assign first_iter_158_fu_533_p2 = ((m_fu_118 == 2'd0) ? 1'b1 : 1'b0);

assign first_iter_1_mid1_fu_1035_p2 = ((add_ln86_reg_1420_pp0_iter6_reg == 2'd0) ? 1'b1 : 1'b0);

assign first_iter_1_mid228_fu_1030_p2 = (first_iter_1_mid253_fu_1013_p2 | exitcond_flatten_mid259_reg_1367_pp0_iter6_reg);

assign first_iter_1_mid253_fu_1013_p2 = (first_iter_1_mid289_fu_984_p2 | exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg);

assign first_iter_1_mid289_fu_984_p2 = (or_ln77_3_fu_951_p2 | and_ln77_3_reg_1315_pp0_iter6_reg);

assign first_iter_1_mid2_fu_1040_p3 = ((icmp_ln87_mid230_reg_1415_pp0_iter6_reg[0:0] == 1'b1) ? first_iter_1_mid1_fu_1035_p2 : first_iter_1_mid228_fu_1030_p2);

assign first_iter_256_fu_527_p2 = ((ic_fu_126 == 6'd0) ? 1'b1 : 1'b0);

assign first_iter_2_mid1_fu_1018_p2 = ((add_ln84_reg_1410_pp0_iter6_reg == 6'd0) ? 1'b1 : 1'b0);

assign first_iter_2_mid249_fu_1008_p2 = (first_iter_2_mid285_fu_979_p2 | exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg);

assign first_iter_2_mid285_fu_979_p2 = (or_ln77_2_fu_947_p2 | and_ln77_3_reg_1315_pp0_iter6_reg);

assign first_iter_2_mid2_fu_1023_p3 = ((exitcond_flatten_mid259_reg_1367_pp0_iter6_reg[0:0] == 1'b1) ? first_iter_2_mid1_fu_1018_p2 : first_iter_2_mid249_fu_1008_p2);

assign first_iter_354_fu_521_p2 = ((j_fu_134 == 5'd0) ? 1'b1 : 1'b0);

assign first_iter_3_mid1_fu_996_p2 = ((add_ln81_reg_1405_pp0_iter6_reg == 5'd0) ? 1'b1 : 1'b0);

assign first_iter_3_mid281_fu_974_p2 = (or_ln77_1_fu_943_p2 | and_ln77_3_reg_1315_pp0_iter6_reg);

assign first_iter_3_mid2_fu_1001_p3 = ((exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg[0:0] == 1'b1) ? first_iter_3_mid1_fu_996_p2 : first_iter_3_mid281_fu_974_p2);

assign first_iter_451_fu_515_p2 = ((i_fu_142 == 5'd0) ? 1'b1 : 1'b0);

assign first_iter_4_mid1_fu_962_p2 = ((add_ln79_reg_1400_pp0_iter6_reg == 5'd0) ? 1'b1 : 1'b0);

assign first_iter_4_mid2_fu_967_p3 = ((and_ln77_3_reg_1315_pp0_iter6_reg[0:0] == 1'b1) ? first_iter_4_mid1_fu_962_p2 : or_ln77_fu_939_p2);

assign ic_mid239_fu_588_p3 = ((empty_64_reg_1357[0:0] == 1'b1) ? 6'd0 : ic_fu_126);

assign icmp_ln77_fu_278_p2 = ((indvar_flatten151_fu_154 == 22'd2359296) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_290_p2 = ((indvar_flatten100_fu_146 == 18'd73728) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_302_p2 = ((indvar_flatten60_fu_138 == 14'd4608) ? 1'b1 : 1'b0);

assign icmp_ln84_1_fu_804_p2 = ((select_ln84_fu_636_p3 == 6'd31) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_380_p2 = ((indvar_flatten31_fu_130 == 10'd288) ? 1'b1 : 1'b0);

assign icmp_ln86_1_fu_798_p2 = ((select_ln86_fu_672_p3 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_369_p2 = ((indvar_flatten_fu_122 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln87_1_fu_1055_p2 = ((n_mid2_reg_1425_pp0_iter6_reg != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_2_fu_792_p2 = ((add_ln87_fu_786_p2 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_539_p2 = ((n_fu_114 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln87_mid230_fu_630_p2 = (not_exitcond_flatten_mid259_fu_620_p2 & icmp_ln87_mid255_fu_625_p2);

assign icmp_ln87_mid255_fu_625_p2 = (not_exitcond_flatten33_mid299_reg_1362 & icmp_ln87_mid291_fu_570_p2);

assign icmp_ln87_mid291_fu_570_p2 = (not_exitcond_flatten62_mid21508_reg_1332 & and_ln77_fu_545_p2);

assign icmp_ln95_fu_1152_p2 = (($signed(result_fu_1134_p4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign input_buf_address0 = zext_ln90_22_fu_916_p1;

assign input_buf_ce0 = input_buf_ce0_local;

assign j_mid268_fu_563_p3 = ((empty_reg_1326_pp0_iter2_reg[0:0] == 1'b1) ? 5'd0 : j_fu_134);

assign local_bias_address0 = oc_cast_cast_fu_929_p1;

assign local_bias_ce0 = local_bias_ce0_local;

assign local_weights_address0 = zext_ln90_20_fu_892_p1;

assign local_weights_ce0 = local_weights_ce0_local;

assign m_mid222_fu_608_p3 = ((empty_66_reg_1375[0:0] == 1'b1) ? 2'd0 : m_fu_118);

assign n_mid2_fu_664_p3 = ((empty_69_fu_659_p2[0:0] == 1'b1) ? 2'd0 : n_fu_114);

assign not_exitcond_flatten33_mid299_fu_423_p2 = (exitcond_flatten33_mid299_fu_407_p2 ^ 1'd1);

assign not_exitcond_flatten62_mid21508_fu_391_p2 = (icmp_ln79_reg_1290 | exitcond_flatten62_not9_fu_386_p2);

assign not_exitcond_flatten_mid259_fu_620_p2 = (exitcond_flatten_mid295_not_fu_615_p2 | exitcond_flatten33_mid299_reg_1342);

assign oc_cast_cast_fu_929_p1 = empty_70_reg_1432_pp0_iter5_reg;

assign or_ln77_1_fu_943_p2 = (icmp_ln79_reg_1290_pp0_iter6_reg | first_iter_354_reg_1385_pp0_iter6_reg);

assign or_ln77_2_fu_947_p2 = (icmp_ln79_reg_1290_pp0_iter6_reg | first_iter_256_reg_1390_pp0_iter6_reg);

assign or_ln77_3_fu_951_p2 = (icmp_ln79_reg_1290_pp0_iter6_reg | first_iter_158_reg_1395_pp0_iter6_reg);

assign or_ln77_fu_939_p2 = (icmp_ln79_reg_1290_pp0_iter6_reg | first_iter_451_reg_1380_pp0_iter6_reg);

assign or_ln87_1_fu_1078_p2 = (xor_ln87_1_fu_1072_p2 | or_ln87_fu_1066_p2);

assign or_ln87_2_fu_1090_p2 = (xor_ln87_2_fu_1084_p2 | or_ln87_1_fu_1078_p2);

assign or_ln87_fu_1066_p2 = (xor_ln87_fu_1060_p2 | icmp_ln87_1_fu_1055_p2);

assign output_buf_address0 = zext_ln95_fu_1174_p1;

assign output_buf_ce0 = output_buf_ce0_local;

assign output_buf_d0 = select_ln95_fu_1158_p3;

assign output_buf_we0 = output_buf_we0_local;

assign p_shl3_fu_846_p3 = {{add_ln90_18_reg_1449}, {2'd0}};

assign p_shl_fu_740_p4 = {{{empty_70_fu_680_p1}, {trunc_ln90_fu_696_p1}}, {2'd0}};

assign result_fu_1134_p1 = grp_fu_1183_p3;

assign result_fu_1134_p4 = {{result_fu_1134_p1[27:12]}};

assign select_ln77_1_fu_550_p3 = ((icmp_ln79_reg_1290_pp0_iter2_reg[0:0] == 1'b1) ? add_ln77_fu_502_p2 : oc_fu_150);

assign select_ln77_fu_508_p3 = ((icmp_ln79_reg_1290_pp0_iter2_reg[0:0] == 1'b1) ? 5'd0 : i_fu_142);

assign select_ln79_1_fu_1100_p3 = ((first_iter_4_mid2_fu_967_p3[0:0] == 1'b1) ? sext_ln79_fu_1096_p1 : sext_ln7910_fu_158);

assign select_ln79_2_fu_1108_p3 = ((first_iter_4_mid2_fu_967_p3[0:0] == 1'b1) ? sext_ln79_fu_1096_p1 : sum_9_mid247_fu_989_p3);

assign select_ln79_3_fu_340_p3 = ((icmp_ln79_fu_290_p2[0:0] == 1'b1) ? 18'd1 : add_ln79_1_fu_334_p2);

assign select_ln79_fu_575_p3 = ((and_ln77_3_reg_1315_pp0_iter2_reg[0:0] == 1'b1) ? add_ln79_fu_557_p2 : select_ln77_fu_508_p3);

assign select_ln81_1_fu_326_p3 = ((empty_fu_314_p2[0:0] == 1'b1) ? 14'd1 : add_ln81_1_fu_320_p2);

assign select_ln81_fu_595_p3 = ((exitcond_flatten33_mid299_reg_1342[0:0] == 1'b1) ? add_ln81_fu_582_p2 : j_mid268_fu_563_p3);

assign select_ln84_1_fu_466_p3 = ((empty_64_fu_418_p2[0:0] == 1'b1) ? 10'd1 : add_ln84_1_fu_460_p2);

assign select_ln84_fu_636_p3 = ((exitcond_flatten_mid259_reg_1367[0:0] == 1'b1) ? add_ln84_fu_602_p2 : ic_mid239_fu_588_p3);

assign select_ln86_1_fu_452_p3 = ((empty_66_fu_441_p2[0:0] == 1'b1) ? 4'd1 : add_ln86_1_fu_446_p2);

assign select_ln86_fu_672_p3 = ((icmp_ln87_mid230_fu_630_p2[0:0] == 1'b1) ? add_ln86_fu_643_p2 : m_mid222_fu_608_p3);

assign select_ln95_fu_1158_p3 = ((icmp_ln95_fu_1152_p2[0:0] == 1'b1) ? trunc_ln94_2_fu_1143_p4 : 15'd0);

assign sext_ln79_fu_1096_p1 = $signed(sum_fu_1047_p3);

assign shl_ln90_fu_712_p2 = select_ln84_fu_636_p3 << 6'd1;

assign sub_ln90_3_fu_853_p2 = (p_shl3_fu_846_p3 - zext_ln90_17_fu_843_p1);

assign sub_ln90_fu_750_p2 = (p_shl_fu_740_p4 - zext_ln90_15_fu_736_p1);

assign sum_9_mid247_fu_989_p3 = ((exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg[0:0] == 1'b1) ? sext_ln7910_fu_158 : sum_9_mid279_fu_955_p3);

assign sum_9_mid279_fu_955_p3 = ((and_ln77_3_reg_1315_pp0_iter6_reg[0:0] == 1'b1) ? sext_ln7910_fu_158 : ap_sig_allocacmp_sum_2_load);

assign sum_fu_1047_p3 = {{local_bias_q0}, {12'd0}};

assign tmp_39_fu_1167_p4 = {{{empty_70_reg_1432_pp0_iter7_reg}, {trunc_ln95_reg_1438_pp0_iter7_reg}}, {trunc_ln89_reg_1443_pp0_iter7_reg}};

assign tmp_52_fu_859_p3 = {{add_ln90_19_reg_1455}, {4'd0}};

assign tmp_53_fu_866_p3 = {{add_ln90_19_reg_1455}, {1'd0}};

assign tmp_fu_700_p3 = {{trunc_ln90_fu_696_p1}, {4'd0}};

assign tmp_s_fu_728_p3 = {{empty_70_fu_680_p1}, {trunc_ln90_fu_696_p1}};

assign trunc_ln89_fu_692_p1 = select_ln81_fu_595_p3[3:0];

assign trunc_ln90_fu_696_p1 = select_ln84_fu_636_p3[4:0];

assign trunc_ln94_2_fu_1143_p1 = grp_fu_1183_p3;

assign trunc_ln94_2_fu_1143_p4 = {{trunc_ln94_2_fu_1143_p1[26:12]}};

assign trunc_ln95_fu_684_p1 = select_ln79_fu_575_p3[3:0];

assign xor_ln77_fu_296_p2 = (icmp_ln79_fu_290_p2 ^ 1'd1);

assign xor_ln87_1_fu_1072_p2 = (first_iter_2_mid2_fu_1023_p3 ^ 1'd1);

assign xor_ln87_2_fu_1084_p2 = (first_iter_3_mid2_fu_1001_p3 ^ 1'd1);

assign xor_ln87_fu_1060_p2 = (first_iter_1_mid2_fu_1040_p3 ^ 1'd1);

assign zext_ln81_fu_688_p1 = trunc_ln95_fu_684_p1;

assign zext_ln83_fu_873_p1 = tmp_53_fu_866_p3;

assign zext_ln89_fu_840_p1 = trunc_ln89_reg_1443;

assign zext_ln90_14_fu_718_p1 = shl_ln90_fu_712_p2;

assign zext_ln90_15_fu_736_p1 = tmp_s_fu_728_p3;

assign zext_ln90_16_fu_756_p1 = select_ln86_fu_672_p3;

assign zext_ln90_17_fu_843_p1 = add_ln90_18_reg_1449;

assign zext_ln90_18_fu_776_p1 = add_ln90_fu_770_p2;

assign zext_ln90_19_fu_883_p1 = n_mid2_reg_1425;

assign zext_ln90_20_fu_892_p1 = add_ln90_20_fu_886_p2;

assign zext_ln90_21_fu_906_p1 = add_ln90_3_fu_900_p2;

assign zext_ln90_22_fu_916_p1 = add_ln90_21_fu_910_p2;

assign zext_ln90_4_fu_766_p1 = select_ln86_fu_672_p3;

assign zext_ln90_5_fu_897_p1 = n_mid2_reg_1425;

assign zext_ln90_fu_708_p1 = tmp_fu_700_p3;

assign zext_ln95_fu_1174_p1 = tmp_39_fu_1167_p4;

endmodule //cnn_top_convolution_func_1
