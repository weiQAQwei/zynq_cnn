-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_top_compute_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem2_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_0_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_0_WREADY : IN STD_LOGIC;
    m_axi_gmem2_0_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_gmem2_0_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_0_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_RVALID : IN STD_LOGIC;
    m_axi_gmem2_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_0_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_gmem2_0_RLAST : IN STD_LOGIC;
    m_axi_gmem2_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
    m_axi_gmem2_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_BVALID : IN STD_LOGIC;
    m_axi_gmem2_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    this_weights : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_0_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_0_WREADY : IN STD_LOGIC;
    m_axi_gmem3_0_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_gmem3_0_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_0_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem3_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_RVALID : IN STD_LOGIC;
    m_axi_gmem3_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_0_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_gmem3_0_RLAST : IN STD_LOGIC;
    m_axi_gmem3_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
    m_axi_gmem3_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_BVALID : IN STD_LOGIC;
    m_axi_gmem3_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem3_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    this_bias : IN STD_LOGIC_VECTOR (31 downto 0);
    input_s_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    input_s_empty_n : IN STD_LOGIC;
    input_s_read : OUT STD_LOGIC;
    input_s_num_data_valid : IN STD_LOGIC_VECTOR (8 downto 0);
    input_s_fifo_cap : IN STD_LOGIC_VECTOR (8 downto 0);
    conv1_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    conv1_out_full_n : IN STD_LOGIC;
    conv1_out_write : OUT STD_LOGIC;
    conv1_out_num_data_valid : IN STD_LOGIC_VECTOR (13 downto 0);
    conv1_out_fifo_cap : IN STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of cnn_top_compute_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal this_bias_read_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal this_weights_read_reg_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_buf_ce0 : STD_LOGIC;
    signal input_buf_we0 : STD_LOGIC;
    signal input_buf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_buf_1_ce0 : STD_LOGIC;
    signal input_buf_1_we0 : STD_LOGIC;
    signal input_buf_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_buf_2_ce0 : STD_LOGIC;
    signal input_buf_2_we0 : STD_LOGIC;
    signal input_buf_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_buf_3_ce0 : STD_LOGIC;
    signal input_buf_3_we0 : STD_LOGIC;
    signal input_buf_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_buf_4_ce0 : STD_LOGIC;
    signal input_buf_4_we0 : STD_LOGIC;
    signal input_buf_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_5_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_buf_5_ce0 : STD_LOGIC;
    signal input_buf_5_we0 : STD_LOGIC;
    signal input_buf_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_buf_6_ce0 : STD_LOGIC;
    signal input_buf_6_we0 : STD_LOGIC;
    signal input_buf_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_buf_7_ce0 : STD_LOGIC;
    signal input_buf_7_we0 : STD_LOGIC;
    signal input_buf_7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_buf_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_buf_8_ce0 : STD_LOGIC;
    signal input_buf_8_we0 : STD_LOGIC;
    signal input_buf_8_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buf_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal output_buf_ce0 : STD_LOGIC;
    signal output_buf_we0 : STD_LOGIC;
    signal output_buf_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal local_weights_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_weights_ce0 : STD_LOGIC;
    signal local_weights_we0 : STD_LOGIC;
    signal local_weights_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_weights_1_ce0 : STD_LOGIC;
    signal local_weights_1_we0 : STD_LOGIC;
    signal local_weights_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_weights_2_ce0 : STD_LOGIC;
    signal local_weights_2_we0 : STD_LOGIC;
    signal local_weights_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_weights_3_ce0 : STD_LOGIC;
    signal local_weights_3_we0 : STD_LOGIC;
    signal local_weights_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_weights_4_ce0 : STD_LOGIC;
    signal local_weights_4_we0 : STD_LOGIC;
    signal local_weights_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_weights_5_ce0 : STD_LOGIC;
    signal local_weights_5_we0 : STD_LOGIC;
    signal local_weights_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_weights_6_ce0 : STD_LOGIC;
    signal local_weights_6_we0 : STD_LOGIC;
    signal local_weights_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_weights_7_ce0 : STD_LOGIC;
    signal local_weights_7_we0 : STD_LOGIC;
    signal local_weights_7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_weights_8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_weights_8_ce0 : STD_LOGIC;
    signal local_weights_8_we0 : STD_LOGIC;
    signal local_weights_8_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal local_bias_ce0 : STD_LOGIC;
    signal local_bias_we0 : STD_LOGIC;
    signal local_bias_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_ap_start : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_ap_done : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_ap_idle : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_ap_ready : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWVALID : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_WVALID : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_WLAST : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARVALID : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_RREADY : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem2_0_BREADY : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWVALID : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_WVALID : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_WLAST : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARVALID : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_RREADY : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_m_axi_gmem3_0_BREADY : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_0_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_0_0_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_0_0_we0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_0_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_0_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_0_1_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_0_1_we0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_0_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_0_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_0_2_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_0_2_we0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_0_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_1_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_1_0_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_1_0_we0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_1_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_1_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_1_1_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_1_1_we0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_1_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_1_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_1_2_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_1_2_we0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_1_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_2_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_2_0_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_2_0_we0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_2_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_2_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_2_1_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_2_1_we0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_2_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_2_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_params_func_2_fu_138_local_weights_2_2_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_2_2_we0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_weights_2_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_params_func_2_fu_138_local_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_load_params_func_2_fu_138_local_bias_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_bias_we0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_local_bias_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_ap_start : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_ap_done : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_ap_idle : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_ap_ready : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_s_read : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_ce0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_we0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_ce0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_we0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_ce0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_we0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_ce0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_we0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_ce0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_we0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_ce0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_we0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_ce0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_we0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_ce0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_we0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_ce0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_we0 : STD_LOGIC;
    signal grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_convolution_func_2_fu_194_ap_start : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_ap_done : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_ap_idle : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_ap_ready : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_input_buf_0_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_fu_194_input_buf_0_0_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_input_buf_0_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_fu_194_input_buf_0_1_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_input_buf_0_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_fu_194_input_buf_0_2_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_input_buf_1_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_fu_194_input_buf_1_0_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_input_buf_1_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_fu_194_input_buf_1_1_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_input_buf_1_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_fu_194_input_buf_1_2_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_input_buf_2_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_fu_194_input_buf_2_0_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_input_buf_2_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_fu_194_input_buf_2_1_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_input_buf_2_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_convolution_func_2_fu_194_input_buf_2_2_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_local_weights_0_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_func_2_fu_194_local_weights_0_0_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_local_weights_0_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_func_2_fu_194_local_weights_0_1_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_local_weights_0_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_func_2_fu_194_local_weights_0_2_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_local_weights_1_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_func_2_fu_194_local_weights_1_0_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_local_weights_1_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_func_2_fu_194_local_weights_1_1_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_local_weights_1_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_func_2_fu_194_local_weights_1_2_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_local_weights_2_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_func_2_fu_194_local_weights_2_0_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_local_weights_2_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_func_2_fu_194_local_weights_2_1_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_local_weights_2_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_func_2_fu_194_local_weights_2_2_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_local_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_func_2_fu_194_local_bias_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_output_buf_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_convolution_func_2_fu_194_output_buf_ce0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_output_buf_we0 : STD_LOGIC;
    signal grp_convolution_func_2_fu_194_output_buf_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_write_output_func_2_fu_218_ap_start : STD_LOGIC;
    signal grp_write_output_func_2_fu_218_ap_done : STD_LOGIC;
    signal grp_write_output_func_2_fu_218_ap_idle : STD_LOGIC;
    signal grp_write_output_func_2_fu_218_ap_ready : STD_LOGIC;
    signal grp_write_output_func_2_fu_218_conv1_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_write_output_func_2_fu_218_conv1_out_write : STD_LOGIC;
    signal grp_write_output_func_2_fu_218_output_buf_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_write_output_func_2_fu_218_output_buf_ce0 : STD_LOGIC;
    signal grp_load_params_func_2_fu_138_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call26 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_prepare_input_buf_func_2_fu_170_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call27 : BOOLEAN;
    signal grp_convolution_func_2_fu_194_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_write_output_func_2_fu_218_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_top_load_params_func_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem2_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_0_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_0_WREADY : IN STD_LOGIC;
        m_axi_gmem2_0_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem2_0_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_0_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_RVALID : IN STD_LOGIC;
        m_axi_gmem2_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_0_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem2_0_RLAST : IN STD_LOGIC;
        m_axi_gmem2_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_gmem2_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_BVALID : IN STD_LOGIC;
        m_axi_gmem2_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        this_weights : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_0_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_0_WREADY : IN STD_LOGIC;
        m_axi_gmem3_0_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem3_0_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_0_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_RVALID : IN STD_LOGIC;
        m_axi_gmem3_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_0_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem3_0_RLAST : IN STD_LOGIC;
        m_axi_gmem3_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_gmem3_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_BVALID : IN STD_LOGIC;
        m_axi_gmem3_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        this_bias : IN STD_LOGIC_VECTOR (31 downto 0);
        local_weights_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_0_0_ce0 : OUT STD_LOGIC;
        local_weights_0_0_we0 : OUT STD_LOGIC;
        local_weights_0_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        local_weights_0_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_0_1_ce0 : OUT STD_LOGIC;
        local_weights_0_1_we0 : OUT STD_LOGIC;
        local_weights_0_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        local_weights_0_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_0_2_ce0 : OUT STD_LOGIC;
        local_weights_0_2_we0 : OUT STD_LOGIC;
        local_weights_0_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        local_weights_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_1_0_ce0 : OUT STD_LOGIC;
        local_weights_1_0_we0 : OUT STD_LOGIC;
        local_weights_1_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        local_weights_1_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_1_1_ce0 : OUT STD_LOGIC;
        local_weights_1_1_we0 : OUT STD_LOGIC;
        local_weights_1_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        local_weights_1_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_1_2_ce0 : OUT STD_LOGIC;
        local_weights_1_2_we0 : OUT STD_LOGIC;
        local_weights_1_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        local_weights_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_2_0_ce0 : OUT STD_LOGIC;
        local_weights_2_0_we0 : OUT STD_LOGIC;
        local_weights_2_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        local_weights_2_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_2_1_ce0 : OUT STD_LOGIC;
        local_weights_2_1_we0 : OUT STD_LOGIC;
        local_weights_2_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        local_weights_2_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_2_2_ce0 : OUT STD_LOGIC;
        local_weights_2_2_we0 : OUT STD_LOGIC;
        local_weights_2_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        local_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_bias_ce0 : OUT STD_LOGIC;
        local_bias_we0 : OUT STD_LOGIC;
        local_bias_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component cnn_top_prepare_input_buf_func_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_s_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        input_s_empty_n : IN STD_LOGIC;
        input_s_read : OUT STD_LOGIC;
        input_s_num_data_valid : IN STD_LOGIC_VECTOR (8 downto 0);
        input_s_fifo_cap : IN STD_LOGIC_VECTOR (8 downto 0);
        input_buf_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_0_0_ce0 : OUT STD_LOGIC;
        input_buf_0_0_we0 : OUT STD_LOGIC;
        input_buf_0_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buf_0_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_0_1_ce0 : OUT STD_LOGIC;
        input_buf_0_1_we0 : OUT STD_LOGIC;
        input_buf_0_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buf_0_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_0_2_ce0 : OUT STD_LOGIC;
        input_buf_0_2_we0 : OUT STD_LOGIC;
        input_buf_0_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buf_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_1_0_ce0 : OUT STD_LOGIC;
        input_buf_1_0_we0 : OUT STD_LOGIC;
        input_buf_1_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buf_1_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_1_1_ce0 : OUT STD_LOGIC;
        input_buf_1_1_we0 : OUT STD_LOGIC;
        input_buf_1_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buf_1_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_1_2_ce0 : OUT STD_LOGIC;
        input_buf_1_2_we0 : OUT STD_LOGIC;
        input_buf_1_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buf_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_2_0_ce0 : OUT STD_LOGIC;
        input_buf_2_0_we0 : OUT STD_LOGIC;
        input_buf_2_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buf_2_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_2_1_ce0 : OUT STD_LOGIC;
        input_buf_2_1_we0 : OUT STD_LOGIC;
        input_buf_2_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_buf_2_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_2_2_ce0 : OUT STD_LOGIC;
        input_buf_2_2_we0 : OUT STD_LOGIC;
        input_buf_2_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component cnn_top_convolution_func_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_buf_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_0_0_ce0 : OUT STD_LOGIC;
        input_buf_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_0_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_0_1_ce0 : OUT STD_LOGIC;
        input_buf_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_0_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_0_2_ce0 : OUT STD_LOGIC;
        input_buf_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_1_0_ce0 : OUT STD_LOGIC;
        input_buf_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_1_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_1_1_ce0 : OUT STD_LOGIC;
        input_buf_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_1_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_1_2_ce0 : OUT STD_LOGIC;
        input_buf_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_2_0_ce0 : OUT STD_LOGIC;
        input_buf_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_2_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_2_1_ce0 : OUT STD_LOGIC;
        input_buf_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        input_buf_2_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_buf_2_2_ce0 : OUT STD_LOGIC;
        input_buf_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        local_weights_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_0_0_ce0 : OUT STD_LOGIC;
        local_weights_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        local_weights_0_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_0_1_ce0 : OUT STD_LOGIC;
        local_weights_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        local_weights_0_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_0_2_ce0 : OUT STD_LOGIC;
        local_weights_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        local_weights_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_1_0_ce0 : OUT STD_LOGIC;
        local_weights_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        local_weights_1_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_1_1_ce0 : OUT STD_LOGIC;
        local_weights_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        local_weights_1_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_1_2_ce0 : OUT STD_LOGIC;
        local_weights_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        local_weights_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_2_0_ce0 : OUT STD_LOGIC;
        local_weights_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        local_weights_2_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_2_1_ce0 : OUT STD_LOGIC;
        local_weights_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        local_weights_2_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_weights_2_2_ce0 : OUT STD_LOGIC;
        local_weights_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        local_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        local_bias_ce0 : OUT STD_LOGIC;
        local_bias_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_buf_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        output_buf_ce0 : OUT STD_LOGIC;
        output_buf_we0 : OUT STD_LOGIC;
        output_buf_d0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component cnn_top_write_output_func_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv1_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv1_out_full_n : IN STD_LOGIC;
        conv1_out_write : OUT STD_LOGIC;
        conv1_out_num_data_valid : IN STD_LOGIC_VECTOR (13 downto 0);
        conv1_out_fifo_cap : IN STD_LOGIC_VECTOR (13 downto 0);
        output_buf_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        output_buf_ce0 : OUT STD_LOGIC;
        output_buf_q0 : IN STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component cnn_top_compute_4_input_buf_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component cnn_top_compute_4_output_buf_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    input_buf_U : component cnn_top_compute_4_input_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_address0,
        ce0 => input_buf_ce0,
        we0 => input_buf_we0,
        d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_d0,
        q0 => input_buf_q0);

    input_buf_1_U : component cnn_top_compute_4_input_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_1_address0,
        ce0 => input_buf_1_ce0,
        we0 => input_buf_1_we0,
        d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_d0,
        q0 => input_buf_1_q0);

    input_buf_2_U : component cnn_top_compute_4_input_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_2_address0,
        ce0 => input_buf_2_ce0,
        we0 => input_buf_2_we0,
        d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_d0,
        q0 => input_buf_2_q0);

    input_buf_3_U : component cnn_top_compute_4_input_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_3_address0,
        ce0 => input_buf_3_ce0,
        we0 => input_buf_3_we0,
        d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_d0,
        q0 => input_buf_3_q0);

    input_buf_4_U : component cnn_top_compute_4_input_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_4_address0,
        ce0 => input_buf_4_ce0,
        we0 => input_buf_4_we0,
        d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_d0,
        q0 => input_buf_4_q0);

    input_buf_5_U : component cnn_top_compute_4_input_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_5_address0,
        ce0 => input_buf_5_ce0,
        we0 => input_buf_5_we0,
        d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_d0,
        q0 => input_buf_5_q0);

    input_buf_6_U : component cnn_top_compute_4_input_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_6_address0,
        ce0 => input_buf_6_ce0,
        we0 => input_buf_6_we0,
        d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_d0,
        q0 => input_buf_6_q0);

    input_buf_7_U : component cnn_top_compute_4_input_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_7_address0,
        ce0 => input_buf_7_ce0,
        we0 => input_buf_7_we0,
        d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_d0,
        q0 => input_buf_7_q0);

    input_buf_8_U : component cnn_top_compute_4_input_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_buf_8_address0,
        ce0 => input_buf_8_ce0,
        we0 => input_buf_8_we0,
        d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_d0,
        q0 => input_buf_8_q0);

    output_buf_U : component cnn_top_compute_4_output_buf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 15,
        AddressRange => 8192,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_buf_address0,
        ce0 => output_buf_ce0,
        we0 => output_buf_we0,
        d0 => grp_convolution_func_2_fu_194_output_buf_d0,
        q0 => output_buf_q0);

    local_weights_U : component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_weights_address0,
        ce0 => local_weights_ce0,
        we0 => local_weights_we0,
        d0 => grp_load_params_func_2_fu_138_local_weights_0_0_d0,
        q0 => local_weights_q0);

    local_weights_1_U : component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_weights_1_address0,
        ce0 => local_weights_1_ce0,
        we0 => local_weights_1_we0,
        d0 => grp_load_params_func_2_fu_138_local_weights_0_1_d0,
        q0 => local_weights_1_q0);

    local_weights_2_U : component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_weights_2_address0,
        ce0 => local_weights_2_ce0,
        we0 => local_weights_2_we0,
        d0 => grp_load_params_func_2_fu_138_local_weights_0_2_d0,
        q0 => local_weights_2_q0);

    local_weights_3_U : component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_weights_3_address0,
        ce0 => local_weights_3_ce0,
        we0 => local_weights_3_we0,
        d0 => grp_load_params_func_2_fu_138_local_weights_1_0_d0,
        q0 => local_weights_3_q0);

    local_weights_4_U : component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_weights_4_address0,
        ce0 => local_weights_4_ce0,
        we0 => local_weights_4_we0,
        d0 => grp_load_params_func_2_fu_138_local_weights_1_1_d0,
        q0 => local_weights_4_q0);

    local_weights_5_U : component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_weights_5_address0,
        ce0 => local_weights_5_ce0,
        we0 => local_weights_5_we0,
        d0 => grp_load_params_func_2_fu_138_local_weights_1_2_d0,
        q0 => local_weights_5_q0);

    local_weights_6_U : component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_weights_6_address0,
        ce0 => local_weights_6_ce0,
        we0 => local_weights_6_we0,
        d0 => grp_load_params_func_2_fu_138_local_weights_2_0_d0,
        q0 => local_weights_6_q0);

    local_weights_7_U : component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_weights_7_address0,
        ce0 => local_weights_7_ce0,
        we0 => local_weights_7_we0,
        d0 => grp_load_params_func_2_fu_138_local_weights_2_1_d0,
        q0 => local_weights_7_q0);

    local_weights_8_U : component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_weights_8_address0,
        ce0 => local_weights_8_ce0,
        we0 => local_weights_8_we0,
        d0 => grp_load_params_func_2_fu_138_local_weights_2_2_d0,
        q0 => local_weights_8_q0);

    local_bias_U : component cnn_top_compute_4_local_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_bias_address0,
        ce0 => local_bias_ce0,
        we0 => local_bias_we0,
        d0 => grp_load_params_func_2_fu_138_local_bias_d0,
        q0 => local_bias_q0);

    grp_load_params_func_2_fu_138 : component cnn_top_load_params_func_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_params_func_2_fu_138_ap_start,
        ap_done => grp_load_params_func_2_fu_138_ap_done,
        ap_idle => grp_load_params_func_2_fu_138_ap_idle,
        ap_ready => grp_load_params_func_2_fu_138_ap_ready,
        m_axi_gmem2_0_AWVALID => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWVALID,
        m_axi_gmem2_0_AWREADY => ap_const_logic_0,
        m_axi_gmem2_0_AWADDR => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWADDR,
        m_axi_gmem2_0_AWID => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWID,
        m_axi_gmem2_0_AWLEN => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWLEN,
        m_axi_gmem2_0_AWSIZE => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWSIZE,
        m_axi_gmem2_0_AWBURST => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWBURST,
        m_axi_gmem2_0_AWLOCK => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWLOCK,
        m_axi_gmem2_0_AWCACHE => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWCACHE,
        m_axi_gmem2_0_AWPROT => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWPROT,
        m_axi_gmem2_0_AWQOS => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWQOS,
        m_axi_gmem2_0_AWREGION => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWREGION,
        m_axi_gmem2_0_AWUSER => grp_load_params_func_2_fu_138_m_axi_gmem2_0_AWUSER,
        m_axi_gmem2_0_WVALID => grp_load_params_func_2_fu_138_m_axi_gmem2_0_WVALID,
        m_axi_gmem2_0_WREADY => ap_const_logic_0,
        m_axi_gmem2_0_WDATA => grp_load_params_func_2_fu_138_m_axi_gmem2_0_WDATA,
        m_axi_gmem2_0_WSTRB => grp_load_params_func_2_fu_138_m_axi_gmem2_0_WSTRB,
        m_axi_gmem2_0_WLAST => grp_load_params_func_2_fu_138_m_axi_gmem2_0_WLAST,
        m_axi_gmem2_0_WID => grp_load_params_func_2_fu_138_m_axi_gmem2_0_WID,
        m_axi_gmem2_0_WUSER => grp_load_params_func_2_fu_138_m_axi_gmem2_0_WUSER,
        m_axi_gmem2_0_ARVALID => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARVALID,
        m_axi_gmem2_0_ARREADY => m_axi_gmem2_0_ARREADY,
        m_axi_gmem2_0_ARADDR => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARADDR,
        m_axi_gmem2_0_ARID => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARID,
        m_axi_gmem2_0_ARLEN => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARLEN,
        m_axi_gmem2_0_ARSIZE => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARSIZE,
        m_axi_gmem2_0_ARBURST => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARBURST,
        m_axi_gmem2_0_ARLOCK => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARLOCK,
        m_axi_gmem2_0_ARCACHE => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARCACHE,
        m_axi_gmem2_0_ARPROT => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARPROT,
        m_axi_gmem2_0_ARQOS => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARQOS,
        m_axi_gmem2_0_ARREGION => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARREGION,
        m_axi_gmem2_0_ARUSER => grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARUSER,
        m_axi_gmem2_0_RVALID => m_axi_gmem2_0_RVALID,
        m_axi_gmem2_0_RREADY => grp_load_params_func_2_fu_138_m_axi_gmem2_0_RREADY,
        m_axi_gmem2_0_RDATA => m_axi_gmem2_0_RDATA,
        m_axi_gmem2_0_RLAST => m_axi_gmem2_0_RLAST,
        m_axi_gmem2_0_RID => m_axi_gmem2_0_RID,
        m_axi_gmem2_0_RFIFONUM => m_axi_gmem2_0_RFIFONUM,
        m_axi_gmem2_0_RUSER => m_axi_gmem2_0_RUSER,
        m_axi_gmem2_0_RRESP => m_axi_gmem2_0_RRESP,
        m_axi_gmem2_0_BVALID => ap_const_logic_0,
        m_axi_gmem2_0_BREADY => grp_load_params_func_2_fu_138_m_axi_gmem2_0_BREADY,
        m_axi_gmem2_0_BRESP => ap_const_lv2_0,
        m_axi_gmem2_0_BID => ap_const_lv1_0,
        m_axi_gmem2_0_BUSER => ap_const_lv1_0,
        this_weights => this_weights_read_reg_230,
        m_axi_gmem3_0_AWVALID => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWVALID,
        m_axi_gmem3_0_AWREADY => ap_const_logic_0,
        m_axi_gmem3_0_AWADDR => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWADDR,
        m_axi_gmem3_0_AWID => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWID,
        m_axi_gmem3_0_AWLEN => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWLEN,
        m_axi_gmem3_0_AWSIZE => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWSIZE,
        m_axi_gmem3_0_AWBURST => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWBURST,
        m_axi_gmem3_0_AWLOCK => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWLOCK,
        m_axi_gmem3_0_AWCACHE => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWCACHE,
        m_axi_gmem3_0_AWPROT => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWPROT,
        m_axi_gmem3_0_AWQOS => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWQOS,
        m_axi_gmem3_0_AWREGION => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWREGION,
        m_axi_gmem3_0_AWUSER => grp_load_params_func_2_fu_138_m_axi_gmem3_0_AWUSER,
        m_axi_gmem3_0_WVALID => grp_load_params_func_2_fu_138_m_axi_gmem3_0_WVALID,
        m_axi_gmem3_0_WREADY => ap_const_logic_0,
        m_axi_gmem3_0_WDATA => grp_load_params_func_2_fu_138_m_axi_gmem3_0_WDATA,
        m_axi_gmem3_0_WSTRB => grp_load_params_func_2_fu_138_m_axi_gmem3_0_WSTRB,
        m_axi_gmem3_0_WLAST => grp_load_params_func_2_fu_138_m_axi_gmem3_0_WLAST,
        m_axi_gmem3_0_WID => grp_load_params_func_2_fu_138_m_axi_gmem3_0_WID,
        m_axi_gmem3_0_WUSER => grp_load_params_func_2_fu_138_m_axi_gmem3_0_WUSER,
        m_axi_gmem3_0_ARVALID => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARVALID,
        m_axi_gmem3_0_ARREADY => m_axi_gmem3_0_ARREADY,
        m_axi_gmem3_0_ARADDR => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARADDR,
        m_axi_gmem3_0_ARID => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARID,
        m_axi_gmem3_0_ARLEN => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARLEN,
        m_axi_gmem3_0_ARSIZE => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARSIZE,
        m_axi_gmem3_0_ARBURST => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARBURST,
        m_axi_gmem3_0_ARLOCK => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARLOCK,
        m_axi_gmem3_0_ARCACHE => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARCACHE,
        m_axi_gmem3_0_ARPROT => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARPROT,
        m_axi_gmem3_0_ARQOS => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARQOS,
        m_axi_gmem3_0_ARREGION => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARREGION,
        m_axi_gmem3_0_ARUSER => grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARUSER,
        m_axi_gmem3_0_RVALID => m_axi_gmem3_0_RVALID,
        m_axi_gmem3_0_RREADY => grp_load_params_func_2_fu_138_m_axi_gmem3_0_RREADY,
        m_axi_gmem3_0_RDATA => m_axi_gmem3_0_RDATA,
        m_axi_gmem3_0_RLAST => m_axi_gmem3_0_RLAST,
        m_axi_gmem3_0_RID => m_axi_gmem3_0_RID,
        m_axi_gmem3_0_RFIFONUM => m_axi_gmem3_0_RFIFONUM,
        m_axi_gmem3_0_RUSER => m_axi_gmem3_0_RUSER,
        m_axi_gmem3_0_RRESP => m_axi_gmem3_0_RRESP,
        m_axi_gmem3_0_BVALID => ap_const_logic_0,
        m_axi_gmem3_0_BREADY => grp_load_params_func_2_fu_138_m_axi_gmem3_0_BREADY,
        m_axi_gmem3_0_BRESP => ap_const_lv2_0,
        m_axi_gmem3_0_BID => ap_const_lv1_0,
        m_axi_gmem3_0_BUSER => ap_const_lv1_0,
        this_bias => this_bias_read_reg_225,
        local_weights_0_0_address0 => grp_load_params_func_2_fu_138_local_weights_0_0_address0,
        local_weights_0_0_ce0 => grp_load_params_func_2_fu_138_local_weights_0_0_ce0,
        local_weights_0_0_we0 => grp_load_params_func_2_fu_138_local_weights_0_0_we0,
        local_weights_0_0_d0 => grp_load_params_func_2_fu_138_local_weights_0_0_d0,
        local_weights_0_1_address0 => grp_load_params_func_2_fu_138_local_weights_0_1_address0,
        local_weights_0_1_ce0 => grp_load_params_func_2_fu_138_local_weights_0_1_ce0,
        local_weights_0_1_we0 => grp_load_params_func_2_fu_138_local_weights_0_1_we0,
        local_weights_0_1_d0 => grp_load_params_func_2_fu_138_local_weights_0_1_d0,
        local_weights_0_2_address0 => grp_load_params_func_2_fu_138_local_weights_0_2_address0,
        local_weights_0_2_ce0 => grp_load_params_func_2_fu_138_local_weights_0_2_ce0,
        local_weights_0_2_we0 => grp_load_params_func_2_fu_138_local_weights_0_2_we0,
        local_weights_0_2_d0 => grp_load_params_func_2_fu_138_local_weights_0_2_d0,
        local_weights_1_0_address0 => grp_load_params_func_2_fu_138_local_weights_1_0_address0,
        local_weights_1_0_ce0 => grp_load_params_func_2_fu_138_local_weights_1_0_ce0,
        local_weights_1_0_we0 => grp_load_params_func_2_fu_138_local_weights_1_0_we0,
        local_weights_1_0_d0 => grp_load_params_func_2_fu_138_local_weights_1_0_d0,
        local_weights_1_1_address0 => grp_load_params_func_2_fu_138_local_weights_1_1_address0,
        local_weights_1_1_ce0 => grp_load_params_func_2_fu_138_local_weights_1_1_ce0,
        local_weights_1_1_we0 => grp_load_params_func_2_fu_138_local_weights_1_1_we0,
        local_weights_1_1_d0 => grp_load_params_func_2_fu_138_local_weights_1_1_d0,
        local_weights_1_2_address0 => grp_load_params_func_2_fu_138_local_weights_1_2_address0,
        local_weights_1_2_ce0 => grp_load_params_func_2_fu_138_local_weights_1_2_ce0,
        local_weights_1_2_we0 => grp_load_params_func_2_fu_138_local_weights_1_2_we0,
        local_weights_1_2_d0 => grp_load_params_func_2_fu_138_local_weights_1_2_d0,
        local_weights_2_0_address0 => grp_load_params_func_2_fu_138_local_weights_2_0_address0,
        local_weights_2_0_ce0 => grp_load_params_func_2_fu_138_local_weights_2_0_ce0,
        local_weights_2_0_we0 => grp_load_params_func_2_fu_138_local_weights_2_0_we0,
        local_weights_2_0_d0 => grp_load_params_func_2_fu_138_local_weights_2_0_d0,
        local_weights_2_1_address0 => grp_load_params_func_2_fu_138_local_weights_2_1_address0,
        local_weights_2_1_ce0 => grp_load_params_func_2_fu_138_local_weights_2_1_ce0,
        local_weights_2_1_we0 => grp_load_params_func_2_fu_138_local_weights_2_1_we0,
        local_weights_2_1_d0 => grp_load_params_func_2_fu_138_local_weights_2_1_d0,
        local_weights_2_2_address0 => grp_load_params_func_2_fu_138_local_weights_2_2_address0,
        local_weights_2_2_ce0 => grp_load_params_func_2_fu_138_local_weights_2_2_ce0,
        local_weights_2_2_we0 => grp_load_params_func_2_fu_138_local_weights_2_2_we0,
        local_weights_2_2_d0 => grp_load_params_func_2_fu_138_local_weights_2_2_d0,
        local_bias_address0 => grp_load_params_func_2_fu_138_local_bias_address0,
        local_bias_ce0 => grp_load_params_func_2_fu_138_local_bias_ce0,
        local_bias_we0 => grp_load_params_func_2_fu_138_local_bias_we0,
        local_bias_d0 => grp_load_params_func_2_fu_138_local_bias_d0);

    grp_prepare_input_buf_func_2_fu_170 : component cnn_top_prepare_input_buf_func_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_prepare_input_buf_func_2_fu_170_ap_start,
        ap_done => grp_prepare_input_buf_func_2_fu_170_ap_done,
        ap_idle => grp_prepare_input_buf_func_2_fu_170_ap_idle,
        ap_ready => grp_prepare_input_buf_func_2_fu_170_ap_ready,
        input_s_dout => input_s_dout,
        input_s_empty_n => input_s_empty_n,
        input_s_read => grp_prepare_input_buf_func_2_fu_170_input_s_read,
        input_s_num_data_valid => ap_const_lv9_0,
        input_s_fifo_cap => ap_const_lv9_0,
        input_buf_0_0_address0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_address0,
        input_buf_0_0_ce0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_ce0,
        input_buf_0_0_we0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_we0,
        input_buf_0_0_d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_d0,
        input_buf_0_1_address0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_address0,
        input_buf_0_1_ce0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_ce0,
        input_buf_0_1_we0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_we0,
        input_buf_0_1_d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_d0,
        input_buf_0_2_address0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_address0,
        input_buf_0_2_ce0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_ce0,
        input_buf_0_2_we0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_we0,
        input_buf_0_2_d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_d0,
        input_buf_1_0_address0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_address0,
        input_buf_1_0_ce0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_ce0,
        input_buf_1_0_we0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_we0,
        input_buf_1_0_d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_d0,
        input_buf_1_1_address0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_address0,
        input_buf_1_1_ce0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_ce0,
        input_buf_1_1_we0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_we0,
        input_buf_1_1_d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_d0,
        input_buf_1_2_address0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_address0,
        input_buf_1_2_ce0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_ce0,
        input_buf_1_2_we0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_we0,
        input_buf_1_2_d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_d0,
        input_buf_2_0_address0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_address0,
        input_buf_2_0_ce0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_ce0,
        input_buf_2_0_we0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_we0,
        input_buf_2_0_d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_d0,
        input_buf_2_1_address0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_address0,
        input_buf_2_1_ce0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_ce0,
        input_buf_2_1_we0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_we0,
        input_buf_2_1_d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_d0,
        input_buf_2_2_address0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_address0,
        input_buf_2_2_ce0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_ce0,
        input_buf_2_2_we0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_we0,
        input_buf_2_2_d0 => grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_d0);

    grp_convolution_func_2_fu_194 : component cnn_top_convolution_func_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_convolution_func_2_fu_194_ap_start,
        ap_done => grp_convolution_func_2_fu_194_ap_done,
        ap_idle => grp_convolution_func_2_fu_194_ap_idle,
        ap_ready => grp_convolution_func_2_fu_194_ap_ready,
        input_buf_0_0_address0 => grp_convolution_func_2_fu_194_input_buf_0_0_address0,
        input_buf_0_0_ce0 => grp_convolution_func_2_fu_194_input_buf_0_0_ce0,
        input_buf_0_0_q0 => input_buf_q0,
        input_buf_0_1_address0 => grp_convolution_func_2_fu_194_input_buf_0_1_address0,
        input_buf_0_1_ce0 => grp_convolution_func_2_fu_194_input_buf_0_1_ce0,
        input_buf_0_1_q0 => input_buf_1_q0,
        input_buf_0_2_address0 => grp_convolution_func_2_fu_194_input_buf_0_2_address0,
        input_buf_0_2_ce0 => grp_convolution_func_2_fu_194_input_buf_0_2_ce0,
        input_buf_0_2_q0 => input_buf_2_q0,
        input_buf_1_0_address0 => grp_convolution_func_2_fu_194_input_buf_1_0_address0,
        input_buf_1_0_ce0 => grp_convolution_func_2_fu_194_input_buf_1_0_ce0,
        input_buf_1_0_q0 => input_buf_3_q0,
        input_buf_1_1_address0 => grp_convolution_func_2_fu_194_input_buf_1_1_address0,
        input_buf_1_1_ce0 => grp_convolution_func_2_fu_194_input_buf_1_1_ce0,
        input_buf_1_1_q0 => input_buf_4_q0,
        input_buf_1_2_address0 => grp_convolution_func_2_fu_194_input_buf_1_2_address0,
        input_buf_1_2_ce0 => grp_convolution_func_2_fu_194_input_buf_1_2_ce0,
        input_buf_1_2_q0 => input_buf_5_q0,
        input_buf_2_0_address0 => grp_convolution_func_2_fu_194_input_buf_2_0_address0,
        input_buf_2_0_ce0 => grp_convolution_func_2_fu_194_input_buf_2_0_ce0,
        input_buf_2_0_q0 => input_buf_6_q0,
        input_buf_2_1_address0 => grp_convolution_func_2_fu_194_input_buf_2_1_address0,
        input_buf_2_1_ce0 => grp_convolution_func_2_fu_194_input_buf_2_1_ce0,
        input_buf_2_1_q0 => input_buf_7_q0,
        input_buf_2_2_address0 => grp_convolution_func_2_fu_194_input_buf_2_2_address0,
        input_buf_2_2_ce0 => grp_convolution_func_2_fu_194_input_buf_2_2_ce0,
        input_buf_2_2_q0 => input_buf_8_q0,
        local_weights_0_0_address0 => grp_convolution_func_2_fu_194_local_weights_0_0_address0,
        local_weights_0_0_ce0 => grp_convolution_func_2_fu_194_local_weights_0_0_ce0,
        local_weights_0_0_q0 => local_weights_q0,
        local_weights_0_1_address0 => grp_convolution_func_2_fu_194_local_weights_0_1_address0,
        local_weights_0_1_ce0 => grp_convolution_func_2_fu_194_local_weights_0_1_ce0,
        local_weights_0_1_q0 => local_weights_1_q0,
        local_weights_0_2_address0 => grp_convolution_func_2_fu_194_local_weights_0_2_address0,
        local_weights_0_2_ce0 => grp_convolution_func_2_fu_194_local_weights_0_2_ce0,
        local_weights_0_2_q0 => local_weights_2_q0,
        local_weights_1_0_address0 => grp_convolution_func_2_fu_194_local_weights_1_0_address0,
        local_weights_1_0_ce0 => grp_convolution_func_2_fu_194_local_weights_1_0_ce0,
        local_weights_1_0_q0 => local_weights_3_q0,
        local_weights_1_1_address0 => grp_convolution_func_2_fu_194_local_weights_1_1_address0,
        local_weights_1_1_ce0 => grp_convolution_func_2_fu_194_local_weights_1_1_ce0,
        local_weights_1_1_q0 => local_weights_4_q0,
        local_weights_1_2_address0 => grp_convolution_func_2_fu_194_local_weights_1_2_address0,
        local_weights_1_2_ce0 => grp_convolution_func_2_fu_194_local_weights_1_2_ce0,
        local_weights_1_2_q0 => local_weights_5_q0,
        local_weights_2_0_address0 => grp_convolution_func_2_fu_194_local_weights_2_0_address0,
        local_weights_2_0_ce0 => grp_convolution_func_2_fu_194_local_weights_2_0_ce0,
        local_weights_2_0_q0 => local_weights_6_q0,
        local_weights_2_1_address0 => grp_convolution_func_2_fu_194_local_weights_2_1_address0,
        local_weights_2_1_ce0 => grp_convolution_func_2_fu_194_local_weights_2_1_ce0,
        local_weights_2_1_q0 => local_weights_7_q0,
        local_weights_2_2_address0 => grp_convolution_func_2_fu_194_local_weights_2_2_address0,
        local_weights_2_2_ce0 => grp_convolution_func_2_fu_194_local_weights_2_2_ce0,
        local_weights_2_2_q0 => local_weights_8_q0,
        local_bias_address0 => grp_convolution_func_2_fu_194_local_bias_address0,
        local_bias_ce0 => grp_convolution_func_2_fu_194_local_bias_ce0,
        local_bias_q0 => local_bias_q0,
        output_buf_address0 => grp_convolution_func_2_fu_194_output_buf_address0,
        output_buf_ce0 => grp_convolution_func_2_fu_194_output_buf_ce0,
        output_buf_we0 => grp_convolution_func_2_fu_194_output_buf_we0,
        output_buf_d0 => grp_convolution_func_2_fu_194_output_buf_d0);

    grp_write_output_func_2_fu_218 : component cnn_top_write_output_func_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_write_output_func_2_fu_218_ap_start,
        ap_done => grp_write_output_func_2_fu_218_ap_done,
        ap_idle => grp_write_output_func_2_fu_218_ap_idle,
        ap_ready => grp_write_output_func_2_fu_218_ap_ready,
        conv1_out_din => grp_write_output_func_2_fu_218_conv1_out_din,
        conv1_out_full_n => conv1_out_full_n,
        conv1_out_write => grp_write_output_func_2_fu_218_conv1_out_write,
        conv1_out_num_data_valid => ap_const_lv14_0,
        conv1_out_fifo_cap => ap_const_lv14_0,
        output_buf_address0 => grp_write_output_func_2_fu_218_output_buf_address0,
        output_buf_ce0 => grp_write_output_func_2_fu_218_output_buf_ce0,
        output_buf_q0 => output_buf_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_write_output_func_2_fu_218_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_convolution_func_2_fu_194_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_convolution_func_2_fu_194_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_convolution_func_2_fu_194_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_convolution_func_2_fu_194_ap_ready = ap_const_logic_1)) then 
                    grp_convolution_func_2_fu_194_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_params_func_2_fu_138_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_params_func_2_fu_138_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call26))) then 
                    grp_load_params_func_2_fu_138_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_params_func_2_fu_138_ap_ready = ap_const_logic_1)) then 
                    grp_load_params_func_2_fu_138_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_prepare_input_buf_func_2_fu_170_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_prepare_input_buf_func_2_fu_170_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call27))) then 
                    grp_prepare_input_buf_func_2_fu_170_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_prepare_input_buf_func_2_fu_170_ap_ready = ap_const_logic_1)) then 
                    grp_prepare_input_buf_func_2_fu_170_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_write_output_func_2_fu_218_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_write_output_func_2_fu_218_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_write_output_func_2_fu_218_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_write_output_func_2_fu_218_ap_ready = ap_const_logic_1)) then 
                    grp_write_output_func_2_fu_218_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                this_bias_read_reg_225 <= this_bias;
                this_weights_read_reg_230 <= this_weights;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, grp_convolution_func_2_fu_194_ap_done, grp_write_output_func_2_fu_218_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_convolution_func_2_fu_194_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_write_output_func_2_fu_218_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_convolution_func_2_fu_194_ap_done)
    begin
        if ((grp_convolution_func_2_fu_194_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_write_output_func_2_fu_218_ap_done)
    begin
        if ((grp_write_output_func_2_fu_218_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call26_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call26 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call27_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call27 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_load_params_func_2_fu_138_ap_done, grp_prepare_input_buf_func_2_fu_170_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_prepare_input_buf_func_2_fu_170_ap_done = ap_const_logic_0) or (grp_load_params_func_2_fu_138_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_write_output_func_2_fu_218_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_write_output_func_2_fu_218_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_write_output_func_2_fu_218_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_write_output_func_2_fu_218_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv1_out_din <= grp_write_output_func_2_fu_218_conv1_out_din;
    conv1_out_write <= grp_write_output_func_2_fu_218_conv1_out_write;
    grp_convolution_func_2_fu_194_ap_start <= grp_convolution_func_2_fu_194_ap_start_reg;
    grp_load_params_func_2_fu_138_ap_start <= grp_load_params_func_2_fu_138_ap_start_reg;
    grp_prepare_input_buf_func_2_fu_170_ap_start <= grp_prepare_input_buf_func_2_fu_170_ap_start_reg;
    grp_write_output_func_2_fu_218_ap_start <= grp_write_output_func_2_fu_218_ap_start_reg;

    input_buf_1_address0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_address0, grp_convolution_func_2_fu_194_input_buf_0_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_1_address0 <= grp_convolution_func_2_fu_194_input_buf_0_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_1_address0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_address0;
        else 
            input_buf_1_address0 <= "XXXXXX";
        end if; 
    end process;


    input_buf_1_ce0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_ce0, grp_convolution_func_2_fu_194_input_buf_0_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_1_ce0 <= grp_convolution_func_2_fu_194_input_buf_0_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_1_ce0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_ce0;
        else 
            input_buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_1_we0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_1_we0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_0_1_we0;
        else 
            input_buf_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2_address0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_address0, grp_convolution_func_2_fu_194_input_buf_0_2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_2_address0 <= grp_convolution_func_2_fu_194_input_buf_0_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_2_address0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_address0;
        else 
            input_buf_2_address0 <= "XXXXXX";
        end if; 
    end process;


    input_buf_2_ce0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_ce0, grp_convolution_func_2_fu_194_input_buf_0_2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_2_ce0 <= grp_convolution_func_2_fu_194_input_buf_0_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_2_ce0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_ce0;
        else 
            input_buf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_2_we0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_2_we0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_0_2_we0;
        else 
            input_buf_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_3_address0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_address0, grp_convolution_func_2_fu_194_input_buf_1_0_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_3_address0 <= grp_convolution_func_2_fu_194_input_buf_1_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_3_address0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_address0;
        else 
            input_buf_3_address0 <= "XXXXXX";
        end if; 
    end process;


    input_buf_3_ce0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_ce0, grp_convolution_func_2_fu_194_input_buf_1_0_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_3_ce0 <= grp_convolution_func_2_fu_194_input_buf_1_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_3_ce0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_ce0;
        else 
            input_buf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_3_we0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_3_we0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_1_0_we0;
        else 
            input_buf_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_4_address0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_address0, grp_convolution_func_2_fu_194_input_buf_1_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_4_address0 <= grp_convolution_func_2_fu_194_input_buf_1_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_4_address0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_address0;
        else 
            input_buf_4_address0 <= "XXXXXX";
        end if; 
    end process;


    input_buf_4_ce0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_ce0, grp_convolution_func_2_fu_194_input_buf_1_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_4_ce0 <= grp_convolution_func_2_fu_194_input_buf_1_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_4_ce0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_ce0;
        else 
            input_buf_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_4_we0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_4_we0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_1_1_we0;
        else 
            input_buf_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_5_address0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_address0, grp_convolution_func_2_fu_194_input_buf_1_2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_5_address0 <= grp_convolution_func_2_fu_194_input_buf_1_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_5_address0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_address0;
        else 
            input_buf_5_address0 <= "XXXXXX";
        end if; 
    end process;


    input_buf_5_ce0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_ce0, grp_convolution_func_2_fu_194_input_buf_1_2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_5_ce0 <= grp_convolution_func_2_fu_194_input_buf_1_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_5_ce0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_ce0;
        else 
            input_buf_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_5_we0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_5_we0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_1_2_we0;
        else 
            input_buf_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_6_address0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_address0, grp_convolution_func_2_fu_194_input_buf_2_0_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_6_address0 <= grp_convolution_func_2_fu_194_input_buf_2_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_6_address0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_address0;
        else 
            input_buf_6_address0 <= "XXXXXX";
        end if; 
    end process;


    input_buf_6_ce0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_ce0, grp_convolution_func_2_fu_194_input_buf_2_0_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_6_ce0 <= grp_convolution_func_2_fu_194_input_buf_2_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_6_ce0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_ce0;
        else 
            input_buf_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_6_we0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_6_we0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_2_0_we0;
        else 
            input_buf_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_7_address0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_address0, grp_convolution_func_2_fu_194_input_buf_2_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_7_address0 <= grp_convolution_func_2_fu_194_input_buf_2_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_7_address0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_address0;
        else 
            input_buf_7_address0 <= "XXXXXX";
        end if; 
    end process;


    input_buf_7_ce0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_ce0, grp_convolution_func_2_fu_194_input_buf_2_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_7_ce0 <= grp_convolution_func_2_fu_194_input_buf_2_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_7_ce0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_ce0;
        else 
            input_buf_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_7_we0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_7_we0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_2_1_we0;
        else 
            input_buf_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_8_address0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_address0, grp_convolution_func_2_fu_194_input_buf_2_2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_8_address0 <= grp_convolution_func_2_fu_194_input_buf_2_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_8_address0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_address0;
        else 
            input_buf_8_address0 <= "XXXXXX";
        end if; 
    end process;


    input_buf_8_ce0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_ce0, grp_convolution_func_2_fu_194_input_buf_2_2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_8_ce0 <= grp_convolution_func_2_fu_194_input_buf_2_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_8_ce0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_ce0;
        else 
            input_buf_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_8_we0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_8_we0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_2_2_we0;
        else 
            input_buf_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_address0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_address0, grp_convolution_func_2_fu_194_input_buf_0_0_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_address0 <= grp_convolution_func_2_fu_194_input_buf_0_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_address0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_address0;
        else 
            input_buf_address0 <= "XXXXXX";
        end if; 
    end process;


    input_buf_ce0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_ce0, grp_convolution_func_2_fu_194_input_buf_0_0_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_buf_ce0 <= grp_convolution_func_2_fu_194_input_buf_0_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_ce0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_ce0;
        else 
            input_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buf_we0_assign_proc : process(grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_buf_we0 <= grp_prepare_input_buf_func_2_fu_170_input_buf_0_0_we0;
        else 
            input_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    input_s_read <= grp_prepare_input_buf_func_2_fu_170_input_s_read;

    local_bias_address0_assign_proc : process(grp_load_params_func_2_fu_138_local_bias_address0, grp_convolution_func_2_fu_194_local_bias_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_bias_address0 <= grp_convolution_func_2_fu_194_local_bias_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_bias_address0 <= grp_load_params_func_2_fu_138_local_bias_address0;
        else 
            local_bias_address0 <= "XXXXX";
        end if; 
    end process;


    local_bias_ce0_assign_proc : process(grp_load_params_func_2_fu_138_local_bias_ce0, grp_convolution_func_2_fu_194_local_bias_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_bias_ce0 <= grp_convolution_func_2_fu_194_local_bias_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_bias_ce0 <= grp_load_params_func_2_fu_138_local_bias_ce0;
        else 
            local_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_bias_we0_assign_proc : process(grp_load_params_func_2_fu_138_local_bias_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_bias_we0 <= grp_load_params_func_2_fu_138_local_bias_we0;
        else 
            local_bias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_1_address0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_0_1_address0, grp_convolution_func_2_fu_194_local_weights_0_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_1_address0 <= grp_convolution_func_2_fu_194_local_weights_0_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_1_address0 <= grp_load_params_func_2_fu_138_local_weights_0_1_address0;
        else 
            local_weights_1_address0 <= "XXXXX";
        end if; 
    end process;


    local_weights_1_ce0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_0_1_ce0, grp_convolution_func_2_fu_194_local_weights_0_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_1_ce0 <= grp_convolution_func_2_fu_194_local_weights_0_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_1_ce0 <= grp_load_params_func_2_fu_138_local_weights_0_1_ce0;
        else 
            local_weights_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_1_we0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_0_1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_1_we0 <= grp_load_params_func_2_fu_138_local_weights_0_1_we0;
        else 
            local_weights_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_2_address0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_0_2_address0, grp_convolution_func_2_fu_194_local_weights_0_2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_2_address0 <= grp_convolution_func_2_fu_194_local_weights_0_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_2_address0 <= grp_load_params_func_2_fu_138_local_weights_0_2_address0;
        else 
            local_weights_2_address0 <= "XXXXX";
        end if; 
    end process;


    local_weights_2_ce0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_0_2_ce0, grp_convolution_func_2_fu_194_local_weights_0_2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_2_ce0 <= grp_convolution_func_2_fu_194_local_weights_0_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_2_ce0 <= grp_load_params_func_2_fu_138_local_weights_0_2_ce0;
        else 
            local_weights_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_2_we0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_0_2_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_2_we0 <= grp_load_params_func_2_fu_138_local_weights_0_2_we0;
        else 
            local_weights_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_3_address0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_1_0_address0, grp_convolution_func_2_fu_194_local_weights_1_0_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_3_address0 <= grp_convolution_func_2_fu_194_local_weights_1_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_3_address0 <= grp_load_params_func_2_fu_138_local_weights_1_0_address0;
        else 
            local_weights_3_address0 <= "XXXXX";
        end if; 
    end process;


    local_weights_3_ce0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_1_0_ce0, grp_convolution_func_2_fu_194_local_weights_1_0_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_3_ce0 <= grp_convolution_func_2_fu_194_local_weights_1_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_3_ce0 <= grp_load_params_func_2_fu_138_local_weights_1_0_ce0;
        else 
            local_weights_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_3_we0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_1_0_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_3_we0 <= grp_load_params_func_2_fu_138_local_weights_1_0_we0;
        else 
            local_weights_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_4_address0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_1_1_address0, grp_convolution_func_2_fu_194_local_weights_1_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_4_address0 <= grp_convolution_func_2_fu_194_local_weights_1_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_4_address0 <= grp_load_params_func_2_fu_138_local_weights_1_1_address0;
        else 
            local_weights_4_address0 <= "XXXXX";
        end if; 
    end process;


    local_weights_4_ce0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_1_1_ce0, grp_convolution_func_2_fu_194_local_weights_1_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_4_ce0 <= grp_convolution_func_2_fu_194_local_weights_1_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_4_ce0 <= grp_load_params_func_2_fu_138_local_weights_1_1_ce0;
        else 
            local_weights_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_4_we0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_1_1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_4_we0 <= grp_load_params_func_2_fu_138_local_weights_1_1_we0;
        else 
            local_weights_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_5_address0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_1_2_address0, grp_convolution_func_2_fu_194_local_weights_1_2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_5_address0 <= grp_convolution_func_2_fu_194_local_weights_1_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_5_address0 <= grp_load_params_func_2_fu_138_local_weights_1_2_address0;
        else 
            local_weights_5_address0 <= "XXXXX";
        end if; 
    end process;


    local_weights_5_ce0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_1_2_ce0, grp_convolution_func_2_fu_194_local_weights_1_2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_5_ce0 <= grp_convolution_func_2_fu_194_local_weights_1_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_5_ce0 <= grp_load_params_func_2_fu_138_local_weights_1_2_ce0;
        else 
            local_weights_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_5_we0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_1_2_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_5_we0 <= grp_load_params_func_2_fu_138_local_weights_1_2_we0;
        else 
            local_weights_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_6_address0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_2_0_address0, grp_convolution_func_2_fu_194_local_weights_2_0_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_6_address0 <= grp_convolution_func_2_fu_194_local_weights_2_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_6_address0 <= grp_load_params_func_2_fu_138_local_weights_2_0_address0;
        else 
            local_weights_6_address0 <= "XXXXX";
        end if; 
    end process;


    local_weights_6_ce0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_2_0_ce0, grp_convolution_func_2_fu_194_local_weights_2_0_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_6_ce0 <= grp_convolution_func_2_fu_194_local_weights_2_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_6_ce0 <= grp_load_params_func_2_fu_138_local_weights_2_0_ce0;
        else 
            local_weights_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_6_we0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_2_0_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_6_we0 <= grp_load_params_func_2_fu_138_local_weights_2_0_we0;
        else 
            local_weights_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_7_address0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_2_1_address0, grp_convolution_func_2_fu_194_local_weights_2_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_7_address0 <= grp_convolution_func_2_fu_194_local_weights_2_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_7_address0 <= grp_load_params_func_2_fu_138_local_weights_2_1_address0;
        else 
            local_weights_7_address0 <= "XXXXX";
        end if; 
    end process;


    local_weights_7_ce0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_2_1_ce0, grp_convolution_func_2_fu_194_local_weights_2_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_7_ce0 <= grp_convolution_func_2_fu_194_local_weights_2_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_7_ce0 <= grp_load_params_func_2_fu_138_local_weights_2_1_ce0;
        else 
            local_weights_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_7_we0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_2_1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_7_we0 <= grp_load_params_func_2_fu_138_local_weights_2_1_we0;
        else 
            local_weights_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_8_address0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_2_2_address0, grp_convolution_func_2_fu_194_local_weights_2_2_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_8_address0 <= grp_convolution_func_2_fu_194_local_weights_2_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_8_address0 <= grp_load_params_func_2_fu_138_local_weights_2_2_address0;
        else 
            local_weights_8_address0 <= "XXXXX";
        end if; 
    end process;


    local_weights_8_ce0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_2_2_ce0, grp_convolution_func_2_fu_194_local_weights_2_2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_8_ce0 <= grp_convolution_func_2_fu_194_local_weights_2_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_8_ce0 <= grp_load_params_func_2_fu_138_local_weights_2_2_ce0;
        else 
            local_weights_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_8_we0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_2_2_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_8_we0 <= grp_load_params_func_2_fu_138_local_weights_2_2_we0;
        else 
            local_weights_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_address0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_0_0_address0, grp_convolution_func_2_fu_194_local_weights_0_0_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_address0 <= grp_convolution_func_2_fu_194_local_weights_0_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_address0 <= grp_load_params_func_2_fu_138_local_weights_0_0_address0;
        else 
            local_weights_address0 <= "XXXXX";
        end if; 
    end process;


    local_weights_ce0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_0_0_ce0, grp_convolution_func_2_fu_194_local_weights_0_0_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            local_weights_ce0 <= grp_convolution_func_2_fu_194_local_weights_0_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_ce0 <= grp_load_params_func_2_fu_138_local_weights_0_0_ce0;
        else 
            local_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_weights_we0_assign_proc : process(grp_load_params_func_2_fu_138_local_weights_0_0_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            local_weights_we0 <= grp_load_params_func_2_fu_138_local_weights_0_0_we0;
        else 
            local_weights_we0 <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_0_ARADDR <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARADDR;
    m_axi_gmem2_0_ARBURST <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARBURST;
    m_axi_gmem2_0_ARCACHE <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARCACHE;
    m_axi_gmem2_0_ARID <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARID;
    m_axi_gmem2_0_ARLEN <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARLEN;
    m_axi_gmem2_0_ARLOCK <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARLOCK;
    m_axi_gmem2_0_ARPROT <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARPROT;
    m_axi_gmem2_0_ARQOS <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARQOS;
    m_axi_gmem2_0_ARREGION <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARREGION;
    m_axi_gmem2_0_ARSIZE <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARSIZE;
    m_axi_gmem2_0_ARUSER <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARUSER;
    m_axi_gmem2_0_ARVALID <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_ARVALID;
    m_axi_gmem2_0_AWADDR <= ap_const_lv32_0;
    m_axi_gmem2_0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem2_0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem2_0_AWID <= ap_const_lv1_0;
    m_axi_gmem2_0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem2_0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem2_0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem2_0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem2_0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem2_0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem2_0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem2_0_AWVALID <= ap_const_logic_0;
    m_axi_gmem2_0_BREADY <= ap_const_logic_0;
    m_axi_gmem2_0_RREADY <= grp_load_params_func_2_fu_138_m_axi_gmem2_0_RREADY;
    m_axi_gmem2_0_WDATA <= ap_const_lv16_0;
    m_axi_gmem2_0_WID <= ap_const_lv1_0;
    m_axi_gmem2_0_WLAST <= ap_const_logic_0;
    m_axi_gmem2_0_WSTRB <= ap_const_lv2_0;
    m_axi_gmem2_0_WUSER <= ap_const_lv1_0;
    m_axi_gmem2_0_WVALID <= ap_const_logic_0;
    m_axi_gmem3_0_ARADDR <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARADDR;
    m_axi_gmem3_0_ARBURST <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARBURST;
    m_axi_gmem3_0_ARCACHE <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARCACHE;
    m_axi_gmem3_0_ARID <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARID;
    m_axi_gmem3_0_ARLEN <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARLEN;
    m_axi_gmem3_0_ARLOCK <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARLOCK;
    m_axi_gmem3_0_ARPROT <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARPROT;
    m_axi_gmem3_0_ARQOS <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARQOS;
    m_axi_gmem3_0_ARREGION <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARREGION;
    m_axi_gmem3_0_ARSIZE <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARSIZE;
    m_axi_gmem3_0_ARUSER <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARUSER;
    m_axi_gmem3_0_ARVALID <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_ARVALID;
    m_axi_gmem3_0_AWADDR <= ap_const_lv32_0;
    m_axi_gmem3_0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem3_0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem3_0_AWID <= ap_const_lv1_0;
    m_axi_gmem3_0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem3_0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem3_0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem3_0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem3_0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem3_0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem3_0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem3_0_AWVALID <= ap_const_logic_0;
    m_axi_gmem3_0_BREADY <= ap_const_logic_0;
    m_axi_gmem3_0_RREADY <= grp_load_params_func_2_fu_138_m_axi_gmem3_0_RREADY;
    m_axi_gmem3_0_WDATA <= ap_const_lv16_0;
    m_axi_gmem3_0_WID <= ap_const_lv1_0;
    m_axi_gmem3_0_WLAST <= ap_const_logic_0;
    m_axi_gmem3_0_WSTRB <= ap_const_lv2_0;
    m_axi_gmem3_0_WUSER <= ap_const_lv1_0;
    m_axi_gmem3_0_WVALID <= ap_const_logic_0;

    output_buf_address0_assign_proc : process(grp_convolution_func_2_fu_194_output_buf_address0, grp_write_output_func_2_fu_218_output_buf_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            output_buf_address0 <= grp_write_output_func_2_fu_218_output_buf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            output_buf_address0 <= grp_convolution_func_2_fu_194_output_buf_address0;
        else 
            output_buf_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    output_buf_ce0_assign_proc : process(grp_convolution_func_2_fu_194_output_buf_ce0, grp_write_output_func_2_fu_218_output_buf_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            output_buf_ce0 <= grp_write_output_func_2_fu_218_output_buf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            output_buf_ce0 <= grp_convolution_func_2_fu_194_output_buf_ce0;
        else 
            output_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_buf_we0_assign_proc : process(grp_convolution_func_2_fu_194_output_buf_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            output_buf_we0 <= grp_convolution_func_2_fu_194_output_buf_we0;
        else 
            output_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
