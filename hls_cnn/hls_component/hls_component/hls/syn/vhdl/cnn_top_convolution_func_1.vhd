-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_top_convolution_func_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_buf_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_buf_ce0 : OUT STD_LOGIC;
    input_buf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_weights_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    local_weights_ce0 : OUT STD_LOGIC;
    local_weights_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    local_bias_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    local_bias_ce0 : OUT STD_LOGIC;
    local_bias_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_buf_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    output_buf_ce0 : OUT STD_LOGIC;
    output_buf_we0 : OUT STD_LOGIC;
    output_buf_d0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
end;


architecture behav of cnn_top_convolution_func_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv22_240000 : STD_LOGIC_VECTOR (21 downto 0) := "1001000000000000000000";
    constant ap_const_lv22_1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_const_lv18_12000 : STD_LOGIC_VECTOR (17 downto 0) := "010010000000000000";
    constant ap_const_lv14_1200 : STD_LOGIC_VECTOR (13 downto 0) := "01001000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv10_120 : STD_LOGIC_VECTOR (9 downto 0) := "0100100000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln77_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln77_reg_1286 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1290_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1290_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1290_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1290_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_1290_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln77_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln77_reg_1303 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln77_reg_1303_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln81_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln81_reg_1310 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_3_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_3_reg_1315 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_3_reg_1315_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_3_reg_1315_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_3_reg_1315_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_3_reg_1315_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_3_reg_1315_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_1326 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_1326_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten62_mid21508_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten62_mid21508_reg_1332 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid295_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid295_reg_1337 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_reg_1342 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_reg_1342_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_reg_1342_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_reg_1342_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_63_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_63_reg_1352 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_64_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_64_reg_1357 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten33_mid299_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten33_mid299_reg_1362 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_reg_1367 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_reg_1367_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_reg_1367_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_reg_1367_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_mid259_reg_1367_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_66_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_66_reg_1375 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_451_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_451_reg_1380 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_451_reg_1380_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_451_reg_1380_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_451_reg_1380_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_354_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_354_reg_1385 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_354_reg_1385_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_354_reg_1385_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_354_reg_1385_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_256_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_256_reg_1390 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_256_reg_1390_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_256_reg_1390_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_256_reg_1390_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_158_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_158_reg_1395 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_158_reg_1395_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_158_reg_1395_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_158_reg_1395_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln79_fu_557_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln79_reg_1400 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln79_reg_1400_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln79_reg_1400_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln79_reg_1400_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_fu_582_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_reg_1405 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_reg_1405_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_reg_1405_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln81_reg_1405_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln84_fu_602_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln84_reg_1410 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln84_reg_1410_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln84_reg_1410_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln84_reg_1410_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln87_mid230_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid230_reg_1415 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid230_reg_1415_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid230_reg_1415_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid230_reg_1415_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln86_fu_643_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln86_reg_1420 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln86_reg_1420_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln86_reg_1420_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln86_reg_1420_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal n_mid2_fu_664_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_mid2_reg_1425 : STD_LOGIC_VECTOR (1 downto 0);
    signal n_mid2_reg_1425_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal n_mid2_reg_1425_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal n_mid2_reg_1425_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_70_fu_680_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_70_reg_1432 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_70_reg_1432_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_70_reg_1432_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_70_reg_1432_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_70_reg_1432_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln95_fu_684_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln95_reg_1438 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln95_reg_1438_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln95_reg_1438_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln95_reg_1438_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln95_reg_1438_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln89_fu_692_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln89_reg_1443 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln89_reg_1443_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln89_reg_1443_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln89_reg_1443_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln89_reg_1443_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln90_18_fu_760_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln90_18_reg_1449 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln90_19_fu_780_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln90_19_reg_1455 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln87_2_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_2_reg_1461 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_2_reg_1461_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_2_reg_1461_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_2_reg_1461_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_2_reg_1461_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_1_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_1_reg_1465 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_1_reg_1465_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_1_reg_1465_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_1_reg_1465_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_1_reg_1465_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_1_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_1_reg_1469 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_1_reg_1469_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_1_reg_1469_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_1_reg_1469_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_1_reg_1469_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal zext_ln90_20_fu_892_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln90_22_fu_916_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal oc_cast_cast_fu_929_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln95_fu_1174_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_fu_110 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_fu_1183_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln79_2_fu_1108_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_9_mid247_fu_989_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_2_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_2_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln87_2_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_fu_114 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal add_ln87_fu_786_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal m_fu_118 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal select_ln86_fu_672_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_fu_122 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal select_ln86_1_fu_452_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ic_fu_126 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal select_ln84_fu_636_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten31_fu_130 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal select_ln84_1_fu_466_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_fu_134 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal select_ln81_fu_595_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten60_fu_138 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal select_ln81_1_fu_326_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_fu_142 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal select_ln79_fu_575_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten100_fu_146 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    signal select_ln79_3_fu_340_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal oc_fu_150 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal select_ln77_1_fu_550_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten151_fu_154 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    signal add_ln77_1_fu_284_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln7910_fu_158 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal select_ln79_1_fu_1100_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_buf_ce0_local : STD_LOGIC;
    signal local_weights_ce0_local : STD_LOGIC;
    signal local_bias_ce0_local : STD_LOGIC;
    signal output_buf_we0_local : STD_LOGIC;
    signal select_ln95_fu_1158_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal output_buf_ce0_local : STD_LOGIC;
    signal add_ln81_1_fu_320_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln79_1_fu_334_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln86_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten62_not9_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_1_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln77_2_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_65_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln86_1_fu_446_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln84_1_fu_460_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln87_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln77_fu_502_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln77_fu_508_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln77_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid268_fu_563_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ic_mid239_fu_588_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_flatten_mid295_not_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid291_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_mid255_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_mid259_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_mid222_fu_608_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_67_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_68_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_69_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln90_fu_696_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_700_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln90_fu_712_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln90_fu_708_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln90_14_fu_718_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_728_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_fu_740_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln90_15_fu_736_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln90_fu_750_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln90_16_fu_756_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln81_fu_688_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln90_4_fu_766_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln90_fu_770_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln90_22_fu_722_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln90_18_fu_776_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_fu_846_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln90_17_fu_843_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_53_fu_866_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_52_fu_859_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln83_fu_873_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln90_3_fu_853_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln90_19_fu_883_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln90_20_fu_886_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln89_fu_840_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln90_5_fu_897_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln90_3_fu_900_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln83_fu_877_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln90_21_fu_906_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln90_21_fu_910_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal first_iter_4_mid1_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln77_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln77_1_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln77_2_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln77_3_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_9_mid279_fu_955_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_iter_3_mid1_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_3_mid281_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_2_mid285_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_1_mid289_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_2_mid1_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_2_mid249_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_1_mid253_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_1_mid1_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_1_mid228_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_1_mid2_fu_1040_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_1_fu_1055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln87_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_2_mid2_fu_1023_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln87_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln87_1_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_iter_3_mid2_fu_1001_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln87_1_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln87_2_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_fu_1047_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal first_iter_4_mid2_fu_967_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln79_fu_1096_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_1134_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln94_2_fu_1143_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_1134_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln95_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln94_2_fu_1143_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_39_fu_1167_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_top_mac_muladd_16s_16s_32ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mac_muladd_16s_16s_32ns_32_4_1_U190 : component cnn_top_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => local_weights_q0,
        din1 => input_buf_q0,
        din2 => ap_sig_allocacmp_sum_2_load_1,
        ce => ap_const_logic_1,
        dout => grp_fu_1183_p3);

    flow_control_loop_pipe_sequential_init_U : component cnn_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    i_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    i_fu_142 <= ap_const_lv5_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    i_fu_142 <= select_ln79_fu_575_p3;
                end if;
            end if; 
        end if;
    end process;

    ic_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ic_fu_126 <= ap_const_lv6_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    ic_fu_126 <= select_ln84_fu_636_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten100_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten100_fu_146 <= ap_const_lv18_0;
                elsif (((icmp_ln77_fu_278_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten100_fu_146 <= select_ln79_3_fu_340_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten151_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten151_fu_154 <= ap_const_lv22_0;
                elsif (((icmp_ln77_fu_278_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten151_fu_154 <= add_ln77_1_fu_284_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten31_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    indvar_flatten31_fu_130 <= ap_const_lv10_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln77_reg_1286 = ap_const_lv1_0))) then 
                    indvar_flatten31_fu_130 <= select_ln84_1_fu_466_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten60_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten60_fu_138 <= ap_const_lv14_0;
                elsif (((icmp_ln77_fu_278_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten60_fu_138 <= select_ln81_1_fu_326_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    indvar_flatten_fu_122 <= ap_const_lv4_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln77_reg_1286 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_122 <= select_ln86_1_fu_452_p3;
                end if;
            end if; 
        end if;
    end process;

    j_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    j_fu_134 <= ap_const_lv5_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    j_fu_134 <= select_ln81_fu_595_p3;
                end if;
            end if; 
        end if;
    end process;

    m_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    m_fu_118 <= ap_const_lv2_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    m_fu_118 <= select_ln86_fu_672_p3;
                end if;
            end if; 
        end if;
    end process;

    n_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    n_fu_114 <= ap_const_lv2_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    n_fu_114 <= add_ln87_fu_786_p2;
                end if;
            end if; 
        end if;
    end process;

    oc_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    oc_fu_150 <= ap_const_lv6_0;
                elsif ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then 
                    oc_fu_150 <= select_ln77_1_fu_550_p3;
                end if;
            end if; 
        end if;
    end process;

    sum_2_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (or_ln87_2_fu_1090_p2 = ap_const_lv1_1))) then 
                    sum_2_fu_110 <= sum_9_mid247_fu_989_p3;
                elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (or_ln87_2_fu_1090_p2 = ap_const_lv1_0))) then 
                    sum_2_fu_110 <= select_ln79_2_fu_1108_p3;
                elsif ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then 
                    sum_2_fu_110 <= grp_fu_1183_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln79_reg_1400 <= add_ln79_fu_557_p2;
                add_ln79_reg_1400_pp0_iter4_reg <= add_ln79_reg_1400;
                add_ln79_reg_1400_pp0_iter5_reg <= add_ln79_reg_1400_pp0_iter4_reg;
                add_ln79_reg_1400_pp0_iter6_reg <= add_ln79_reg_1400_pp0_iter5_reg;
                add_ln81_reg_1405 <= add_ln81_fu_582_p2;
                add_ln81_reg_1405_pp0_iter4_reg <= add_ln81_reg_1405;
                add_ln81_reg_1405_pp0_iter5_reg <= add_ln81_reg_1405_pp0_iter4_reg;
                add_ln81_reg_1405_pp0_iter6_reg <= add_ln81_reg_1405_pp0_iter5_reg;
                add_ln84_reg_1410 <= add_ln84_fu_602_p2;
                add_ln84_reg_1410_pp0_iter4_reg <= add_ln84_reg_1410;
                add_ln84_reg_1410_pp0_iter5_reg <= add_ln84_reg_1410_pp0_iter4_reg;
                add_ln84_reg_1410_pp0_iter6_reg <= add_ln84_reg_1410_pp0_iter5_reg;
                add_ln86_reg_1420 <= add_ln86_fu_643_p2;
                add_ln86_reg_1420_pp0_iter4_reg <= add_ln86_reg_1420;
                add_ln86_reg_1420_pp0_iter5_reg <= add_ln86_reg_1420_pp0_iter4_reg;
                add_ln86_reg_1420_pp0_iter6_reg <= add_ln86_reg_1420_pp0_iter5_reg;
                add_ln90_18_reg_1449 <= add_ln90_18_fu_760_p2;
                add_ln90_19_reg_1455 <= add_ln90_19_fu_780_p2;
                and_ln77_3_reg_1315_pp0_iter2_reg <= and_ln77_3_reg_1315;
                and_ln77_3_reg_1315_pp0_iter3_reg <= and_ln77_3_reg_1315_pp0_iter2_reg;
                and_ln77_3_reg_1315_pp0_iter4_reg <= and_ln77_3_reg_1315_pp0_iter3_reg;
                and_ln77_3_reg_1315_pp0_iter5_reg <= and_ln77_3_reg_1315_pp0_iter4_reg;
                and_ln77_3_reg_1315_pp0_iter6_reg <= and_ln77_3_reg_1315_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                empty_63_reg_1352 <= empty_63_fu_413_p2;
                empty_64_reg_1357 <= empty_64_fu_418_p2;
                empty_66_reg_1375 <= empty_66_fu_441_p2;
                empty_70_reg_1432 <= empty_70_fu_680_p1;
                empty_70_reg_1432_pp0_iter4_reg <= empty_70_reg_1432;
                empty_70_reg_1432_pp0_iter5_reg <= empty_70_reg_1432_pp0_iter4_reg;
                empty_70_reg_1432_pp0_iter6_reg <= empty_70_reg_1432_pp0_iter5_reg;
                empty_70_reg_1432_pp0_iter7_reg <= empty_70_reg_1432_pp0_iter6_reg;
                empty_reg_1326_pp0_iter2_reg <= empty_reg_1326;
                exitcond_flatten33_mid299_reg_1342 <= exitcond_flatten33_mid299_fu_407_p2;
                exitcond_flatten33_mid299_reg_1342_pp0_iter3_reg <= exitcond_flatten33_mid299_reg_1342;
                exitcond_flatten33_mid299_reg_1342_pp0_iter4_reg <= exitcond_flatten33_mid299_reg_1342_pp0_iter3_reg;
                exitcond_flatten33_mid299_reg_1342_pp0_iter5_reg <= exitcond_flatten33_mid299_reg_1342_pp0_iter4_reg;
                exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg <= exitcond_flatten33_mid299_reg_1342_pp0_iter5_reg;
                exitcond_flatten_mid259_reg_1367 <= exitcond_flatten_mid259_fu_429_p2;
                exitcond_flatten_mid259_reg_1367_pp0_iter3_reg <= exitcond_flatten_mid259_reg_1367;
                exitcond_flatten_mid259_reg_1367_pp0_iter4_reg <= exitcond_flatten_mid259_reg_1367_pp0_iter3_reg;
                exitcond_flatten_mid259_reg_1367_pp0_iter5_reg <= exitcond_flatten_mid259_reg_1367_pp0_iter4_reg;
                exitcond_flatten_mid259_reg_1367_pp0_iter6_reg <= exitcond_flatten_mid259_reg_1367_pp0_iter5_reg;
                exitcond_flatten_mid295_reg_1337 <= exitcond_flatten_mid295_fu_396_p2;
                first_iter_158_reg_1395 <= first_iter_158_fu_533_p2;
                first_iter_158_reg_1395_pp0_iter4_reg <= first_iter_158_reg_1395;
                first_iter_158_reg_1395_pp0_iter5_reg <= first_iter_158_reg_1395_pp0_iter4_reg;
                first_iter_158_reg_1395_pp0_iter6_reg <= first_iter_158_reg_1395_pp0_iter5_reg;
                first_iter_256_reg_1390 <= first_iter_256_fu_527_p2;
                first_iter_256_reg_1390_pp0_iter4_reg <= first_iter_256_reg_1390;
                first_iter_256_reg_1390_pp0_iter5_reg <= first_iter_256_reg_1390_pp0_iter4_reg;
                first_iter_256_reg_1390_pp0_iter6_reg <= first_iter_256_reg_1390_pp0_iter5_reg;
                first_iter_354_reg_1385 <= first_iter_354_fu_521_p2;
                first_iter_354_reg_1385_pp0_iter4_reg <= first_iter_354_reg_1385;
                first_iter_354_reg_1385_pp0_iter5_reg <= first_iter_354_reg_1385_pp0_iter4_reg;
                first_iter_354_reg_1385_pp0_iter6_reg <= first_iter_354_reg_1385_pp0_iter5_reg;
                first_iter_451_reg_1380 <= first_iter_451_fu_515_p2;
                first_iter_451_reg_1380_pp0_iter4_reg <= first_iter_451_reg_1380;
                first_iter_451_reg_1380_pp0_iter5_reg <= first_iter_451_reg_1380_pp0_iter4_reg;
                first_iter_451_reg_1380_pp0_iter6_reg <= first_iter_451_reg_1380_pp0_iter5_reg;
                icmp_ln79_reg_1290_pp0_iter2_reg <= icmp_ln79_reg_1290;
                icmp_ln79_reg_1290_pp0_iter3_reg <= icmp_ln79_reg_1290_pp0_iter2_reg;
                icmp_ln79_reg_1290_pp0_iter4_reg <= icmp_ln79_reg_1290_pp0_iter3_reg;
                icmp_ln79_reg_1290_pp0_iter5_reg <= icmp_ln79_reg_1290_pp0_iter4_reg;
                icmp_ln79_reg_1290_pp0_iter6_reg <= icmp_ln79_reg_1290_pp0_iter5_reg;
                icmp_ln84_1_reg_1469 <= icmp_ln84_1_fu_804_p2;
                icmp_ln84_1_reg_1469_pp0_iter4_reg <= icmp_ln84_1_reg_1469;
                icmp_ln84_1_reg_1469_pp0_iter5_reg <= icmp_ln84_1_reg_1469_pp0_iter4_reg;
                icmp_ln84_1_reg_1469_pp0_iter6_reg <= icmp_ln84_1_reg_1469_pp0_iter5_reg;
                icmp_ln84_1_reg_1469_pp0_iter7_reg <= icmp_ln84_1_reg_1469_pp0_iter6_reg;
                icmp_ln86_1_reg_1465 <= icmp_ln86_1_fu_798_p2;
                icmp_ln86_1_reg_1465_pp0_iter4_reg <= icmp_ln86_1_reg_1465;
                icmp_ln86_1_reg_1465_pp0_iter5_reg <= icmp_ln86_1_reg_1465_pp0_iter4_reg;
                icmp_ln86_1_reg_1465_pp0_iter6_reg <= icmp_ln86_1_reg_1465_pp0_iter5_reg;
                icmp_ln86_1_reg_1465_pp0_iter7_reg <= icmp_ln86_1_reg_1465_pp0_iter6_reg;
                icmp_ln87_2_reg_1461 <= icmp_ln87_2_fu_792_p2;
                icmp_ln87_2_reg_1461_pp0_iter4_reg <= icmp_ln87_2_reg_1461;
                icmp_ln87_2_reg_1461_pp0_iter5_reg <= icmp_ln87_2_reg_1461_pp0_iter4_reg;
                icmp_ln87_2_reg_1461_pp0_iter6_reg <= icmp_ln87_2_reg_1461_pp0_iter5_reg;
                icmp_ln87_2_reg_1461_pp0_iter7_reg <= icmp_ln87_2_reg_1461_pp0_iter6_reg;
                icmp_ln87_mid230_reg_1415 <= icmp_ln87_mid230_fu_630_p2;
                icmp_ln87_mid230_reg_1415_pp0_iter4_reg <= icmp_ln87_mid230_reg_1415;
                icmp_ln87_mid230_reg_1415_pp0_iter5_reg <= icmp_ln87_mid230_reg_1415_pp0_iter4_reg;
                icmp_ln87_mid230_reg_1415_pp0_iter6_reg <= icmp_ln87_mid230_reg_1415_pp0_iter5_reg;
                n_mid2_reg_1425 <= n_mid2_fu_664_p3;
                n_mid2_reg_1425_pp0_iter4_reg <= n_mid2_reg_1425;
                n_mid2_reg_1425_pp0_iter5_reg <= n_mid2_reg_1425_pp0_iter4_reg;
                n_mid2_reg_1425_pp0_iter6_reg <= n_mid2_reg_1425_pp0_iter5_reg;
                not_exitcond_flatten33_mid299_reg_1362 <= not_exitcond_flatten33_mid299_fu_423_p2;
                not_exitcond_flatten62_mid21508_reg_1332 <= not_exitcond_flatten62_mid21508_fu_391_p2;
                trunc_ln89_reg_1443 <= trunc_ln89_fu_692_p1;
                trunc_ln89_reg_1443_pp0_iter4_reg <= trunc_ln89_reg_1443;
                trunc_ln89_reg_1443_pp0_iter5_reg <= trunc_ln89_reg_1443_pp0_iter4_reg;
                trunc_ln89_reg_1443_pp0_iter6_reg <= trunc_ln89_reg_1443_pp0_iter5_reg;
                trunc_ln89_reg_1443_pp0_iter7_reg <= trunc_ln89_reg_1443_pp0_iter6_reg;
                trunc_ln95_reg_1438 <= trunc_ln95_fu_684_p1;
                trunc_ln95_reg_1438_pp0_iter4_reg <= trunc_ln95_reg_1438;
                trunc_ln95_reg_1438_pp0_iter5_reg <= trunc_ln95_reg_1438_pp0_iter4_reg;
                trunc_ln95_reg_1438_pp0_iter6_reg <= trunc_ln95_reg_1438_pp0_iter5_reg;
                trunc_ln95_reg_1438_pp0_iter7_reg <= trunc_ln95_reg_1438_pp0_iter6_reg;
                xor_ln77_reg_1303_pp0_iter2_reg <= xor_ln77_reg_1303;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln77_3_reg_1315 <= and_ln77_3_fu_308_p2;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                empty_reg_1326 <= empty_fu_314_p2;
                icmp_ln77_reg_1286 <= icmp_ln77_fu_278_p2;
                icmp_ln79_reg_1290 <= icmp_ln79_fu_290_p2;
                icmp_ln81_reg_1310 <= icmp_ln81_fu_302_p2;
                xor_ln77_reg_1303 <= xor_ln77_fu_296_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (or_ln87_2_fu_1090_p2 = ap_const_lv1_0))) then
                sext_ln7910_fu_158 <= select_ln79_1_fu_1100_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln77_1_fu_284_p2 <= std_logic_vector(unsigned(indvar_flatten151_fu_154) + unsigned(ap_const_lv22_1));
    add_ln77_fu_502_p2 <= std_logic_vector(unsigned(oc_fu_150) + unsigned(ap_const_lv6_1));
    add_ln79_1_fu_334_p2 <= std_logic_vector(unsigned(indvar_flatten100_fu_146) + unsigned(ap_const_lv18_1));
    add_ln79_fu_557_p2 <= std_logic_vector(unsigned(select_ln77_fu_508_p3) + unsigned(ap_const_lv5_1));
    add_ln81_1_fu_320_p2 <= std_logic_vector(unsigned(indvar_flatten60_fu_138) + unsigned(ap_const_lv14_1));
    add_ln81_fu_582_p2 <= std_logic_vector(unsigned(j_mid268_fu_563_p3) + unsigned(ap_const_lv5_1));
    add_ln83_fu_877_p2 <= std_logic_vector(unsigned(tmp_52_fu_859_p3) + unsigned(zext_ln83_fu_873_p1));
    add_ln84_1_fu_460_p2 <= std_logic_vector(unsigned(indvar_flatten31_fu_130) + unsigned(ap_const_lv10_1));
    add_ln84_fu_602_p2 <= std_logic_vector(unsigned(ic_mid239_fu_588_p3) + unsigned(ap_const_lv6_1));
    add_ln86_1_fu_446_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_122) + unsigned(ap_const_lv4_1));
    add_ln86_fu_643_p2 <= std_logic_vector(unsigned(m_mid222_fu_608_p3) + unsigned(ap_const_lv2_1));
    add_ln87_fu_786_p2 <= std_logic_vector(unsigned(n_mid2_fu_664_p3) + unsigned(ap_const_lv2_1));
    add_ln90_18_fu_760_p2 <= std_logic_vector(unsigned(sub_ln90_fu_750_p2) + unsigned(zext_ln90_16_fu_756_p1));
    add_ln90_19_fu_780_p2 <= std_logic_vector(unsigned(add_ln90_22_fu_722_p2) + unsigned(zext_ln90_18_fu_776_p1));
    add_ln90_20_fu_886_p2 <= std_logic_vector(unsigned(sub_ln90_3_fu_853_p2) + unsigned(zext_ln90_19_fu_883_p1));
    add_ln90_21_fu_910_p2 <= std_logic_vector(unsigned(add_ln83_fu_877_p2) + unsigned(zext_ln90_21_fu_906_p1));
    add_ln90_22_fu_722_p2 <= std_logic_vector(unsigned(zext_ln90_fu_708_p1) + unsigned(zext_ln90_14_fu_718_p1));
    add_ln90_3_fu_900_p2 <= std_logic_vector(unsigned(zext_ln89_fu_840_p1) + unsigned(zext_ln90_5_fu_897_p1));
    add_ln90_fu_770_p2 <= std_logic_vector(unsigned(zext_ln81_fu_688_p1) + unsigned(zext_ln90_4_fu_766_p1));
    and_ln77_1_fu_375_p2 <= (xor_ln77_reg_1303 and icmp_ln86_fu_369_p2);
    and_ln77_2_fu_402_p2 <= (xor_ln77_reg_1303 and icmp_ln84_fu_380_p2);
    and_ln77_3_fu_308_p2 <= (xor_ln77_fu_296_p2 and icmp_ln81_fu_302_p2);
    and_ln77_fu_545_p2 <= (xor_ln77_reg_1303_pp0_iter2_reg and icmp_ln87_fu_539_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln77_fu_278_p2)
    begin
        if (((icmp_ln77_fu_278_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, icmp_ln77_reg_1286)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln77_reg_1286 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_sum_2_load_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0, sum_2_fu_110, grp_fu_1183_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            ap_sig_allocacmp_sum_2_load <= grp_fu_1183_p3;
        else 
            ap_sig_allocacmp_sum_2_load <= sum_2_fu_110;
        end if; 
    end process;


    ap_sig_allocacmp_sum_2_load_1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0, sum_2_fu_110, grp_fu_1183_p3, select_ln79_2_fu_1108_p3, sum_9_mid247_fu_989_p3, or_ln87_2_fu_1090_p2)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0)) then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (or_ln87_2_fu_1090_p2 = ap_const_lv1_1))) then 
                ap_sig_allocacmp_sum_2_load_1 <= sum_9_mid247_fu_989_p3;
            elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (or_ln87_2_fu_1090_p2 = ap_const_lv1_0))) then 
                ap_sig_allocacmp_sum_2_load_1 <= select_ln79_2_fu_1108_p3;
            elsif ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then 
                ap_sig_allocacmp_sum_2_load_1 <= grp_fu_1183_p3;
            else 
                ap_sig_allocacmp_sum_2_load_1 <= sum_2_fu_110;
            end if;
        else 
            ap_sig_allocacmp_sum_2_load_1 <= sum_2_fu_110;
        end if; 
    end process;

    empty_63_fu_413_p2 <= (exitcond_flatten33_mid299_fu_407_p2 or and_ln77_3_reg_1315);
    empty_64_fu_418_p2 <= (icmp_ln79_reg_1290 or empty_63_fu_413_p2);
    empty_65_fu_435_p2 <= (exitcond_flatten_mid259_fu_429_p2 or exitcond_flatten33_mid299_fu_407_p2);
    empty_66_fu_441_p2 <= (empty_reg_1326 or empty_65_fu_435_p2);
    empty_67_fu_649_p2 <= (exitcond_flatten_mid259_reg_1367 or empty_63_reg_1352);
    empty_68_fu_653_p2 <= (icmp_ln87_mid230_fu_630_p2 or empty_67_fu_649_p2);
    empty_69_fu_659_p2 <= (icmp_ln79_reg_1290_pp0_iter2_reg or empty_68_fu_653_p2);
    empty_70_fu_680_p1 <= select_ln77_1_fu_550_p3(5 - 1 downto 0);
    empty_fu_314_p2 <= (icmp_ln79_fu_290_p2 or and_ln77_3_fu_308_p2);
    exitcond_flatten33_mid299_fu_407_p2 <= (not_exitcond_flatten62_mid21508_fu_391_p2 and and_ln77_2_fu_402_p2);
    exitcond_flatten62_not9_fu_386_p2 <= (icmp_ln81_reg_1310 xor ap_const_lv1_1);
    exitcond_flatten_mid259_fu_429_p2 <= (not_exitcond_flatten33_mid299_fu_423_p2 and exitcond_flatten_mid295_fu_396_p2);
    exitcond_flatten_mid295_fu_396_p2 <= (not_exitcond_flatten62_mid21508_fu_391_p2 and and_ln77_1_fu_375_p2);
    exitcond_flatten_mid295_not_fu_615_p2 <= (exitcond_flatten_mid295_reg_1337 xor ap_const_lv1_1);
    first_iter_158_fu_533_p2 <= "1" when (m_fu_118 = ap_const_lv2_0) else "0";
    first_iter_1_mid1_fu_1035_p2 <= "1" when (add_ln86_reg_1420_pp0_iter6_reg = ap_const_lv2_0) else "0";
    first_iter_1_mid228_fu_1030_p2 <= (first_iter_1_mid253_fu_1013_p2 or exitcond_flatten_mid259_reg_1367_pp0_iter6_reg);
    first_iter_1_mid253_fu_1013_p2 <= (first_iter_1_mid289_fu_984_p2 or exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg);
    first_iter_1_mid289_fu_984_p2 <= (or_ln77_3_fu_951_p2 or and_ln77_3_reg_1315_pp0_iter6_reg);
    first_iter_1_mid2_fu_1040_p3 <= 
        first_iter_1_mid1_fu_1035_p2 when (icmp_ln87_mid230_reg_1415_pp0_iter6_reg(0) = '1') else 
        first_iter_1_mid228_fu_1030_p2;
    first_iter_256_fu_527_p2 <= "1" when (ic_fu_126 = ap_const_lv6_0) else "0";
    first_iter_2_mid1_fu_1018_p2 <= "1" when (add_ln84_reg_1410_pp0_iter6_reg = ap_const_lv6_0) else "0";
    first_iter_2_mid249_fu_1008_p2 <= (first_iter_2_mid285_fu_979_p2 or exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg);
    first_iter_2_mid285_fu_979_p2 <= (or_ln77_2_fu_947_p2 or and_ln77_3_reg_1315_pp0_iter6_reg);
    first_iter_2_mid2_fu_1023_p3 <= 
        first_iter_2_mid1_fu_1018_p2 when (exitcond_flatten_mid259_reg_1367_pp0_iter6_reg(0) = '1') else 
        first_iter_2_mid249_fu_1008_p2;
    first_iter_354_fu_521_p2 <= "1" when (j_fu_134 = ap_const_lv5_0) else "0";
    first_iter_3_mid1_fu_996_p2 <= "1" when (add_ln81_reg_1405_pp0_iter6_reg = ap_const_lv5_0) else "0";
    first_iter_3_mid281_fu_974_p2 <= (or_ln77_1_fu_943_p2 or and_ln77_3_reg_1315_pp0_iter6_reg);
    first_iter_3_mid2_fu_1001_p3 <= 
        first_iter_3_mid1_fu_996_p2 when (exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg(0) = '1') else 
        first_iter_3_mid281_fu_974_p2;
    first_iter_451_fu_515_p2 <= "1" when (i_fu_142 = ap_const_lv5_0) else "0";
    first_iter_4_mid1_fu_962_p2 <= "1" when (add_ln79_reg_1400_pp0_iter6_reg = ap_const_lv5_0) else "0";
    first_iter_4_mid2_fu_967_p3 <= 
        first_iter_4_mid1_fu_962_p2 when (and_ln77_3_reg_1315_pp0_iter6_reg(0) = '1') else 
        or_ln77_fu_939_p2;
    ic_mid239_fu_588_p3 <= 
        ap_const_lv6_0 when (empty_64_reg_1357(0) = '1') else 
        ic_fu_126;
    icmp_ln77_fu_278_p2 <= "1" when (indvar_flatten151_fu_154 = ap_const_lv22_240000) else "0";
    icmp_ln79_fu_290_p2 <= "1" when (indvar_flatten100_fu_146 = ap_const_lv18_12000) else "0";
    icmp_ln81_fu_302_p2 <= "1" when (indvar_flatten60_fu_138 = ap_const_lv14_1200) else "0";
    icmp_ln84_1_fu_804_p2 <= "1" when (select_ln84_fu_636_p3 = ap_const_lv6_1F) else "0";
    icmp_ln84_fu_380_p2 <= "1" when (indvar_flatten31_fu_130 = ap_const_lv10_120) else "0";
    icmp_ln86_1_fu_798_p2 <= "1" when (select_ln86_fu_672_p3 = ap_const_lv2_2) else "0";
    icmp_ln86_fu_369_p2 <= "1" when (indvar_flatten_fu_122 = ap_const_lv4_9) else "0";
    icmp_ln87_1_fu_1055_p2 <= "0" when (n_mid2_reg_1425_pp0_iter6_reg = ap_const_lv2_0) else "1";
    icmp_ln87_2_fu_792_p2 <= "1" when (add_ln87_fu_786_p2 = ap_const_lv2_3) else "0";
    icmp_ln87_fu_539_p2 <= "1" when (n_fu_114 = ap_const_lv2_3) else "0";
    icmp_ln87_mid230_fu_630_p2 <= (not_exitcond_flatten_mid259_fu_620_p2 and icmp_ln87_mid255_fu_625_p2);
    icmp_ln87_mid255_fu_625_p2 <= (not_exitcond_flatten33_mid299_reg_1362 and icmp_ln87_mid291_fu_570_p2);
    icmp_ln87_mid291_fu_570_p2 <= (not_exitcond_flatten62_mid21508_reg_1332 and and_ln77_fu_545_p2);
    icmp_ln95_fu_1152_p2 <= "1" when (signed(result_fu_1134_p4) > signed(ap_const_lv16_0)) else "0";
    input_buf_address0 <= zext_ln90_22_fu_916_p1(14 - 1 downto 0);
    input_buf_ce0 <= input_buf_ce0_local;

    input_buf_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            input_buf_ce0_local <= ap_const_logic_1;
        else 
            input_buf_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    j_mid268_fu_563_p3 <= 
        ap_const_lv5_0 when (empty_reg_1326_pp0_iter2_reg(0) = '1') else 
        j_fu_134;
    local_bias_address0 <= oc_cast_cast_fu_929_p1(5 - 1 downto 0);
    local_bias_ce0 <= local_bias_ce0_local;

    local_bias_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            local_bias_ce0_local <= ap_const_logic_1;
        else 
            local_bias_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    local_weights_address0 <= zext_ln90_20_fu_892_p1(14 - 1 downto 0);
    local_weights_ce0 <= local_weights_ce0_local;

    local_weights_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            local_weights_ce0_local <= ap_const_logic_1;
        else 
            local_weights_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    m_mid222_fu_608_p3 <= 
        ap_const_lv2_0 when (empty_66_reg_1375(0) = '1') else 
        m_fu_118;
    n_mid2_fu_664_p3 <= 
        ap_const_lv2_0 when (empty_69_fu_659_p2(0) = '1') else 
        n_fu_114;
    not_exitcond_flatten33_mid299_fu_423_p2 <= (exitcond_flatten33_mid299_fu_407_p2 xor ap_const_lv1_1);
    not_exitcond_flatten62_mid21508_fu_391_p2 <= (icmp_ln79_reg_1290 or exitcond_flatten62_not9_fu_386_p2);
    not_exitcond_flatten_mid259_fu_620_p2 <= (exitcond_flatten_mid295_not_fu_615_p2 or exitcond_flatten33_mid299_reg_1342);
    oc_cast_cast_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_70_reg_1432_pp0_iter5_reg),32));
    or_ln77_1_fu_943_p2 <= (icmp_ln79_reg_1290_pp0_iter6_reg or first_iter_354_reg_1385_pp0_iter6_reg);
    or_ln77_2_fu_947_p2 <= (icmp_ln79_reg_1290_pp0_iter6_reg or first_iter_256_reg_1390_pp0_iter6_reg);
    or_ln77_3_fu_951_p2 <= (icmp_ln79_reg_1290_pp0_iter6_reg or first_iter_158_reg_1395_pp0_iter6_reg);
    or_ln77_fu_939_p2 <= (icmp_ln79_reg_1290_pp0_iter6_reg or first_iter_451_reg_1380_pp0_iter6_reg);
    or_ln87_1_fu_1078_p2 <= (xor_ln87_1_fu_1072_p2 or or_ln87_fu_1066_p2);
    or_ln87_2_fu_1090_p2 <= (xor_ln87_2_fu_1084_p2 or or_ln87_1_fu_1078_p2);
    or_ln87_fu_1066_p2 <= (xor_ln87_fu_1060_p2 or icmp_ln87_1_fu_1055_p2);
    output_buf_address0 <= zext_ln95_fu_1174_p1(13 - 1 downto 0);
    output_buf_ce0 <= output_buf_ce0_local;

    output_buf_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            output_buf_ce0_local <= ap_const_logic_1;
        else 
            output_buf_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    output_buf_d0 <= select_ln95_fu_1158_p3;
    output_buf_we0 <= output_buf_we0_local;

    output_buf_we0_local_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001, icmp_ln87_2_reg_1461_pp0_iter7_reg, icmp_ln86_1_reg_1465_pp0_iter7_reg, icmp_ln84_1_reg_1469_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln84_1_reg_1469_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln86_1_reg_1465_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln87_2_reg_1461_pp0_iter7_reg = ap_const_lv1_1))) then 
            output_buf_we0_local <= ap_const_logic_1;
        else 
            output_buf_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    p_shl3_fu_846_p3 <= (add_ln90_18_reg_1449 & ap_const_lv2_0);
    p_shl_fu_740_p4 <= ((empty_70_fu_680_p1 & trunc_ln90_fu_696_p1) & ap_const_lv2_0);
    result_fu_1134_p1 <= grp_fu_1183_p3;
    result_fu_1134_p4 <= result_fu_1134_p1(27 downto 12);
    select_ln77_1_fu_550_p3 <= 
        add_ln77_fu_502_p2 when (icmp_ln79_reg_1290_pp0_iter2_reg(0) = '1') else 
        oc_fu_150;
    select_ln77_fu_508_p3 <= 
        ap_const_lv5_0 when (icmp_ln79_reg_1290_pp0_iter2_reg(0) = '1') else 
        i_fu_142;
    select_ln79_1_fu_1100_p3 <= 
        sext_ln79_fu_1096_p1 when (first_iter_4_mid2_fu_967_p3(0) = '1') else 
        sext_ln7910_fu_158;
    select_ln79_2_fu_1108_p3 <= 
        sext_ln79_fu_1096_p1 when (first_iter_4_mid2_fu_967_p3(0) = '1') else 
        sum_9_mid247_fu_989_p3;
    select_ln79_3_fu_340_p3 <= 
        ap_const_lv18_1 when (icmp_ln79_fu_290_p2(0) = '1') else 
        add_ln79_1_fu_334_p2;
    select_ln79_fu_575_p3 <= 
        add_ln79_fu_557_p2 when (and_ln77_3_reg_1315_pp0_iter2_reg(0) = '1') else 
        select_ln77_fu_508_p3;
    select_ln81_1_fu_326_p3 <= 
        ap_const_lv14_1 when (empty_fu_314_p2(0) = '1') else 
        add_ln81_1_fu_320_p2;
    select_ln81_fu_595_p3 <= 
        add_ln81_fu_582_p2 when (exitcond_flatten33_mid299_reg_1342(0) = '1') else 
        j_mid268_fu_563_p3;
    select_ln84_1_fu_466_p3 <= 
        ap_const_lv10_1 when (empty_64_fu_418_p2(0) = '1') else 
        add_ln84_1_fu_460_p2;
    select_ln84_fu_636_p3 <= 
        add_ln84_fu_602_p2 when (exitcond_flatten_mid259_reg_1367(0) = '1') else 
        ic_mid239_fu_588_p3;
    select_ln86_1_fu_452_p3 <= 
        ap_const_lv4_1 when (empty_66_fu_441_p2(0) = '1') else 
        add_ln86_1_fu_446_p2;
    select_ln86_fu_672_p3 <= 
        add_ln86_fu_643_p2 when (icmp_ln87_mid230_fu_630_p2(0) = '1') else 
        m_mid222_fu_608_p3;
    select_ln95_fu_1158_p3 <= 
        trunc_ln94_2_fu_1143_p4 when (icmp_ln95_fu_1152_p2(0) = '1') else 
        ap_const_lv15_0;
        sext_ln79_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_fu_1047_p3),32));

    shl_ln90_fu_712_p2 <= std_logic_vector(shift_left(unsigned(select_ln84_fu_636_p3),to_integer(unsigned('0' & ap_const_lv6_1(6-1 downto 0)))));
    sub_ln90_3_fu_853_p2 <= std_logic_vector(unsigned(p_shl3_fu_846_p3) - unsigned(zext_ln90_17_fu_843_p1));
    sub_ln90_fu_750_p2 <= std_logic_vector(unsigned(p_shl_fu_740_p4) - unsigned(zext_ln90_15_fu_736_p1));
    sum_9_mid247_fu_989_p3 <= 
        sext_ln7910_fu_158 when (exitcond_flatten33_mid299_reg_1342_pp0_iter6_reg(0) = '1') else 
        sum_9_mid279_fu_955_p3;
    sum_9_mid279_fu_955_p3 <= 
        sext_ln7910_fu_158 when (and_ln77_3_reg_1315_pp0_iter6_reg(0) = '1') else 
        ap_sig_allocacmp_sum_2_load;
    sum_fu_1047_p3 <= (local_bias_q0 & ap_const_lv12_0);
    tmp_39_fu_1167_p4 <= ((empty_70_reg_1432_pp0_iter7_reg & trunc_ln95_reg_1438_pp0_iter7_reg) & trunc_ln89_reg_1443_pp0_iter7_reg);
    tmp_52_fu_859_p3 <= (add_ln90_19_reg_1455 & ap_const_lv4_0);
    tmp_53_fu_866_p3 <= (add_ln90_19_reg_1455 & ap_const_lv1_0);
    tmp_fu_700_p3 <= (trunc_ln90_fu_696_p1 & ap_const_lv4_0);
    tmp_s_fu_728_p3 <= (empty_70_fu_680_p1 & trunc_ln90_fu_696_p1);
    trunc_ln89_fu_692_p1 <= select_ln81_fu_595_p3(4 - 1 downto 0);
    trunc_ln90_fu_696_p1 <= select_ln84_fu_636_p3(5 - 1 downto 0);
    trunc_ln94_2_fu_1143_p1 <= grp_fu_1183_p3;
    trunc_ln94_2_fu_1143_p4 <= trunc_ln94_2_fu_1143_p1(26 downto 12);
    trunc_ln95_fu_684_p1 <= select_ln79_fu_575_p3(4 - 1 downto 0);
    xor_ln77_fu_296_p2 <= (icmp_ln79_fu_290_p2 xor ap_const_lv1_1);
    xor_ln87_1_fu_1072_p2 <= (first_iter_2_mid2_fu_1023_p3 xor ap_const_lv1_1);
    xor_ln87_2_fu_1084_p2 <= (first_iter_3_mid2_fu_1001_p3 xor ap_const_lv1_1);
    xor_ln87_fu_1060_p2 <= (first_iter_1_mid2_fu_1040_p3 xor ap_const_lv1_1);
    zext_ln81_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln95_fu_684_p1),5));
    zext_ln83_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_866_p3),14));
    zext_ln89_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln89_reg_1443),5));
    zext_ln90_14_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln90_fu_712_p2),10));
    zext_ln90_15_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_728_p3),12));
    zext_ln90_16_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_fu_672_p3),12));
    zext_ln90_17_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln90_18_reg_1449),14));
    zext_ln90_18_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln90_fu_770_p2),10));
    zext_ln90_19_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_mid2_reg_1425),14));
    zext_ln90_20_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln90_20_fu_886_p2),32));
    zext_ln90_21_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln90_3_fu_900_p2),14));
    zext_ln90_22_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln90_21_fu_910_p2),32));
    zext_ln90_4_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln86_fu_672_p3),5));
    zext_ln90_5_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_mid2_reg_1425),5));
    zext_ln90_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_700_p3),10));
    zext_ln95_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_1167_p4),32));
end behav;
